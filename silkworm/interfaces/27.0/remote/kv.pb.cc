// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: remote/kv.proto
// Protobuf C++ Version: 5.27.0

#include "remote/kv.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace remote {

inline constexpr StateChangeRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : with_storage_{false},
        with_transactions_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR StateChangeRequest::StateChangeRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct StateChangeRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StateChangeRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StateChangeRequestDefaultTypeInternal() {}
  union {
    StateChangeRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StateChangeRequestDefaultTypeInternal _StateChangeRequest_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR SnapshotsRequest::SnapshotsRequest(::_pbi::ConstantInitialized) {}
struct SnapshotsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SnapshotsRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SnapshotsRequestDefaultTypeInternal() {}
  union {
    SnapshotsRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SnapshotsRequestDefaultTypeInternal _SnapshotsRequest_default_instance_;

inline constexpr SnapshotsReply::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : blocks_files_{},
        history_files_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SnapshotsReply::SnapshotsReply(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SnapshotsReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SnapshotsReplyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SnapshotsReplyDefaultTypeInternal() {}
  union {
    SnapshotsReply _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SnapshotsReplyDefaultTypeInternal _SnapshotsReply_default_instance_;

inline constexpr RangeReq::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : table_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        from_prefix_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        to_prefix_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        page_token_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        tx_id_{::uint64_t{0u}},
        limit_{::int64_t{0}},
        order_ascend_{false},
        page_size_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RangeReq::RangeReq(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RangeReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RangeReqDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RangeReqDefaultTypeInternal() {}
  union {
    RangeReq _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RangeReqDefaultTypeInternal _RangeReq_default_instance_;

inline constexpr RangeAsOfReq::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : table_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        from_key_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        to_key_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        page_token_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        tx_id_{::uint64_t{0u}},
        ts_{::uint64_t{0u}},
        latest_{false},
        order_ascend_{false},
        page_size_{0},
        limit_{::int64_t{0}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RangeAsOfReq::RangeAsOfReq(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RangeAsOfReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RangeAsOfReqDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RangeAsOfReqDefaultTypeInternal() {}
  union {
    RangeAsOfReq _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RangeAsOfReqDefaultTypeInternal _RangeAsOfReq_default_instance_;

inline constexpr PairsPagination::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : next_key_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        limit_{::int64_t{0}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PairsPagination::PairsPagination(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PairsPaginationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PairsPaginationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PairsPaginationDefaultTypeInternal() {}
  union {
    PairsPagination _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PairsPaginationDefaultTypeInternal _PairsPagination_default_instance_;

inline constexpr Pairs::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : keys_{},
        values_{},
        next_page_token_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Pairs::Pairs(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PairsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PairsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PairsDefaultTypeInternal() {}
  union {
    Pairs _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PairsDefaultTypeInternal _Pairs_default_instance_;

inline constexpr Pair::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : k_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        v_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        view_id_{::uint64_t{0u}},
        tx_id_{::uint64_t{0u}},
        cursor_id_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Pair::Pair(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PairDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PairDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PairDefaultTypeInternal() {}
  union {
    Pair _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PairDefaultTypeInternal _Pair_default_instance_;

inline constexpr IndexRangeReq::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : table_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        k_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        page_token_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        tx_id_{::uint64_t{0u}},
        from_ts_{::int64_t{0}},
        to_ts_{::int64_t{0}},
        limit_{::int64_t{0}},
        order_ascend_{false},
        page_size_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR IndexRangeReq::IndexRangeReq(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct IndexRangeReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR IndexRangeReqDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~IndexRangeReqDefaultTypeInternal() {}
  union {
    IndexRangeReq _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 IndexRangeReqDefaultTypeInternal _IndexRangeReq_default_instance_;

inline constexpr IndexRangeReply::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : timestamps_{},
        _timestamps_cached_byte_size_{0},
        next_page_token_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR IndexRangeReply::IndexRangeReply(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct IndexRangeReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR IndexRangeReplyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~IndexRangeReplyDefaultTypeInternal() {}
  union {
    IndexRangeReply _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 IndexRangeReplyDefaultTypeInternal _IndexRangeReply_default_instance_;

inline constexpr IndexPagination::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : next_time_stamp_{::int64_t{0}},
        limit_{::int64_t{0}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR IndexPagination::IndexPagination(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct IndexPaginationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR IndexPaginationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~IndexPaginationDefaultTypeInternal() {}
  union {
    IndexPagination _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 IndexPaginationDefaultTypeInternal _IndexPagination_default_instance_;

inline constexpr HistorySeekReq::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : table_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        k_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        tx_id_{::uint64_t{0u}},
        ts_{::uint64_t{0u}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR HistorySeekReq::HistorySeekReq(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct HistorySeekReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HistorySeekReqDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~HistorySeekReqDefaultTypeInternal() {}
  union {
    HistorySeekReq _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HistorySeekReqDefaultTypeInternal _HistorySeekReq_default_instance_;

inline constexpr HistorySeekReply::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : v_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        ok_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR HistorySeekReply::HistorySeekReply(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct HistorySeekReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HistorySeekReplyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~HistorySeekReplyDefaultTypeInternal() {}
  union {
    HistorySeekReply _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HistorySeekReplyDefaultTypeInternal _HistorySeekReply_default_instance_;

inline constexpr HistoryRangeReq::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : table_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        page_token_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        tx_id_{::uint64_t{0u}},
        from_ts_{::int64_t{0}},
        to_ts_{::int64_t{0}},
        limit_{::int64_t{0}},
        order_ascend_{false},
        page_size_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR HistoryRangeReq::HistoryRangeReq(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct HistoryRangeReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HistoryRangeReqDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~HistoryRangeReqDefaultTypeInternal() {}
  union {
    HistoryRangeReq _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HistoryRangeReqDefaultTypeInternal _HistoryRangeReq_default_instance_;

inline constexpr GetLatestReq::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : table_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        k_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        k2_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        tx_id_{::uint64_t{0u}},
        ts_{::uint64_t{0u}},
        latest_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GetLatestReq::GetLatestReq(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GetLatestReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetLatestReqDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetLatestReqDefaultTypeInternal() {}
  union {
    GetLatestReq _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetLatestReqDefaultTypeInternal _GetLatestReq_default_instance_;

inline constexpr GetLatestReply::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : v_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        ok_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GetLatestReply::GetLatestReply(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GetLatestReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetLatestReplyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetLatestReplyDefaultTypeInternal() {}
  union {
    GetLatestReply _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetLatestReplyDefaultTypeInternal _GetLatestReply_default_instance_;

inline constexpr Cursor::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : bucket_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        k_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        v_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        op_{static_cast< ::remote::Op >(0)},
        cursor_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Cursor::Cursor(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CursorDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CursorDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CursorDefaultTypeInternal() {}
  union {
    Cursor _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CursorDefaultTypeInternal _Cursor_default_instance_;

inline constexpr StorageChange::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        data_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        location_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR StorageChange::StorageChange(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct StorageChangeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StorageChangeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StorageChangeDefaultTypeInternal() {}
  union {
    StorageChange _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StorageChangeDefaultTypeInternal _StorageChange_default_instance_;

inline constexpr AccountChange::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        storage_changes_{},
        data_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        code_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        address_{nullptr},
        incarnation_{::uint64_t{0u}},
        action_{static_cast< ::remote::Action >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR AccountChange::AccountChange(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AccountChangeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AccountChangeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AccountChangeDefaultTypeInternal() {}
  union {
    AccountChange _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AccountChangeDefaultTypeInternal _AccountChange_default_instance_;

inline constexpr StateChange::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        changes_{},
        txs_{},
        block_hash_{nullptr},
        block_height_{::uint64_t{0u}},
        direction_{static_cast< ::remote::Direction >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR StateChange::StateChange(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct StateChangeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StateChangeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StateChangeDefaultTypeInternal() {}
  union {
    StateChange _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StateChangeDefaultTypeInternal _StateChange_default_instance_;

inline constexpr StateChangeBatch::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : change_batch_{},
        state_version_id_{::uint64_t{0u}},
        pending_block_base_fee_{::uint64_t{0u}},
        block_gas_limit_{::uint64_t{0u}},
        finalized_block_{::uint64_t{0u}},
        pending_blob_fee_per_gas_{::uint64_t{0u}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR StateChangeBatch::StateChangeBatch(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct StateChangeBatchDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StateChangeBatchDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StateChangeBatchDefaultTypeInternal() {}
  union {
    StateChangeBatch _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StateChangeBatchDefaultTypeInternal _StateChangeBatch_default_instance_;
}  // namespace remote
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_remote_2fkv_2eproto[3];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_remote_2fkv_2eproto = nullptr;
const ::uint32_t
    TableStruct_remote_2fkv_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::remote::Cursor, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::remote::Cursor, _impl_.op_),
        PROTOBUF_FIELD_OFFSET(::remote::Cursor, _impl_.bucket_name_),
        PROTOBUF_FIELD_OFFSET(::remote::Cursor, _impl_.cursor_),
        PROTOBUF_FIELD_OFFSET(::remote::Cursor, _impl_.k_),
        PROTOBUF_FIELD_OFFSET(::remote::Cursor, _impl_.v_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::remote::Pair, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::remote::Pair, _impl_.k_),
        PROTOBUF_FIELD_OFFSET(::remote::Pair, _impl_.v_),
        PROTOBUF_FIELD_OFFSET(::remote::Pair, _impl_.cursor_id_),
        PROTOBUF_FIELD_OFFSET(::remote::Pair, _impl_.view_id_),
        PROTOBUF_FIELD_OFFSET(::remote::Pair, _impl_.tx_id_),
        PROTOBUF_FIELD_OFFSET(::remote::StorageChange, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::remote::StorageChange, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::remote::StorageChange, _impl_.location_),
        PROTOBUF_FIELD_OFFSET(::remote::StorageChange, _impl_.data_),
        0,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::remote::AccountChange, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::remote::AccountChange, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::remote::AccountChange, _impl_.address_),
        PROTOBUF_FIELD_OFFSET(::remote::AccountChange, _impl_.incarnation_),
        PROTOBUF_FIELD_OFFSET(::remote::AccountChange, _impl_.action_),
        PROTOBUF_FIELD_OFFSET(::remote::AccountChange, _impl_.data_),
        PROTOBUF_FIELD_OFFSET(::remote::AccountChange, _impl_.code_),
        PROTOBUF_FIELD_OFFSET(::remote::AccountChange, _impl_.storage_changes_),
        0,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::remote::StateChangeBatch, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::remote::StateChangeBatch, _impl_.state_version_id_),
        PROTOBUF_FIELD_OFFSET(::remote::StateChangeBatch, _impl_.change_batch_),
        PROTOBUF_FIELD_OFFSET(::remote::StateChangeBatch, _impl_.pending_block_base_fee_),
        PROTOBUF_FIELD_OFFSET(::remote::StateChangeBatch, _impl_.block_gas_limit_),
        PROTOBUF_FIELD_OFFSET(::remote::StateChangeBatch, _impl_.finalized_block_),
        PROTOBUF_FIELD_OFFSET(::remote::StateChangeBatch, _impl_.pending_blob_fee_per_gas_),
        PROTOBUF_FIELD_OFFSET(::remote::StateChange, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::remote::StateChange, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::remote::StateChange, _impl_.direction_),
        PROTOBUF_FIELD_OFFSET(::remote::StateChange, _impl_.block_height_),
        PROTOBUF_FIELD_OFFSET(::remote::StateChange, _impl_.block_hash_),
        PROTOBUF_FIELD_OFFSET(::remote::StateChange, _impl_.changes_),
        PROTOBUF_FIELD_OFFSET(::remote::StateChange, _impl_.txs_),
        ~0u,
        ~0u,
        0,
        ~0u,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::remote::StateChangeRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::remote::StateChangeRequest, _impl_.with_storage_),
        PROTOBUF_FIELD_OFFSET(::remote::StateChangeRequest, _impl_.with_transactions_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::remote::SnapshotsRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::remote::SnapshotsReply, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::remote::SnapshotsReply, _impl_.blocks_files_),
        PROTOBUF_FIELD_OFFSET(::remote::SnapshotsReply, _impl_.history_files_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::remote::RangeReq, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::remote::RangeReq, _impl_.tx_id_),
        PROTOBUF_FIELD_OFFSET(::remote::RangeReq, _impl_.table_),
        PROTOBUF_FIELD_OFFSET(::remote::RangeReq, _impl_.from_prefix_),
        PROTOBUF_FIELD_OFFSET(::remote::RangeReq, _impl_.to_prefix_),
        PROTOBUF_FIELD_OFFSET(::remote::RangeReq, _impl_.order_ascend_),
        PROTOBUF_FIELD_OFFSET(::remote::RangeReq, _impl_.limit_),
        PROTOBUF_FIELD_OFFSET(::remote::RangeReq, _impl_.page_size_),
        PROTOBUF_FIELD_OFFSET(::remote::RangeReq, _impl_.page_token_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::remote::GetLatestReq, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::remote::GetLatestReq, _impl_.tx_id_),
        PROTOBUF_FIELD_OFFSET(::remote::GetLatestReq, _impl_.table_),
        PROTOBUF_FIELD_OFFSET(::remote::GetLatestReq, _impl_.k_),
        PROTOBUF_FIELD_OFFSET(::remote::GetLatestReq, _impl_.ts_),
        PROTOBUF_FIELD_OFFSET(::remote::GetLatestReq, _impl_.k2_),
        PROTOBUF_FIELD_OFFSET(::remote::GetLatestReq, _impl_.latest_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::remote::GetLatestReply, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::remote::GetLatestReply, _impl_.v_),
        PROTOBUF_FIELD_OFFSET(::remote::GetLatestReply, _impl_.ok_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::remote::HistorySeekReq, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::remote::HistorySeekReq, _impl_.tx_id_),
        PROTOBUF_FIELD_OFFSET(::remote::HistorySeekReq, _impl_.table_),
        PROTOBUF_FIELD_OFFSET(::remote::HistorySeekReq, _impl_.k_),
        PROTOBUF_FIELD_OFFSET(::remote::HistorySeekReq, _impl_.ts_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::remote::HistorySeekReply, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::remote::HistorySeekReply, _impl_.v_),
        PROTOBUF_FIELD_OFFSET(::remote::HistorySeekReply, _impl_.ok_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::remote::IndexRangeReq, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::remote::IndexRangeReq, _impl_.tx_id_),
        PROTOBUF_FIELD_OFFSET(::remote::IndexRangeReq, _impl_.table_),
        PROTOBUF_FIELD_OFFSET(::remote::IndexRangeReq, _impl_.k_),
        PROTOBUF_FIELD_OFFSET(::remote::IndexRangeReq, _impl_.from_ts_),
        PROTOBUF_FIELD_OFFSET(::remote::IndexRangeReq, _impl_.to_ts_),
        PROTOBUF_FIELD_OFFSET(::remote::IndexRangeReq, _impl_.order_ascend_),
        PROTOBUF_FIELD_OFFSET(::remote::IndexRangeReq, _impl_.limit_),
        PROTOBUF_FIELD_OFFSET(::remote::IndexRangeReq, _impl_.page_size_),
        PROTOBUF_FIELD_OFFSET(::remote::IndexRangeReq, _impl_.page_token_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::remote::IndexRangeReply, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::remote::IndexRangeReply, _impl_.timestamps_),
        PROTOBUF_FIELD_OFFSET(::remote::IndexRangeReply, _impl_.next_page_token_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::remote::HistoryRangeReq, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::remote::HistoryRangeReq, _impl_.tx_id_),
        PROTOBUF_FIELD_OFFSET(::remote::HistoryRangeReq, _impl_.table_),
        PROTOBUF_FIELD_OFFSET(::remote::HistoryRangeReq, _impl_.from_ts_),
        PROTOBUF_FIELD_OFFSET(::remote::HistoryRangeReq, _impl_.to_ts_),
        PROTOBUF_FIELD_OFFSET(::remote::HistoryRangeReq, _impl_.order_ascend_),
        PROTOBUF_FIELD_OFFSET(::remote::HistoryRangeReq, _impl_.limit_),
        PROTOBUF_FIELD_OFFSET(::remote::HistoryRangeReq, _impl_.page_size_),
        PROTOBUF_FIELD_OFFSET(::remote::HistoryRangeReq, _impl_.page_token_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::remote::RangeAsOfReq, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::remote::RangeAsOfReq, _impl_.tx_id_),
        PROTOBUF_FIELD_OFFSET(::remote::RangeAsOfReq, _impl_.table_),
        PROTOBUF_FIELD_OFFSET(::remote::RangeAsOfReq, _impl_.from_key_),
        PROTOBUF_FIELD_OFFSET(::remote::RangeAsOfReq, _impl_.to_key_),
        PROTOBUF_FIELD_OFFSET(::remote::RangeAsOfReq, _impl_.ts_),
        PROTOBUF_FIELD_OFFSET(::remote::RangeAsOfReq, _impl_.latest_),
        PROTOBUF_FIELD_OFFSET(::remote::RangeAsOfReq, _impl_.order_ascend_),
        PROTOBUF_FIELD_OFFSET(::remote::RangeAsOfReq, _impl_.limit_),
        PROTOBUF_FIELD_OFFSET(::remote::RangeAsOfReq, _impl_.page_size_),
        PROTOBUF_FIELD_OFFSET(::remote::RangeAsOfReq, _impl_.page_token_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::remote::Pairs, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::remote::Pairs, _impl_.keys_),
        PROTOBUF_FIELD_OFFSET(::remote::Pairs, _impl_.values_),
        PROTOBUF_FIELD_OFFSET(::remote::Pairs, _impl_.next_page_token_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::remote::PairsPagination, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::remote::PairsPagination, _impl_.next_key_),
        PROTOBUF_FIELD_OFFSET(::remote::PairsPagination, _impl_.limit_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::remote::IndexPagination, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::remote::IndexPagination, _impl_.next_time_stamp_),
        PROTOBUF_FIELD_OFFSET(::remote::IndexPagination, _impl_.limit_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::remote::Cursor)},
        {13, -1, -1, sizeof(::remote::Pair)},
        {26, 36, -1, sizeof(::remote::StorageChange)},
        {38, 52, -1, sizeof(::remote::AccountChange)},
        {58, -1, -1, sizeof(::remote::StateChangeBatch)},
        {72, 85, -1, sizeof(::remote::StateChange)},
        {90, -1, -1, sizeof(::remote::StateChangeRequest)},
        {100, -1, -1, sizeof(::remote::SnapshotsRequest)},
        {108, -1, -1, sizeof(::remote::SnapshotsReply)},
        {118, -1, -1, sizeof(::remote::RangeReq)},
        {134, -1, -1, sizeof(::remote::GetLatestReq)},
        {148, -1, -1, sizeof(::remote::GetLatestReply)},
        {158, -1, -1, sizeof(::remote::HistorySeekReq)},
        {170, -1, -1, sizeof(::remote::HistorySeekReply)},
        {180, -1, -1, sizeof(::remote::IndexRangeReq)},
        {197, -1, -1, sizeof(::remote::IndexRangeReply)},
        {207, -1, -1, sizeof(::remote::HistoryRangeReq)},
        {223, -1, -1, sizeof(::remote::RangeAsOfReq)},
        {241, -1, -1, sizeof(::remote::Pairs)},
        {252, -1, -1, sizeof(::remote::PairsPagination)},
        {262, -1, -1, sizeof(::remote::IndexPagination)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::remote::_Cursor_default_instance_._instance,
    &::remote::_Pair_default_instance_._instance,
    &::remote::_StorageChange_default_instance_._instance,
    &::remote::_AccountChange_default_instance_._instance,
    &::remote::_StateChangeBatch_default_instance_._instance,
    &::remote::_StateChange_default_instance_._instance,
    &::remote::_StateChangeRequest_default_instance_._instance,
    &::remote::_SnapshotsRequest_default_instance_._instance,
    &::remote::_SnapshotsReply_default_instance_._instance,
    &::remote::_RangeReq_default_instance_._instance,
    &::remote::_GetLatestReq_default_instance_._instance,
    &::remote::_GetLatestReply_default_instance_._instance,
    &::remote::_HistorySeekReq_default_instance_._instance,
    &::remote::_HistorySeekReply_default_instance_._instance,
    &::remote::_IndexRangeReq_default_instance_._instance,
    &::remote::_IndexRangeReply_default_instance_._instance,
    &::remote::_HistoryRangeReq_default_instance_._instance,
    &::remote::_RangeAsOfReq_default_instance_._instance,
    &::remote::_Pairs_default_instance_._instance,
    &::remote::_PairsPagination_default_instance_._instance,
    &::remote::_IndexPagination_default_instance_._instance,
};
const char descriptor_table_protodef_remote_2fkv_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\017remote/kv.proto\022\006remote\032\033google/protob"
    "uf/empty.proto\032\021types/types.proto\"[\n\006Cur"
    "sor\022\026\n\002op\030\001 \001(\0162\n.remote.Op\022\023\n\013bucket_na"
    "me\030\002 \001(\t\022\016\n\006cursor\030\003 \001(\r\022\t\n\001k\030\004 \001(\014\022\t\n\001v"
    "\030\005 \001(\014\"O\n\004Pair\022\t\n\001k\030\001 \001(\014\022\t\n\001v\030\002 \001(\014\022\021\n\t"
    "cursor_id\030\003 \001(\r\022\017\n\007view_id\030\004 \001(\004\022\r\n\005tx_i"
    "d\030\005 \001(\004\"<\n\rStorageChange\022\035\n\010location\030\001 \001"
    "(\0132\013.types.H256\022\014\n\004data\030\002 \001(\014\"\256\001\n\rAccoun"
    "tChange\022\034\n\007address\030\001 \001(\0132\013.types.H160\022\023\n"
    "\013incarnation\030\002 \001(\004\022\036\n\006action\030\003 \001(\0162\016.rem"
    "ote.Action\022\014\n\004data\030\004 \001(\014\022\014\n\004code\030\005 \001(\014\022."
    "\n\017storage_changes\030\006 \003(\0132\025.remote.Storage"
    "Change\"\313\001\n\020StateChangeBatch\022\030\n\020state_ver"
    "sion_id\030\001 \001(\004\022)\n\014change_batch\030\002 \003(\0132\023.re"
    "mote.StateChange\022\036\n\026pending_block_base_f"
    "ee\030\003 \001(\004\022\027\n\017block_gas_limit\030\004 \001(\004\022\027\n\017fin"
    "alized_block\030\005 \001(\004\022 \n\030pending_blob_fee_p"
    "er_gas\030\006 \001(\004\"\237\001\n\013StateChange\022$\n\tdirectio"
    "n\030\001 \001(\0162\021.remote.Direction\022\024\n\014block_heig"
    "ht\030\002 \001(\004\022\037\n\nblock_hash\030\003 \001(\0132\013.types.H25"
    "6\022&\n\007changes\030\004 \003(\0132\025.remote.AccountChang"
    "e\022\013\n\003txs\030\005 \003(\014\"E\n\022StateChangeRequest\022\024\n\014"
    "with_storage\030\001 \001(\010\022\031\n\021with_transactions\030"
    "\002 \001(\010\"\022\n\020SnapshotsRequest\"=\n\016SnapshotsRe"
    "ply\022\024\n\014blocks_files\030\001 \003(\t\022\025\n\rhistory_fil"
    "es\030\002 \003(\t\"\234\001\n\010RangeReq\022\r\n\005tx_id\030\001 \001(\004\022\r\n\005"
    "table\030\002 \001(\t\022\023\n\013from_prefix\030\003 \001(\014\022\021\n\tto_p"
    "refix\030\004 \001(\014\022\024\n\014order_ascend\030\005 \001(\010\022\r\n\005lim"
    "it\030\006 \001(\022\022\021\n\tpage_size\030\007 \001(\005\022\022\n\npage_toke"
    "n\030\010 \001(\t\"_\n\014GetLatestReq\022\r\n\005tx_id\030\001 \001(\004\022\r"
    "\n\005table\030\002 \001(\t\022\t\n\001k\030\003 \001(\014\022\n\n\002ts\030\004 \001(\004\022\n\n\002"
    "k2\030\005 \001(\014\022\016\n\006latest\030\006 \001(\010\"\'\n\016GetLatestRep"
    "ly\022\t\n\001v\030\001 \001(\014\022\n\n\002ok\030\002 \001(\010\"E\n\016HistorySeek"
    "Req\022\r\n\005tx_id\030\001 \001(\004\022\r\n\005table\030\002 \001(\t\022\t\n\001k\030\003"
    " \001(\014\022\n\n\002ts\030\004 \001(\004\")\n\020HistorySeekReply\022\t\n\001"
    "v\030\001 \001(\014\022\n\n\002ok\030\002 \001(\010\"\244\001\n\rIndexRangeReq\022\r\n"
    "\005tx_id\030\001 \001(\004\022\r\n\005table\030\002 \001(\t\022\t\n\001k\030\003 \001(\014\022\017"
    "\n\007from_ts\030\004 \001(\022\022\r\n\005to_ts\030\005 \001(\022\022\024\n\014order_"
    "ascend\030\006 \001(\010\022\r\n\005limit\030\007 \001(\022\022\021\n\tpage_size"
    "\030\010 \001(\005\022\022\n\npage_token\030\t \001(\t\">\n\017IndexRange"
    "Reply\022\022\n\ntimestamps\030\001 \003(\004\022\027\n\017next_page_t"
    "oken\030\002 \001(\t\"\233\001\n\017HistoryRangeReq\022\r\n\005tx_id\030"
    "\001 \001(\004\022\r\n\005table\030\002 \001(\t\022\017\n\007from_ts\030\004 \001(\022\022\r\n"
    "\005to_ts\030\005 \001(\022\022\024\n\014order_ascend\030\006 \001(\010\022\r\n\005li"
    "mit\030\007 \001(\022\022\021\n\tpage_size\030\010 \001(\005\022\022\n\npage_tok"
    "en\030\t \001(\t\"\266\001\n\014RangeAsOfReq\022\r\n\005tx_id\030\001 \001(\004"
    "\022\r\n\005table\030\002 \001(\t\022\020\n\010from_key\030\003 \001(\014\022\016\n\006to_"
    "key\030\004 \001(\014\022\n\n\002ts\030\005 \001(\004\022\016\n\006latest\030\006 \001(\010\022\024\n"
    "\014order_ascend\030\007 \001(\010\022\r\n\005limit\030\010 \001(\022\022\021\n\tpa"
    "ge_size\030\t \001(\005\022\022\n\npage_token\030\n \001(\t\">\n\005Pai"
    "rs\022\014\n\004keys\030\001 \003(\014\022\016\n\006values\030\002 \003(\014\022\027\n\017next"
    "_page_token\030\003 \001(\t\"2\n\017PairsPagination\022\020\n\010"
    "next_key\030\001 \001(\014\022\r\n\005limit\030\002 \001(\022\"9\n\017IndexPa"
    "gination\022\027\n\017next_time_stamp\030\001 \001(\022\022\r\n\005lim"
    "it\030\002 \001(\022*\373\001\n\002Op\022\t\n\005FIRST\020\000\022\r\n\tFIRST_DUP\020"
    "\001\022\010\n\004SEEK\020\002\022\r\n\tSEEK_BOTH\020\003\022\013\n\007CURRENT\020\004\022"
    "\010\n\004LAST\020\006\022\014\n\010LAST_DUP\020\007\022\010\n\004NEXT\020\010\022\014\n\010NEX"
    "T_DUP\020\t\022\017\n\013NEXT_NO_DUP\020\013\022\010\n\004PREV\020\014\022\014\n\010PR"
    "EV_DUP\020\r\022\017\n\013PREV_NO_DUP\020\016\022\016\n\nSEEK_EXACT\020"
    "\017\022\023\n\017SEEK_BOTH_EXACT\020\020\022\010\n\004OPEN\020\036\022\t\n\005CLOS"
    "E\020\037\022\021\n\rOPEN_DUP_SORT\020 *H\n\006Action\022\013\n\007STOR"
    "AGE\020\000\022\n\n\006UPSERT\020\001\022\010\n\004CODE\020\002\022\017\n\013UPSERT_CO"
    "DE\020\003\022\n\n\006REMOVE\020\004*$\n\tDirection\022\013\n\007FORWARD"
    "\020\000\022\n\n\006UNWIND\020\0012\271\004\n\002KV\0226\n\007Version\022\026.googl"
    "e.protobuf.Empty\032\023.types.VersionReply\022&\n"
    "\002Tx\022\016.remote.Cursor\032\014.remote.Pair(\0010\001\022F\n"
    "\014StateChanges\022\032.remote.StateChangeReques"
    "t\032\030.remote.StateChangeBatch0\001\022=\n\tSnapsho"
    "ts\022\030.remote.SnapshotsRequest\032\026.remote.Sn"
    "apshotsReply\022(\n\005Range\022\020.remote.RangeReq\032"
    "\r.remote.Pairs\0229\n\tGetLatest\022\024.remote.Get"
    "LatestReq\032\026.remote.GetLatestReply\022\?\n\013His"
    "torySeek\022\026.remote.HistorySeekReq\032\030.remot"
    "e.HistorySeekReply\022<\n\nIndexRange\022\025.remot"
    "e.IndexRangeReq\032\027.remote.IndexRangeReply"
    "\0226\n\014HistoryRange\022\027.remote.HistoryRangeRe"
    "q\032\r.remote.Pairs\0220\n\tRangeAsOf\022\024.remote.R"
    "angeAsOfReq\032\r.remote.PairsB\026Z\024./remote;r"
    "emoteprotob\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_remote_2fkv_2eproto_deps[2] =
    {
        &::descriptor_table_google_2fprotobuf_2fempty_2eproto,
        &::descriptor_table_types_2ftypes_2eproto,
};
static ::absl::once_flag descriptor_table_remote_2fkv_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_remote_2fkv_2eproto = {
    false,
    false,
    3138,
    descriptor_table_protodef_remote_2fkv_2eproto,
    "remote/kv.proto",
    &descriptor_table_remote_2fkv_2eproto_once,
    descriptor_table_remote_2fkv_2eproto_deps,
    2,
    21,
    schemas,
    file_default_instances,
    TableStruct_remote_2fkv_2eproto::offsets,
    file_level_enum_descriptors_remote_2fkv_2eproto,
    file_level_service_descriptors_remote_2fkv_2eproto,
};
namespace remote {
const ::google::protobuf::EnumDescriptor* Op_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_remote_2fkv_2eproto);
  return file_level_enum_descriptors_remote_2fkv_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t Op_internal_data_[] = {
    327680u, 32u, 234885086u, };
bool Op_IsValid(int value) {
  return 0 <= value && value <= 32 && ((7516322783u >> value) & 1) != 0;
}
const ::google::protobuf::EnumDescriptor* Action_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_remote_2fkv_2eproto);
  return file_level_enum_descriptors_remote_2fkv_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t Action_internal_data_[] = {
    327680u, 0u, };
bool Action_IsValid(int value) {
  return 0 <= value && value <= 4;
}
const ::google::protobuf::EnumDescriptor* Direction_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_remote_2fkv_2eproto);
  return file_level_enum_descriptors_remote_2fkv_2eproto[2];
}
PROTOBUF_CONSTINIT const uint32_t Direction_internal_data_[] = {
    131072u, 0u, };
bool Direction_IsValid(int value) {
  return 0 <= value && value <= 1;
}
// ===================================================================

class Cursor::_Internal {
 public:
};

Cursor::Cursor(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:remote.Cursor)
}
inline PROTOBUF_NDEBUG_INLINE Cursor::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::remote::Cursor& from_msg)
      : bucket_name_(arena, from.bucket_name_),
        k_(arena, from.k_),
        v_(arena, from.v_),
        _cached_size_{0} {}

Cursor::Cursor(
    ::google::protobuf::Arena* arena,
    const Cursor& from)
    : ::google::protobuf::Message(arena) {
  Cursor* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, op_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, op_),
           offsetof(Impl_, cursor_) -
               offsetof(Impl_, op_) +
               sizeof(Impl_::cursor_));

  // @@protoc_insertion_point(copy_constructor:remote.Cursor)
}
inline PROTOBUF_NDEBUG_INLINE Cursor::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : bucket_name_(arena),
        k_(arena),
        v_(arena),
        _cached_size_{0} {}

inline void Cursor::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, op_),
           0,
           offsetof(Impl_, cursor_) -
               offsetof(Impl_, op_) +
               sizeof(Impl_::cursor_));
}
Cursor::~Cursor() {
  // @@protoc_insertion_point(destructor:remote.Cursor)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Cursor::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.bucket_name_.Destroy();
  _impl_.k_.Destroy();
  _impl_.v_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Cursor::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(Cursor, _impl_._cached_size_),
              false,
          },
          &Cursor::MergeImpl,
          &Cursor::kDescriptorMethods,
          &descriptor_table_remote_2fkv_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 33, 2> Cursor::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Cursor_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::remote::Cursor>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .remote.Op op = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Cursor, _impl_.op_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Cursor, _impl_.op_)}},
    // string bucket_name = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Cursor, _impl_.bucket_name_)}},
    // uint32 cursor = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Cursor, _impl_.cursor_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(Cursor, _impl_.cursor_)}},
    // bytes k = 4;
    {::_pbi::TcParser::FastBS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(Cursor, _impl_.k_)}},
    // bytes v = 5;
    {::_pbi::TcParser::FastBS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(Cursor, _impl_.v_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .remote.Op op = 1;
    {PROTOBUF_FIELD_OFFSET(Cursor, _impl_.op_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string bucket_name = 2;
    {PROTOBUF_FIELD_OFFSET(Cursor, _impl_.bucket_name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 cursor = 3;
    {PROTOBUF_FIELD_OFFSET(Cursor, _impl_.cursor_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // bytes k = 4;
    {PROTOBUF_FIELD_OFFSET(Cursor, _impl_.k_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // bytes v = 5;
    {PROTOBUF_FIELD_OFFSET(Cursor, _impl_.v_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\15\0\13\0\0\0\0\0"
    "remote.Cursor"
    "bucket_name"
  }},
};

PROTOBUF_NOINLINE void Cursor::Clear() {
// @@protoc_insertion_point(message_clear_start:remote.Cursor)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.bucket_name_.ClearToEmpty();
  _impl_.k_.ClearToEmpty();
  _impl_.v_.ClearToEmpty();
  ::memset(&_impl_.op_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.cursor_) -
      reinterpret_cast<char*>(&_impl_.op_)) + sizeof(_impl_.cursor_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* Cursor::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:remote.Cursor)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .remote.Op op = 1;
  if (this->_internal_op() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_op(), target);
  }

  // string bucket_name = 2;
  if (!this->_internal_bucket_name().empty()) {
    const std::string& _s = this->_internal_bucket_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "remote.Cursor.bucket_name");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // uint32 cursor = 3;
  if (this->_internal_cursor() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this->_internal_cursor(), target);
  }

  // bytes k = 4;
  if (!this->_internal_k().empty()) {
    const std::string& _s = this->_internal_k();
    target = stream->WriteBytesMaybeAliased(4, _s, target);
  }

  // bytes v = 5;
  if (!this->_internal_v().empty()) {
    const std::string& _s = this->_internal_v();
    target = stream->WriteBytesMaybeAliased(5, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:remote.Cursor)
  return target;
}

::size_t Cursor::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:remote.Cursor)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // string bucket_name = 2;
  if (!this->_internal_bucket_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_bucket_name());
  }

  // bytes k = 4;
  if (!this->_internal_k().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_k());
  }

  // bytes v = 5;
  if (!this->_internal_v().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_v());
  }

  // .remote.Op op = 1;
  if (this->_internal_op() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_op());
  }

  // uint32 cursor = 3;
  if (this->_internal_cursor() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_cursor());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Cursor::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Cursor*>(&to_msg);
  auto& from = static_cast<const Cursor&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:remote.Cursor)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_bucket_name().empty()) {
    _this->_internal_set_bucket_name(from._internal_bucket_name());
  }
  if (!from._internal_k().empty()) {
    _this->_internal_set_k(from._internal_k());
  }
  if (!from._internal_v().empty()) {
    _this->_internal_set_v(from._internal_v());
  }
  if (from._internal_op() != 0) {
    _this->_impl_.op_ = from._impl_.op_;
  }
  if (from._internal_cursor() != 0) {
    _this->_impl_.cursor_ = from._impl_.cursor_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Cursor::CopyFrom(const Cursor& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:remote.Cursor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Cursor::InternalSwap(Cursor* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.bucket_name_, &other->_impl_.bucket_name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.k_, &other->_impl_.k_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.v_, &other->_impl_.v_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Cursor, _impl_.cursor_)
      + sizeof(Cursor::_impl_.cursor_)
      - PROTOBUF_FIELD_OFFSET(Cursor, _impl_.op_)>(
          reinterpret_cast<char*>(&_impl_.op_),
          reinterpret_cast<char*>(&other->_impl_.op_));
}

::google::protobuf::Metadata Cursor::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Pair::_Internal {
 public:
};

Pair::Pair(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:remote.Pair)
}
inline PROTOBUF_NDEBUG_INLINE Pair::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::remote::Pair& from_msg)
      : k_(arena, from.k_),
        v_(arena, from.v_),
        _cached_size_{0} {}

Pair::Pair(
    ::google::protobuf::Arena* arena,
    const Pair& from)
    : ::google::protobuf::Message(arena) {
  Pair* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, view_id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, view_id_),
           offsetof(Impl_, cursor_id_) -
               offsetof(Impl_, view_id_) +
               sizeof(Impl_::cursor_id_));

  // @@protoc_insertion_point(copy_constructor:remote.Pair)
}
inline PROTOBUF_NDEBUG_INLINE Pair::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : k_(arena),
        v_(arena),
        _cached_size_{0} {}

inline void Pair::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, view_id_),
           0,
           offsetof(Impl_, cursor_id_) -
               offsetof(Impl_, view_id_) +
               sizeof(Impl_::cursor_id_));
}
Pair::~Pair() {
  // @@protoc_insertion_point(destructor:remote.Pair)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Pair::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.k_.Destroy();
  _impl_.v_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Pair::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(Pair, _impl_._cached_size_),
              false,
          },
          &Pair::MergeImpl,
          &Pair::kDescriptorMethods,
          &descriptor_table_remote_2fkv_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 0, 2> Pair::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Pair_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::remote::Pair>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // bytes k = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Pair, _impl_.k_)}},
    // bytes v = 2;
    {::_pbi::TcParser::FastBS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Pair, _impl_.v_)}},
    // uint32 cursor_id = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Pair, _impl_.cursor_id_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(Pair, _impl_.cursor_id_)}},
    // uint64 view_id = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Pair, _impl_.view_id_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(Pair, _impl_.view_id_)}},
    // uint64 tx_id = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Pair, _impl_.tx_id_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(Pair, _impl_.tx_id_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes k = 1;
    {PROTOBUF_FIELD_OFFSET(Pair, _impl_.k_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // bytes v = 2;
    {PROTOBUF_FIELD_OFFSET(Pair, _impl_.v_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // uint32 cursor_id = 3;
    {PROTOBUF_FIELD_OFFSET(Pair, _impl_.cursor_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint64 view_id = 4;
    {PROTOBUF_FIELD_OFFSET(Pair, _impl_.view_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint64 tx_id = 5;
    {PROTOBUF_FIELD_OFFSET(Pair, _impl_.tx_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void Pair::Clear() {
// @@protoc_insertion_point(message_clear_start:remote.Pair)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.k_.ClearToEmpty();
  _impl_.v_.ClearToEmpty();
  ::memset(&_impl_.view_id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.cursor_id_) -
      reinterpret_cast<char*>(&_impl_.view_id_)) + sizeof(_impl_.cursor_id_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* Pair::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:remote.Pair)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bytes k = 1;
  if (!this->_internal_k().empty()) {
    const std::string& _s = this->_internal_k();
    target = stream->WriteBytesMaybeAliased(1, _s, target);
  }

  // bytes v = 2;
  if (!this->_internal_v().empty()) {
    const std::string& _s = this->_internal_v();
    target = stream->WriteBytesMaybeAliased(2, _s, target);
  }

  // uint32 cursor_id = 3;
  if (this->_internal_cursor_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this->_internal_cursor_id(), target);
  }

  // uint64 view_id = 4;
  if (this->_internal_view_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        4, this->_internal_view_id(), target);
  }

  // uint64 tx_id = 5;
  if (this->_internal_tx_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        5, this->_internal_tx_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:remote.Pair)
  return target;
}

::size_t Pair::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:remote.Pair)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // bytes k = 1;
  if (!this->_internal_k().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_k());
  }

  // bytes v = 2;
  if (!this->_internal_v().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_v());
  }

  // uint64 view_id = 4;
  if (this->_internal_view_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_view_id());
  }

  // uint64 tx_id = 5;
  if (this->_internal_tx_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_tx_id());
  }

  // uint32 cursor_id = 3;
  if (this->_internal_cursor_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_cursor_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Pair::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Pair*>(&to_msg);
  auto& from = static_cast<const Pair&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:remote.Pair)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_k().empty()) {
    _this->_internal_set_k(from._internal_k());
  }
  if (!from._internal_v().empty()) {
    _this->_internal_set_v(from._internal_v());
  }
  if (from._internal_view_id() != 0) {
    _this->_impl_.view_id_ = from._impl_.view_id_;
  }
  if (from._internal_tx_id() != 0) {
    _this->_impl_.tx_id_ = from._impl_.tx_id_;
  }
  if (from._internal_cursor_id() != 0) {
    _this->_impl_.cursor_id_ = from._impl_.cursor_id_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Pair::CopyFrom(const Pair& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:remote.Pair)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Pair::InternalSwap(Pair* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.k_, &other->_impl_.k_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.v_, &other->_impl_.v_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Pair, _impl_.cursor_id_)
      + sizeof(Pair::_impl_.cursor_id_)
      - PROTOBUF_FIELD_OFFSET(Pair, _impl_.view_id_)>(
          reinterpret_cast<char*>(&_impl_.view_id_),
          reinterpret_cast<char*>(&other->_impl_.view_id_));
}

::google::protobuf::Metadata Pair::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class StorageChange::_Internal {
 public:
  using HasBits =
      decltype(std::declval<StorageChange>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(StorageChange, _impl_._has_bits_);
};

void StorageChange::clear_location() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.location_ != nullptr) _impl_.location_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
StorageChange::StorageChange(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:remote.StorageChange)
}
inline PROTOBUF_NDEBUG_INLINE StorageChange::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::remote::StorageChange& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        data_(arena, from.data_) {}

StorageChange::StorageChange(
    ::google::protobuf::Arena* arena,
    const StorageChange& from)
    : ::google::protobuf::Message(arena) {
  StorageChange* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.location_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::types::H256>(
                              arena, *from._impl_.location_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:remote.StorageChange)
}
inline PROTOBUF_NDEBUG_INLINE StorageChange::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        data_(arena) {}

inline void StorageChange::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.location_ = {};
}
StorageChange::~StorageChange() {
  // @@protoc_insertion_point(destructor:remote.StorageChange)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void StorageChange::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.data_.Destroy();
  delete _impl_.location_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
StorageChange::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(StorageChange, _impl_._cached_size_),
              false,
          },
          &StorageChange::MergeImpl,
          &StorageChange::kDescriptorMethods,
          &descriptor_table_remote_2fkv_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> StorageChange::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(StorageChange, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_StorageChange_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::remote::StorageChange>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bytes data = 2;
    {::_pbi::TcParser::FastBS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(StorageChange, _impl_.data_)}},
    // .types.H256 location = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(StorageChange, _impl_.location_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .types.H256 location = 1;
    {PROTOBUF_FIELD_OFFSET(StorageChange, _impl_.location_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // bytes data = 2;
    {PROTOBUF_FIELD_OFFSET(StorageChange, _impl_.data_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::types::H256>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void StorageChange::Clear() {
// @@protoc_insertion_point(message_clear_start:remote.StorageChange)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.data_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.location_ != nullptr);
    _impl_.location_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* StorageChange::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:remote.StorageChange)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .types.H256 location = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *_impl_.location_, _impl_.location_->GetCachedSize(), target, stream);
  }

  // bytes data = 2;
  if (!this->_internal_data().empty()) {
    const std::string& _s = this->_internal_data();
    target = stream->WriteBytesMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:remote.StorageChange)
  return target;
}

::size_t StorageChange::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:remote.StorageChange)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // bytes data = 2;
  if (!this->_internal_data().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_data());
  }

  // .types.H256 location = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.location_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void StorageChange::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<StorageChange*>(&to_msg);
  auto& from = static_cast<const StorageChange&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:remote.StorageChange)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_data().empty()) {
    _this->_internal_set_data(from._internal_data());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.location_ != nullptr);
    if (_this->_impl_.location_ == nullptr) {
      _this->_impl_.location_ =
          ::google::protobuf::Message::CopyConstruct<::types::H256>(arena, *from._impl_.location_);
    } else {
      _this->_impl_.location_->MergeFrom(*from._impl_.location_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void StorageChange::CopyFrom(const StorageChange& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:remote.StorageChange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void StorageChange::InternalSwap(StorageChange* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.data_, &other->_impl_.data_, arena);
  swap(_impl_.location_, other->_impl_.location_);
}

::google::protobuf::Metadata StorageChange::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class AccountChange::_Internal {
 public:
  using HasBits =
      decltype(std::declval<AccountChange>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(AccountChange, _impl_._has_bits_);
};

void AccountChange::clear_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.address_ != nullptr) _impl_.address_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
AccountChange::AccountChange(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:remote.AccountChange)
}
inline PROTOBUF_NDEBUG_INLINE AccountChange::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::remote::AccountChange& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        storage_changes_{visibility, arena, from.storage_changes_},
        data_(arena, from.data_),
        code_(arena, from.code_) {}

AccountChange::AccountChange(
    ::google::protobuf::Arena* arena,
    const AccountChange& from)
    : ::google::protobuf::Message(arena) {
  AccountChange* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.address_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::types::H160>(
                              arena, *from._impl_.address_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, incarnation_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, incarnation_),
           offsetof(Impl_, action_) -
               offsetof(Impl_, incarnation_) +
               sizeof(Impl_::action_));

  // @@protoc_insertion_point(copy_constructor:remote.AccountChange)
}
inline PROTOBUF_NDEBUG_INLINE AccountChange::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        storage_changes_{visibility, arena},
        data_(arena),
        code_(arena) {}

inline void AccountChange::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, address_),
           0,
           offsetof(Impl_, action_) -
               offsetof(Impl_, address_) +
               sizeof(Impl_::action_));
}
AccountChange::~AccountChange() {
  // @@protoc_insertion_point(destructor:remote.AccountChange)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AccountChange::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.data_.Destroy();
  _impl_.code_.Destroy();
  delete _impl_.address_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
AccountChange::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(AccountChange, _impl_._cached_size_),
              false,
          },
          &AccountChange::MergeImpl,
          &AccountChange::kDescriptorMethods,
          &descriptor_table_remote_2fkv_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 2, 0, 2> AccountChange::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AccountChange, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_AccountChange_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::remote::AccountChange>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .types.H160 address = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(AccountChange, _impl_.address_)}},
    // uint64 incarnation = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(AccountChange, _impl_.incarnation_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(AccountChange, _impl_.incarnation_)}},
    // .remote.Action action = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AccountChange, _impl_.action_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(AccountChange, _impl_.action_)}},
    // bytes data = 4;
    {::_pbi::TcParser::FastBS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(AccountChange, _impl_.data_)}},
    // bytes code = 5;
    {::_pbi::TcParser::FastBS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(AccountChange, _impl_.code_)}},
    // repeated .remote.StorageChange storage_changes = 6;
    {::_pbi::TcParser::FastMtR1,
     {50, 63, 1, PROTOBUF_FIELD_OFFSET(AccountChange, _impl_.storage_changes_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .types.H160 address = 1;
    {PROTOBUF_FIELD_OFFSET(AccountChange, _impl_.address_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint64 incarnation = 2;
    {PROTOBUF_FIELD_OFFSET(AccountChange, _impl_.incarnation_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // .remote.Action action = 3;
    {PROTOBUF_FIELD_OFFSET(AccountChange, _impl_.action_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // bytes data = 4;
    {PROTOBUF_FIELD_OFFSET(AccountChange, _impl_.data_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // bytes code = 5;
    {PROTOBUF_FIELD_OFFSET(AccountChange, _impl_.code_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // repeated .remote.StorageChange storage_changes = 6;
    {PROTOBUF_FIELD_OFFSET(AccountChange, _impl_.storage_changes_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::types::H160>()},
    {::_pbi::TcParser::GetTable<::remote::StorageChange>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void AccountChange::Clear() {
// @@protoc_insertion_point(message_clear_start:remote.AccountChange)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.storage_changes_.Clear();
  _impl_.data_.ClearToEmpty();
  _impl_.code_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.address_ != nullptr);
    _impl_.address_->Clear();
  }
  ::memset(&_impl_.incarnation_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.action_) -
      reinterpret_cast<char*>(&_impl_.incarnation_)) + sizeof(_impl_.action_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* AccountChange::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:remote.AccountChange)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .types.H160 address = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *_impl_.address_, _impl_.address_->GetCachedSize(), target, stream);
  }

  // uint64 incarnation = 2;
  if (this->_internal_incarnation() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        2, this->_internal_incarnation(), target);
  }

  // .remote.Action action = 3;
  if (this->_internal_action() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        3, this->_internal_action(), target);
  }

  // bytes data = 4;
  if (!this->_internal_data().empty()) {
    const std::string& _s = this->_internal_data();
    target = stream->WriteBytesMaybeAliased(4, _s, target);
  }

  // bytes code = 5;
  if (!this->_internal_code().empty()) {
    const std::string& _s = this->_internal_code();
    target = stream->WriteBytesMaybeAliased(5, _s, target);
  }

  // repeated .remote.StorageChange storage_changes = 6;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_storage_changes_size());
       i < n; i++) {
    const auto& repfield = this->_internal_storage_changes().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            6, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:remote.AccountChange)
  return target;
}

::size_t AccountChange::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:remote.AccountChange)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated .remote.StorageChange storage_changes = 6;
  total_size += 1UL * this->_internal_storage_changes_size();
  for (const auto& msg : this->_internal_storage_changes()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // bytes data = 4;
  if (!this->_internal_data().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_data());
  }

  // bytes code = 5;
  if (!this->_internal_code().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_code());
  }

  // .types.H160 address = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.address_);
  }

  // uint64 incarnation = 2;
  if (this->_internal_incarnation() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_incarnation());
  }

  // .remote.Action action = 3;
  if (this->_internal_action() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_action());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void AccountChange::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AccountChange*>(&to_msg);
  auto& from = static_cast<const AccountChange&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:remote.AccountChange)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_storage_changes()->MergeFrom(
      from._internal_storage_changes());
  if (!from._internal_data().empty()) {
    _this->_internal_set_data(from._internal_data());
  }
  if (!from._internal_code().empty()) {
    _this->_internal_set_code(from._internal_code());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.address_ != nullptr);
    if (_this->_impl_.address_ == nullptr) {
      _this->_impl_.address_ =
          ::google::protobuf::Message::CopyConstruct<::types::H160>(arena, *from._impl_.address_);
    } else {
      _this->_impl_.address_->MergeFrom(*from._impl_.address_);
    }
  }
  if (from._internal_incarnation() != 0) {
    _this->_impl_.incarnation_ = from._impl_.incarnation_;
  }
  if (from._internal_action() != 0) {
    _this->_impl_.action_ = from._impl_.action_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AccountChange::CopyFrom(const AccountChange& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:remote.AccountChange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AccountChange::InternalSwap(AccountChange* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.storage_changes_.InternalSwap(&other->_impl_.storage_changes_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.data_, &other->_impl_.data_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.code_, &other->_impl_.code_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AccountChange, _impl_.action_)
      + sizeof(AccountChange::_impl_.action_)
      - PROTOBUF_FIELD_OFFSET(AccountChange, _impl_.address_)>(
          reinterpret_cast<char*>(&_impl_.address_),
          reinterpret_cast<char*>(&other->_impl_.address_));
}

::google::protobuf::Metadata AccountChange::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class StateChangeBatch::_Internal {
 public:
};

StateChangeBatch::StateChangeBatch(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:remote.StateChangeBatch)
}
inline PROTOBUF_NDEBUG_INLINE StateChangeBatch::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::remote::StateChangeBatch& from_msg)
      : change_batch_{visibility, arena, from.change_batch_},
        _cached_size_{0} {}

StateChangeBatch::StateChangeBatch(
    ::google::protobuf::Arena* arena,
    const StateChangeBatch& from)
    : ::google::protobuf::Message(arena) {
  StateChangeBatch* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, state_version_id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, state_version_id_),
           offsetof(Impl_, pending_blob_fee_per_gas_) -
               offsetof(Impl_, state_version_id_) +
               sizeof(Impl_::pending_blob_fee_per_gas_));

  // @@protoc_insertion_point(copy_constructor:remote.StateChangeBatch)
}
inline PROTOBUF_NDEBUG_INLINE StateChangeBatch::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : change_batch_{visibility, arena},
        _cached_size_{0} {}

inline void StateChangeBatch::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, state_version_id_),
           0,
           offsetof(Impl_, pending_blob_fee_per_gas_) -
               offsetof(Impl_, state_version_id_) +
               sizeof(Impl_::pending_blob_fee_per_gas_));
}
StateChangeBatch::~StateChangeBatch() {
  // @@protoc_insertion_point(destructor:remote.StateChangeBatch)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void StateChangeBatch::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
StateChangeBatch::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(StateChangeBatch, _impl_._cached_size_),
              false,
          },
          &StateChangeBatch::MergeImpl,
          &StateChangeBatch::kDescriptorMethods,
          &descriptor_table_remote_2fkv_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 1, 0, 2> StateChangeBatch::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_StateChangeBatch_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::remote::StateChangeBatch>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint64 state_version_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(StateChangeBatch, _impl_.state_version_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(StateChangeBatch, _impl_.state_version_id_)}},
    // repeated .remote.StateChange change_batch = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(StateChangeBatch, _impl_.change_batch_)}},
    // uint64 pending_block_base_fee = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(StateChangeBatch, _impl_.pending_block_base_fee_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(StateChangeBatch, _impl_.pending_block_base_fee_)}},
    // uint64 block_gas_limit = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(StateChangeBatch, _impl_.block_gas_limit_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(StateChangeBatch, _impl_.block_gas_limit_)}},
    // uint64 finalized_block = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(StateChangeBatch, _impl_.finalized_block_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(StateChangeBatch, _impl_.finalized_block_)}},
    // uint64 pending_blob_fee_per_gas = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(StateChangeBatch, _impl_.pending_blob_fee_per_gas_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(StateChangeBatch, _impl_.pending_blob_fee_per_gas_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 state_version_id = 1;
    {PROTOBUF_FIELD_OFFSET(StateChangeBatch, _impl_.state_version_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // repeated .remote.StateChange change_batch = 2;
    {PROTOBUF_FIELD_OFFSET(StateChangeBatch, _impl_.change_batch_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint64 pending_block_base_fee = 3;
    {PROTOBUF_FIELD_OFFSET(StateChangeBatch, _impl_.pending_block_base_fee_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint64 block_gas_limit = 4;
    {PROTOBUF_FIELD_OFFSET(StateChangeBatch, _impl_.block_gas_limit_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint64 finalized_block = 5;
    {PROTOBUF_FIELD_OFFSET(StateChangeBatch, _impl_.finalized_block_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint64 pending_blob_fee_per_gas = 6;
    {PROTOBUF_FIELD_OFFSET(StateChangeBatch, _impl_.pending_blob_fee_per_gas_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }}, {{
    {::_pbi::TcParser::GetTable<::remote::StateChange>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void StateChangeBatch::Clear() {
// @@protoc_insertion_point(message_clear_start:remote.StateChangeBatch)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.change_batch_.Clear();
  ::memset(&_impl_.state_version_id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.pending_blob_fee_per_gas_) -
      reinterpret_cast<char*>(&_impl_.state_version_id_)) + sizeof(_impl_.pending_blob_fee_per_gas_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* StateChangeBatch::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:remote.StateChangeBatch)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint64 state_version_id = 1;
  if (this->_internal_state_version_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this->_internal_state_version_id(), target);
  }

  // repeated .remote.StateChange change_batch = 2;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_change_batch_size());
       i < n; i++) {
    const auto& repfield = this->_internal_change_batch().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            2, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // uint64 pending_block_base_fee = 3;
  if (this->_internal_pending_block_base_fee() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        3, this->_internal_pending_block_base_fee(), target);
  }

  // uint64 block_gas_limit = 4;
  if (this->_internal_block_gas_limit() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        4, this->_internal_block_gas_limit(), target);
  }

  // uint64 finalized_block = 5;
  if (this->_internal_finalized_block() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        5, this->_internal_finalized_block(), target);
  }

  // uint64 pending_blob_fee_per_gas = 6;
  if (this->_internal_pending_blob_fee_per_gas() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        6, this->_internal_pending_blob_fee_per_gas(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:remote.StateChangeBatch)
  return target;
}

::size_t StateChangeBatch::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:remote.StateChangeBatch)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated .remote.StateChange change_batch = 2;
  total_size += 1UL * this->_internal_change_batch_size();
  for (const auto& msg : this->_internal_change_batch()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // uint64 state_version_id = 1;
  if (this->_internal_state_version_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_state_version_id());
  }

  // uint64 pending_block_base_fee = 3;
  if (this->_internal_pending_block_base_fee() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_pending_block_base_fee());
  }

  // uint64 block_gas_limit = 4;
  if (this->_internal_block_gas_limit() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_block_gas_limit());
  }

  // uint64 finalized_block = 5;
  if (this->_internal_finalized_block() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_finalized_block());
  }

  // uint64 pending_blob_fee_per_gas = 6;
  if (this->_internal_pending_blob_fee_per_gas() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_pending_blob_fee_per_gas());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void StateChangeBatch::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<StateChangeBatch*>(&to_msg);
  auto& from = static_cast<const StateChangeBatch&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:remote.StateChangeBatch)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_change_batch()->MergeFrom(
      from._internal_change_batch());
  if (from._internal_state_version_id() != 0) {
    _this->_impl_.state_version_id_ = from._impl_.state_version_id_;
  }
  if (from._internal_pending_block_base_fee() != 0) {
    _this->_impl_.pending_block_base_fee_ = from._impl_.pending_block_base_fee_;
  }
  if (from._internal_block_gas_limit() != 0) {
    _this->_impl_.block_gas_limit_ = from._impl_.block_gas_limit_;
  }
  if (from._internal_finalized_block() != 0) {
    _this->_impl_.finalized_block_ = from._impl_.finalized_block_;
  }
  if (from._internal_pending_blob_fee_per_gas() != 0) {
    _this->_impl_.pending_blob_fee_per_gas_ = from._impl_.pending_blob_fee_per_gas_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void StateChangeBatch::CopyFrom(const StateChangeBatch& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:remote.StateChangeBatch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void StateChangeBatch::InternalSwap(StateChangeBatch* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.change_batch_.InternalSwap(&other->_impl_.change_batch_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(StateChangeBatch, _impl_.pending_blob_fee_per_gas_)
      + sizeof(StateChangeBatch::_impl_.pending_blob_fee_per_gas_)
      - PROTOBUF_FIELD_OFFSET(StateChangeBatch, _impl_.state_version_id_)>(
          reinterpret_cast<char*>(&_impl_.state_version_id_),
          reinterpret_cast<char*>(&other->_impl_.state_version_id_));
}

::google::protobuf::Metadata StateChangeBatch::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class StateChange::_Internal {
 public:
  using HasBits =
      decltype(std::declval<StateChange>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(StateChange, _impl_._has_bits_);
};

void StateChange::clear_block_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.block_hash_ != nullptr) _impl_.block_hash_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
StateChange::StateChange(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:remote.StateChange)
}
inline PROTOBUF_NDEBUG_INLINE StateChange::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::remote::StateChange& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        changes_{visibility, arena, from.changes_},
        txs_{visibility, arena, from.txs_} {}

StateChange::StateChange(
    ::google::protobuf::Arena* arena,
    const StateChange& from)
    : ::google::protobuf::Message(arena) {
  StateChange* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.block_hash_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::types::H256>(
                              arena, *from._impl_.block_hash_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, block_height_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, block_height_),
           offsetof(Impl_, direction_) -
               offsetof(Impl_, block_height_) +
               sizeof(Impl_::direction_));

  // @@protoc_insertion_point(copy_constructor:remote.StateChange)
}
inline PROTOBUF_NDEBUG_INLINE StateChange::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        changes_{visibility, arena},
        txs_{visibility, arena} {}

inline void StateChange::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, block_hash_),
           0,
           offsetof(Impl_, direction_) -
               offsetof(Impl_, block_hash_) +
               sizeof(Impl_::direction_));
}
StateChange::~StateChange() {
  // @@protoc_insertion_point(destructor:remote.StateChange)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void StateChange::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.block_hash_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
StateChange::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(StateChange, _impl_._cached_size_),
              false,
          },
          &StateChange::MergeImpl,
          &StateChange::kDescriptorMethods,
          &descriptor_table_remote_2fkv_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 2, 0, 2> StateChange::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(StateChange, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_StateChange_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::remote::StateChange>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .remote.Direction direction = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(StateChange, _impl_.direction_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(StateChange, _impl_.direction_)}},
    // uint64 block_height = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(StateChange, _impl_.block_height_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(StateChange, _impl_.block_height_)}},
    // .types.H256 block_hash = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(StateChange, _impl_.block_hash_)}},
    // repeated .remote.AccountChange changes = 4;
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 1, PROTOBUF_FIELD_OFFSET(StateChange, _impl_.changes_)}},
    // repeated bytes txs = 5;
    {::_pbi::TcParser::FastBR1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(StateChange, _impl_.txs_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .remote.Direction direction = 1;
    {PROTOBUF_FIELD_OFFSET(StateChange, _impl_.direction_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // uint64 block_height = 2;
    {PROTOBUF_FIELD_OFFSET(StateChange, _impl_.block_height_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // .types.H256 block_hash = 3;
    {PROTOBUF_FIELD_OFFSET(StateChange, _impl_.block_hash_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .remote.AccountChange changes = 4;
    {PROTOBUF_FIELD_OFFSET(StateChange, _impl_.changes_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated bytes txs = 5;
    {PROTOBUF_FIELD_OFFSET(StateChange, _impl_.txs_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kBytes | ::_fl::kRepSString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::types::H256>()},
    {::_pbi::TcParser::GetTable<::remote::AccountChange>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void StateChange::Clear() {
// @@protoc_insertion_point(message_clear_start:remote.StateChange)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.changes_.Clear();
  _impl_.txs_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.block_hash_ != nullptr);
    _impl_.block_hash_->Clear();
  }
  ::memset(&_impl_.block_height_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.direction_) -
      reinterpret_cast<char*>(&_impl_.block_height_)) + sizeof(_impl_.direction_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* StateChange::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:remote.StateChange)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .remote.Direction direction = 1;
  if (this->_internal_direction() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_direction(), target);
  }

  // uint64 block_height = 2;
  if (this->_internal_block_height() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        2, this->_internal_block_height(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .types.H256 block_hash = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *_impl_.block_hash_, _impl_.block_hash_->GetCachedSize(), target, stream);
  }

  // repeated .remote.AccountChange changes = 4;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_changes_size());
       i < n; i++) {
    const auto& repfield = this->_internal_changes().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            4, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // repeated bytes txs = 5;
  for (int i = 0, n = this->_internal_txs_size(); i < n; ++i) {
    const auto& s = this->_internal_txs().Get(i);
    target = stream->WriteBytes(5, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:remote.StateChange)
  return target;
}

::size_t StateChange::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:remote.StateChange)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated .remote.AccountChange changes = 4;
  total_size += 1UL * this->_internal_changes_size();
  for (const auto& msg : this->_internal_changes()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated bytes txs = 5;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_txs().size());
  for (int i = 0, n = _internal_txs().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
        _internal_txs().Get(i));
  }
  // .types.H256 block_hash = 3;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.block_hash_);
  }

  // uint64 block_height = 2;
  if (this->_internal_block_height() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_block_height());
  }

  // .remote.Direction direction = 1;
  if (this->_internal_direction() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_direction());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void StateChange::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<StateChange*>(&to_msg);
  auto& from = static_cast<const StateChange&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:remote.StateChange)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_changes()->MergeFrom(
      from._internal_changes());
  _this->_internal_mutable_txs()->MergeFrom(from._internal_txs());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.block_hash_ != nullptr);
    if (_this->_impl_.block_hash_ == nullptr) {
      _this->_impl_.block_hash_ =
          ::google::protobuf::Message::CopyConstruct<::types::H256>(arena, *from._impl_.block_hash_);
    } else {
      _this->_impl_.block_hash_->MergeFrom(*from._impl_.block_hash_);
    }
  }
  if (from._internal_block_height() != 0) {
    _this->_impl_.block_height_ = from._impl_.block_height_;
  }
  if (from._internal_direction() != 0) {
    _this->_impl_.direction_ = from._impl_.direction_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void StateChange::CopyFrom(const StateChange& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:remote.StateChange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void StateChange::InternalSwap(StateChange* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.changes_.InternalSwap(&other->_impl_.changes_);
  _impl_.txs_.InternalSwap(&other->_impl_.txs_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(StateChange, _impl_.direction_)
      + sizeof(StateChange::_impl_.direction_)
      - PROTOBUF_FIELD_OFFSET(StateChange, _impl_.block_hash_)>(
          reinterpret_cast<char*>(&_impl_.block_hash_),
          reinterpret_cast<char*>(&other->_impl_.block_hash_));
}

::google::protobuf::Metadata StateChange::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class StateChangeRequest::_Internal {
 public:
};

StateChangeRequest::StateChangeRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:remote.StateChangeRequest)
}
StateChangeRequest::StateChangeRequest(
    ::google::protobuf::Arena* arena, const StateChangeRequest& from)
    : StateChangeRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE StateChangeRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void StateChangeRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, with_storage_),
           0,
           offsetof(Impl_, with_transactions_) -
               offsetof(Impl_, with_storage_) +
               sizeof(Impl_::with_transactions_));
}
StateChangeRequest::~StateChangeRequest() {
  // @@protoc_insertion_point(destructor:remote.StateChangeRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void StateChangeRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
StateChangeRequest::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(StateChangeRequest, _impl_._cached_size_),
              false,
          },
          &StateChangeRequest::MergeImpl,
          &StateChangeRequest::kDescriptorMethods,
          &descriptor_table_remote_2fkv_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> StateChangeRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_StateChangeRequest_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::remote::StateChangeRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bool with_transactions = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(StateChangeRequest, _impl_.with_transactions_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(StateChangeRequest, _impl_.with_transactions_)}},
    // bool with_storage = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(StateChangeRequest, _impl_.with_storage_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(StateChangeRequest, _impl_.with_storage_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool with_storage = 1;
    {PROTOBUF_FIELD_OFFSET(StateChangeRequest, _impl_.with_storage_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool with_transactions = 2;
    {PROTOBUF_FIELD_OFFSET(StateChangeRequest, _impl_.with_transactions_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void StateChangeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:remote.StateChangeRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.with_storage_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.with_transactions_) -
      reinterpret_cast<char*>(&_impl_.with_storage_)) + sizeof(_impl_.with_transactions_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* StateChangeRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:remote.StateChangeRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bool with_storage = 1;
  if (this->_internal_with_storage() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1, this->_internal_with_storage(), target);
  }

  // bool with_transactions = 2;
  if (this->_internal_with_transactions() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        2, this->_internal_with_transactions(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:remote.StateChangeRequest)
  return target;
}

::size_t StateChangeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:remote.StateChangeRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // bool with_storage = 1;
  if (this->_internal_with_storage() != 0) {
    total_size += 2;
  }

  // bool with_transactions = 2;
  if (this->_internal_with_transactions() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void StateChangeRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<StateChangeRequest*>(&to_msg);
  auto& from = static_cast<const StateChangeRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:remote.StateChangeRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_with_storage() != 0) {
    _this->_impl_.with_storage_ = from._impl_.with_storage_;
  }
  if (from._internal_with_transactions() != 0) {
    _this->_impl_.with_transactions_ = from._impl_.with_transactions_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void StateChangeRequest::CopyFrom(const StateChangeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:remote.StateChangeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void StateChangeRequest::InternalSwap(StateChangeRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(StateChangeRequest, _impl_.with_transactions_)
      + sizeof(StateChangeRequest::_impl_.with_transactions_)
      - PROTOBUF_FIELD_OFFSET(StateChangeRequest, _impl_.with_storage_)>(
          reinterpret_cast<char*>(&_impl_.with_storage_),
          reinterpret_cast<char*>(&other->_impl_.with_storage_));
}

::google::protobuf::Metadata StateChangeRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SnapshotsRequest::_Internal {
 public:
};

SnapshotsRequest::SnapshotsRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:remote.SnapshotsRequest)
}
SnapshotsRequest::SnapshotsRequest(
    ::google::protobuf::Arena* arena,
    const SnapshotsRequest& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  SnapshotsRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:remote.SnapshotsRequest)
}

const ::google::protobuf::MessageLite::ClassData*
SnapshotsRequest::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(SnapshotsRequest, _impl_._cached_size_),
              false,
          },
          &SnapshotsRequest::MergeImpl,
          &SnapshotsRequest::kDescriptorMethods,
          &descriptor_table_remote_2fkv_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> SnapshotsRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SnapshotsRequest_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::remote::SnapshotsRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};









::google::protobuf::Metadata SnapshotsRequest::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SnapshotsReply::_Internal {
 public:
};

SnapshotsReply::SnapshotsReply(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:remote.SnapshotsReply)
}
inline PROTOBUF_NDEBUG_INLINE SnapshotsReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::remote::SnapshotsReply& from_msg)
      : blocks_files_{visibility, arena, from.blocks_files_},
        history_files_{visibility, arena, from.history_files_},
        _cached_size_{0} {}

SnapshotsReply::SnapshotsReply(
    ::google::protobuf::Arena* arena,
    const SnapshotsReply& from)
    : ::google::protobuf::Message(arena) {
  SnapshotsReply* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:remote.SnapshotsReply)
}
inline PROTOBUF_NDEBUG_INLINE SnapshotsReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : blocks_files_{visibility, arena},
        history_files_{visibility, arena},
        _cached_size_{0} {}

inline void SnapshotsReply::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
SnapshotsReply::~SnapshotsReply() {
  // @@protoc_insertion_point(destructor:remote.SnapshotsReply)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SnapshotsReply::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
SnapshotsReply::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(SnapshotsReply, _impl_._cached_size_),
              false,
          },
          &SnapshotsReply::MergeImpl,
          &SnapshotsReply::kDescriptorMethods,
          &descriptor_table_remote_2fkv_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 55, 2> SnapshotsReply::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SnapshotsReply_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::remote::SnapshotsReply>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated string history_files = 2;
    {::_pbi::TcParser::FastUR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(SnapshotsReply, _impl_.history_files_)}},
    // repeated string blocks_files = 1;
    {::_pbi::TcParser::FastUR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SnapshotsReply, _impl_.blocks_files_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated string blocks_files = 1;
    {PROTOBUF_FIELD_OFFSET(SnapshotsReply, _impl_.blocks_files_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // repeated string history_files = 2;
    {PROTOBUF_FIELD_OFFSET(SnapshotsReply, _impl_.history_files_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\25\14\15\0\0\0\0\0"
    "remote.SnapshotsReply"
    "blocks_files"
    "history_files"
  }},
};

PROTOBUF_NOINLINE void SnapshotsReply::Clear() {
// @@protoc_insertion_point(message_clear_start:remote.SnapshotsReply)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.blocks_files_.Clear();
  _impl_.history_files_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* SnapshotsReply::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:remote.SnapshotsReply)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated string blocks_files = 1;
  for (int i = 0, n = this->_internal_blocks_files_size(); i < n; ++i) {
    const auto& s = this->_internal_blocks_files().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "remote.SnapshotsReply.blocks_files");
    target = stream->WriteString(1, s, target);
  }

  // repeated string history_files = 2;
  for (int i = 0, n = this->_internal_history_files_size(); i < n; ++i) {
    const auto& s = this->_internal_history_files().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "remote.SnapshotsReply.history_files");
    target = stream->WriteString(2, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:remote.SnapshotsReply)
  return target;
}

::size_t SnapshotsReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:remote.SnapshotsReply)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated string blocks_files = 1;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_blocks_files().size());
  for (int i = 0, n = _internal_blocks_files().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_blocks_files().Get(i));
  }
  // repeated string history_files = 2;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_history_files().size());
  for (int i = 0, n = _internal_history_files().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_history_files().Get(i));
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void SnapshotsReply::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SnapshotsReply*>(&to_msg);
  auto& from = static_cast<const SnapshotsReply&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:remote.SnapshotsReply)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_blocks_files()->MergeFrom(from._internal_blocks_files());
  _this->_internal_mutable_history_files()->MergeFrom(from._internal_history_files());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SnapshotsReply::CopyFrom(const SnapshotsReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:remote.SnapshotsReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SnapshotsReply::InternalSwap(SnapshotsReply* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.blocks_files_.InternalSwap(&other->_impl_.blocks_files_);
  _impl_.history_files_.InternalSwap(&other->_impl_.history_files_);
}

::google::protobuf::Metadata SnapshotsReply::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RangeReq::_Internal {
 public:
};

RangeReq::RangeReq(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:remote.RangeReq)
}
inline PROTOBUF_NDEBUG_INLINE RangeReq::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::remote::RangeReq& from_msg)
      : table_(arena, from.table_),
        from_prefix_(arena, from.from_prefix_),
        to_prefix_(arena, from.to_prefix_),
        page_token_(arena, from.page_token_),
        _cached_size_{0} {}

RangeReq::RangeReq(
    ::google::protobuf::Arena* arena,
    const RangeReq& from)
    : ::google::protobuf::Message(arena) {
  RangeReq* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, tx_id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, tx_id_),
           offsetof(Impl_, page_size_) -
               offsetof(Impl_, tx_id_) +
               sizeof(Impl_::page_size_));

  // @@protoc_insertion_point(copy_constructor:remote.RangeReq)
}
inline PROTOBUF_NDEBUG_INLINE RangeReq::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : table_(arena),
        from_prefix_(arena),
        to_prefix_(arena),
        page_token_(arena),
        _cached_size_{0} {}

inline void RangeReq::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, tx_id_),
           0,
           offsetof(Impl_, page_size_) -
               offsetof(Impl_, tx_id_) +
               sizeof(Impl_::page_size_));
}
RangeReq::~RangeReq() {
  // @@protoc_insertion_point(destructor:remote.RangeReq)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RangeReq::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.table_.Destroy();
  _impl_.from_prefix_.Destroy();
  _impl_.to_prefix_.Destroy();
  _impl_.page_token_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
RangeReq::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(RangeReq, _impl_._cached_size_),
              false,
          },
          &RangeReq::MergeImpl,
          &RangeReq::kDescriptorMethods,
          &descriptor_table_remote_2fkv_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 8, 0, 47, 2> RangeReq::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967040,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_RangeReq_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::remote::RangeReq>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string page_token = 8;
    {::_pbi::TcParser::FastUS1,
     {66, 63, 0, PROTOBUF_FIELD_OFFSET(RangeReq, _impl_.page_token_)}},
    // uint64 tx_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(RangeReq, _impl_.tx_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(RangeReq, _impl_.tx_id_)}},
    // string table = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(RangeReq, _impl_.table_)}},
    // bytes from_prefix = 3;
    {::_pbi::TcParser::FastBS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(RangeReq, _impl_.from_prefix_)}},
    // bytes to_prefix = 4;
    {::_pbi::TcParser::FastBS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(RangeReq, _impl_.to_prefix_)}},
    // bool order_ascend = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(RangeReq, _impl_.order_ascend_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(RangeReq, _impl_.order_ascend_)}},
    // sint64 limit = 6;
    {::_pbi::TcParser::FastZ64S1,
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(RangeReq, _impl_.limit_)}},
    // int32 page_size = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RangeReq, _impl_.page_size_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(RangeReq, _impl_.page_size_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 tx_id = 1;
    {PROTOBUF_FIELD_OFFSET(RangeReq, _impl_.tx_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // string table = 2;
    {PROTOBUF_FIELD_OFFSET(RangeReq, _impl_.table_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bytes from_prefix = 3;
    {PROTOBUF_FIELD_OFFSET(RangeReq, _impl_.from_prefix_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // bytes to_prefix = 4;
    {PROTOBUF_FIELD_OFFSET(RangeReq, _impl_.to_prefix_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // bool order_ascend = 5;
    {PROTOBUF_FIELD_OFFSET(RangeReq, _impl_.order_ascend_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // sint64 limit = 6;
    {PROTOBUF_FIELD_OFFSET(RangeReq, _impl_.limit_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kSInt64)},
    // int32 page_size = 7;
    {PROTOBUF_FIELD_OFFSET(RangeReq, _impl_.page_size_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string page_token = 8;
    {PROTOBUF_FIELD_OFFSET(RangeReq, _impl_.page_token_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\17\0\5\0\0\0\0\0\12\0\0\0\0\0\0\0"
    "remote.RangeReq"
    "table"
    "page_token"
  }},
};

PROTOBUF_NOINLINE void RangeReq::Clear() {
// @@protoc_insertion_point(message_clear_start:remote.RangeReq)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.table_.ClearToEmpty();
  _impl_.from_prefix_.ClearToEmpty();
  _impl_.to_prefix_.ClearToEmpty();
  _impl_.page_token_.ClearToEmpty();
  ::memset(&_impl_.tx_id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.page_size_) -
      reinterpret_cast<char*>(&_impl_.tx_id_)) + sizeof(_impl_.page_size_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* RangeReq::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:remote.RangeReq)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint64 tx_id = 1;
  if (this->_internal_tx_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this->_internal_tx_id(), target);
  }

  // string table = 2;
  if (!this->_internal_table().empty()) {
    const std::string& _s = this->_internal_table();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "remote.RangeReq.table");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // bytes from_prefix = 3;
  if (!this->_internal_from_prefix().empty()) {
    const std::string& _s = this->_internal_from_prefix();
    target = stream->WriteBytesMaybeAliased(3, _s, target);
  }

  // bytes to_prefix = 4;
  if (!this->_internal_to_prefix().empty()) {
    const std::string& _s = this->_internal_to_prefix();
    target = stream->WriteBytesMaybeAliased(4, _s, target);
  }

  // bool order_ascend = 5;
  if (this->_internal_order_ascend() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        5, this->_internal_order_ascend(), target);
  }

  // sint64 limit = 6;
  if (this->_internal_limit() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt64ToArray(
        6, this->_internal_limit(), target);
  }

  // int32 page_size = 7;
  if (this->_internal_page_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<7>(
            stream, this->_internal_page_size(), target);
  }

  // string page_token = 8;
  if (!this->_internal_page_token().empty()) {
    const std::string& _s = this->_internal_page_token();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "remote.RangeReq.page_token");
    target = stream->WriteStringMaybeAliased(8, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:remote.RangeReq)
  return target;
}

::size_t RangeReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:remote.RangeReq)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // string table = 2;
  if (!this->_internal_table().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_table());
  }

  // bytes from_prefix = 3;
  if (!this->_internal_from_prefix().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_from_prefix());
  }

  // bytes to_prefix = 4;
  if (!this->_internal_to_prefix().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_to_prefix());
  }

  // string page_token = 8;
  if (!this->_internal_page_token().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_page_token());
  }

  // uint64 tx_id = 1;
  if (this->_internal_tx_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_tx_id());
  }

  // sint64 limit = 6;
  if (this->_internal_limit() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt64SizePlusOne(
        this->_internal_limit());
  }

  // bool order_ascend = 5;
  if (this->_internal_order_ascend() != 0) {
    total_size += 2;
  }

  // int32 page_size = 7;
  if (this->_internal_page_size() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_page_size());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void RangeReq::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RangeReq*>(&to_msg);
  auto& from = static_cast<const RangeReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:remote.RangeReq)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_table().empty()) {
    _this->_internal_set_table(from._internal_table());
  }
  if (!from._internal_from_prefix().empty()) {
    _this->_internal_set_from_prefix(from._internal_from_prefix());
  }
  if (!from._internal_to_prefix().empty()) {
    _this->_internal_set_to_prefix(from._internal_to_prefix());
  }
  if (!from._internal_page_token().empty()) {
    _this->_internal_set_page_token(from._internal_page_token());
  }
  if (from._internal_tx_id() != 0) {
    _this->_impl_.tx_id_ = from._impl_.tx_id_;
  }
  if (from._internal_limit() != 0) {
    _this->_impl_.limit_ = from._impl_.limit_;
  }
  if (from._internal_order_ascend() != 0) {
    _this->_impl_.order_ascend_ = from._impl_.order_ascend_;
  }
  if (from._internal_page_size() != 0) {
    _this->_impl_.page_size_ = from._impl_.page_size_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RangeReq::CopyFrom(const RangeReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:remote.RangeReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RangeReq::InternalSwap(RangeReq* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.table_, &other->_impl_.table_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.from_prefix_, &other->_impl_.from_prefix_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.to_prefix_, &other->_impl_.to_prefix_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.page_token_, &other->_impl_.page_token_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RangeReq, _impl_.page_size_)
      + sizeof(RangeReq::_impl_.page_size_)
      - PROTOBUF_FIELD_OFFSET(RangeReq, _impl_.tx_id_)>(
          reinterpret_cast<char*>(&_impl_.tx_id_),
          reinterpret_cast<char*>(&other->_impl_.tx_id_));
}

::google::protobuf::Metadata RangeReq::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetLatestReq::_Internal {
 public:
};

GetLatestReq::GetLatestReq(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:remote.GetLatestReq)
}
inline PROTOBUF_NDEBUG_INLINE GetLatestReq::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::remote::GetLatestReq& from_msg)
      : table_(arena, from.table_),
        k_(arena, from.k_),
        k2_(arena, from.k2_),
        _cached_size_{0} {}

GetLatestReq::GetLatestReq(
    ::google::protobuf::Arena* arena,
    const GetLatestReq& from)
    : ::google::protobuf::Message(arena) {
  GetLatestReq* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, tx_id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, tx_id_),
           offsetof(Impl_, latest_) -
               offsetof(Impl_, tx_id_) +
               sizeof(Impl_::latest_));

  // @@protoc_insertion_point(copy_constructor:remote.GetLatestReq)
}
inline PROTOBUF_NDEBUG_INLINE GetLatestReq::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : table_(arena),
        k_(arena),
        k2_(arena),
        _cached_size_{0} {}

inline void GetLatestReq::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, tx_id_),
           0,
           offsetof(Impl_, latest_) -
               offsetof(Impl_, tx_id_) +
               sizeof(Impl_::latest_));
}
GetLatestReq::~GetLatestReq() {
  // @@protoc_insertion_point(destructor:remote.GetLatestReq)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GetLatestReq::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.table_.Destroy();
  _impl_.k_.Destroy();
  _impl_.k2_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
GetLatestReq::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(GetLatestReq, _impl_._cached_size_),
              false,
          },
          &GetLatestReq::MergeImpl,
          &GetLatestReq::kDescriptorMethods,
          &descriptor_table_remote_2fkv_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 0, 33, 2> GetLatestReq::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_GetLatestReq_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::remote::GetLatestReq>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint64 tx_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(GetLatestReq, _impl_.tx_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(GetLatestReq, _impl_.tx_id_)}},
    // string table = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(GetLatestReq, _impl_.table_)}},
    // bytes k = 3;
    {::_pbi::TcParser::FastBS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(GetLatestReq, _impl_.k_)}},
    // uint64 ts = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(GetLatestReq, _impl_.ts_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(GetLatestReq, _impl_.ts_)}},
    // bytes k2 = 5;
    {::_pbi::TcParser::FastBS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(GetLatestReq, _impl_.k2_)}},
    // bool latest = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(GetLatestReq, _impl_.latest_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(GetLatestReq, _impl_.latest_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 tx_id = 1;
    {PROTOBUF_FIELD_OFFSET(GetLatestReq, _impl_.tx_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // string table = 2;
    {PROTOBUF_FIELD_OFFSET(GetLatestReq, _impl_.table_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bytes k = 3;
    {PROTOBUF_FIELD_OFFSET(GetLatestReq, _impl_.k_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // uint64 ts = 4;
    {PROTOBUF_FIELD_OFFSET(GetLatestReq, _impl_.ts_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // bytes k2 = 5;
    {PROTOBUF_FIELD_OFFSET(GetLatestReq, _impl_.k2_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // bool latest = 6;
    {PROTOBUF_FIELD_OFFSET(GetLatestReq, _impl_.latest_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
    "\23\0\5\0\0\0\0\0"
    "remote.GetLatestReq"
    "table"
  }},
};

PROTOBUF_NOINLINE void GetLatestReq::Clear() {
// @@protoc_insertion_point(message_clear_start:remote.GetLatestReq)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.table_.ClearToEmpty();
  _impl_.k_.ClearToEmpty();
  _impl_.k2_.ClearToEmpty();
  ::memset(&_impl_.tx_id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.latest_) -
      reinterpret_cast<char*>(&_impl_.tx_id_)) + sizeof(_impl_.latest_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* GetLatestReq::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:remote.GetLatestReq)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint64 tx_id = 1;
  if (this->_internal_tx_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this->_internal_tx_id(), target);
  }

  // string table = 2;
  if (!this->_internal_table().empty()) {
    const std::string& _s = this->_internal_table();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "remote.GetLatestReq.table");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // bytes k = 3;
  if (!this->_internal_k().empty()) {
    const std::string& _s = this->_internal_k();
    target = stream->WriteBytesMaybeAliased(3, _s, target);
  }

  // uint64 ts = 4;
  if (this->_internal_ts() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        4, this->_internal_ts(), target);
  }

  // bytes k2 = 5;
  if (!this->_internal_k2().empty()) {
    const std::string& _s = this->_internal_k2();
    target = stream->WriteBytesMaybeAliased(5, _s, target);
  }

  // bool latest = 6;
  if (this->_internal_latest() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        6, this->_internal_latest(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:remote.GetLatestReq)
  return target;
}

::size_t GetLatestReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:remote.GetLatestReq)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // string table = 2;
  if (!this->_internal_table().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_table());
  }

  // bytes k = 3;
  if (!this->_internal_k().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_k());
  }

  // bytes k2 = 5;
  if (!this->_internal_k2().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_k2());
  }

  // uint64 tx_id = 1;
  if (this->_internal_tx_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_tx_id());
  }

  // uint64 ts = 4;
  if (this->_internal_ts() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_ts());
  }

  // bool latest = 6;
  if (this->_internal_latest() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void GetLatestReq::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetLatestReq*>(&to_msg);
  auto& from = static_cast<const GetLatestReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:remote.GetLatestReq)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_table().empty()) {
    _this->_internal_set_table(from._internal_table());
  }
  if (!from._internal_k().empty()) {
    _this->_internal_set_k(from._internal_k());
  }
  if (!from._internal_k2().empty()) {
    _this->_internal_set_k2(from._internal_k2());
  }
  if (from._internal_tx_id() != 0) {
    _this->_impl_.tx_id_ = from._impl_.tx_id_;
  }
  if (from._internal_ts() != 0) {
    _this->_impl_.ts_ = from._impl_.ts_;
  }
  if (from._internal_latest() != 0) {
    _this->_impl_.latest_ = from._impl_.latest_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetLatestReq::CopyFrom(const GetLatestReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:remote.GetLatestReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetLatestReq::InternalSwap(GetLatestReq* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.table_, &other->_impl_.table_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.k_, &other->_impl_.k_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.k2_, &other->_impl_.k2_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetLatestReq, _impl_.latest_)
      + sizeof(GetLatestReq::_impl_.latest_)
      - PROTOBUF_FIELD_OFFSET(GetLatestReq, _impl_.tx_id_)>(
          reinterpret_cast<char*>(&_impl_.tx_id_),
          reinterpret_cast<char*>(&other->_impl_.tx_id_));
}

::google::protobuf::Metadata GetLatestReq::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetLatestReply::_Internal {
 public:
};

GetLatestReply::GetLatestReply(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:remote.GetLatestReply)
}
inline PROTOBUF_NDEBUG_INLINE GetLatestReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::remote::GetLatestReply& from_msg)
      : v_(arena, from.v_),
        _cached_size_{0} {}

GetLatestReply::GetLatestReply(
    ::google::protobuf::Arena* arena,
    const GetLatestReply& from)
    : ::google::protobuf::Message(arena) {
  GetLatestReply* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.ok_ = from._impl_.ok_;

  // @@protoc_insertion_point(copy_constructor:remote.GetLatestReply)
}
inline PROTOBUF_NDEBUG_INLINE GetLatestReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : v_(arena),
        _cached_size_{0} {}

inline void GetLatestReply::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.ok_ = {};
}
GetLatestReply::~GetLatestReply() {
  // @@protoc_insertion_point(destructor:remote.GetLatestReply)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GetLatestReply::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.v_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
GetLatestReply::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(GetLatestReply, _impl_._cached_size_),
              false,
          },
          &GetLatestReply::MergeImpl,
          &GetLatestReply::kDescriptorMethods,
          &descriptor_table_remote_2fkv_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> GetLatestReply::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_GetLatestReply_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::remote::GetLatestReply>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bool ok = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(GetLatestReply, _impl_.ok_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(GetLatestReply, _impl_.ok_)}},
    // bytes v = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GetLatestReply, _impl_.v_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes v = 1;
    {PROTOBUF_FIELD_OFFSET(GetLatestReply, _impl_.v_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // bool ok = 2;
    {PROTOBUF_FIELD_OFFSET(GetLatestReply, _impl_.ok_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void GetLatestReply::Clear() {
// @@protoc_insertion_point(message_clear_start:remote.GetLatestReply)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.v_.ClearToEmpty();
  _impl_.ok_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* GetLatestReply::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:remote.GetLatestReply)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bytes v = 1;
  if (!this->_internal_v().empty()) {
    const std::string& _s = this->_internal_v();
    target = stream->WriteBytesMaybeAliased(1, _s, target);
  }

  // bool ok = 2;
  if (this->_internal_ok() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        2, this->_internal_ok(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:remote.GetLatestReply)
  return target;
}

::size_t GetLatestReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:remote.GetLatestReply)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // bytes v = 1;
  if (!this->_internal_v().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_v());
  }

  // bool ok = 2;
  if (this->_internal_ok() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void GetLatestReply::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetLatestReply*>(&to_msg);
  auto& from = static_cast<const GetLatestReply&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:remote.GetLatestReply)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_v().empty()) {
    _this->_internal_set_v(from._internal_v());
  }
  if (from._internal_ok() != 0) {
    _this->_impl_.ok_ = from._impl_.ok_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetLatestReply::CopyFrom(const GetLatestReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:remote.GetLatestReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetLatestReply::InternalSwap(GetLatestReply* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.v_, &other->_impl_.v_, arena);
        swap(_impl_.ok_, other->_impl_.ok_);
}

::google::protobuf::Metadata GetLatestReply::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class HistorySeekReq::_Internal {
 public:
};

HistorySeekReq::HistorySeekReq(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:remote.HistorySeekReq)
}
inline PROTOBUF_NDEBUG_INLINE HistorySeekReq::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::remote::HistorySeekReq& from_msg)
      : table_(arena, from.table_),
        k_(arena, from.k_),
        _cached_size_{0} {}

HistorySeekReq::HistorySeekReq(
    ::google::protobuf::Arena* arena,
    const HistorySeekReq& from)
    : ::google::protobuf::Message(arena) {
  HistorySeekReq* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, tx_id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, tx_id_),
           offsetof(Impl_, ts_) -
               offsetof(Impl_, tx_id_) +
               sizeof(Impl_::ts_));

  // @@protoc_insertion_point(copy_constructor:remote.HistorySeekReq)
}
inline PROTOBUF_NDEBUG_INLINE HistorySeekReq::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : table_(arena),
        k_(arena),
        _cached_size_{0} {}

inline void HistorySeekReq::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, tx_id_),
           0,
           offsetof(Impl_, ts_) -
               offsetof(Impl_, tx_id_) +
               sizeof(Impl_::ts_));
}
HistorySeekReq::~HistorySeekReq() {
  // @@protoc_insertion_point(destructor:remote.HistorySeekReq)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void HistorySeekReq::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.table_.Destroy();
  _impl_.k_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
HistorySeekReq::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(HistorySeekReq, _impl_._cached_size_),
              false,
          },
          &HistorySeekReq::MergeImpl,
          &HistorySeekReq::kDescriptorMethods,
          &descriptor_table_remote_2fkv_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 35, 2> HistorySeekReq::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_HistorySeekReq_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::remote::HistorySeekReq>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint64 ts = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(HistorySeekReq, _impl_.ts_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(HistorySeekReq, _impl_.ts_)}},
    // uint64 tx_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(HistorySeekReq, _impl_.tx_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(HistorySeekReq, _impl_.tx_id_)}},
    // string table = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(HistorySeekReq, _impl_.table_)}},
    // bytes k = 3;
    {::_pbi::TcParser::FastBS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(HistorySeekReq, _impl_.k_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 tx_id = 1;
    {PROTOBUF_FIELD_OFFSET(HistorySeekReq, _impl_.tx_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // string table = 2;
    {PROTOBUF_FIELD_OFFSET(HistorySeekReq, _impl_.table_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bytes k = 3;
    {PROTOBUF_FIELD_OFFSET(HistorySeekReq, _impl_.k_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // uint64 ts = 4;
    {PROTOBUF_FIELD_OFFSET(HistorySeekReq, _impl_.ts_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
    "\25\0\5\0\0\0\0\0"
    "remote.HistorySeekReq"
    "table"
  }},
};

PROTOBUF_NOINLINE void HistorySeekReq::Clear() {
// @@protoc_insertion_point(message_clear_start:remote.HistorySeekReq)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.table_.ClearToEmpty();
  _impl_.k_.ClearToEmpty();
  ::memset(&_impl_.tx_id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.ts_) -
      reinterpret_cast<char*>(&_impl_.tx_id_)) + sizeof(_impl_.ts_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* HistorySeekReq::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:remote.HistorySeekReq)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint64 tx_id = 1;
  if (this->_internal_tx_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this->_internal_tx_id(), target);
  }

  // string table = 2;
  if (!this->_internal_table().empty()) {
    const std::string& _s = this->_internal_table();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "remote.HistorySeekReq.table");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // bytes k = 3;
  if (!this->_internal_k().empty()) {
    const std::string& _s = this->_internal_k();
    target = stream->WriteBytesMaybeAliased(3, _s, target);
  }

  // uint64 ts = 4;
  if (this->_internal_ts() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        4, this->_internal_ts(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:remote.HistorySeekReq)
  return target;
}

::size_t HistorySeekReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:remote.HistorySeekReq)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // string table = 2;
  if (!this->_internal_table().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_table());
  }

  // bytes k = 3;
  if (!this->_internal_k().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_k());
  }

  // uint64 tx_id = 1;
  if (this->_internal_tx_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_tx_id());
  }

  // uint64 ts = 4;
  if (this->_internal_ts() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_ts());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void HistorySeekReq::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<HistorySeekReq*>(&to_msg);
  auto& from = static_cast<const HistorySeekReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:remote.HistorySeekReq)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_table().empty()) {
    _this->_internal_set_table(from._internal_table());
  }
  if (!from._internal_k().empty()) {
    _this->_internal_set_k(from._internal_k());
  }
  if (from._internal_tx_id() != 0) {
    _this->_impl_.tx_id_ = from._impl_.tx_id_;
  }
  if (from._internal_ts() != 0) {
    _this->_impl_.ts_ = from._impl_.ts_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void HistorySeekReq::CopyFrom(const HistorySeekReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:remote.HistorySeekReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void HistorySeekReq::InternalSwap(HistorySeekReq* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.table_, &other->_impl_.table_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.k_, &other->_impl_.k_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(HistorySeekReq, _impl_.ts_)
      + sizeof(HistorySeekReq::_impl_.ts_)
      - PROTOBUF_FIELD_OFFSET(HistorySeekReq, _impl_.tx_id_)>(
          reinterpret_cast<char*>(&_impl_.tx_id_),
          reinterpret_cast<char*>(&other->_impl_.tx_id_));
}

::google::protobuf::Metadata HistorySeekReq::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class HistorySeekReply::_Internal {
 public:
};

HistorySeekReply::HistorySeekReply(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:remote.HistorySeekReply)
}
inline PROTOBUF_NDEBUG_INLINE HistorySeekReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::remote::HistorySeekReply& from_msg)
      : v_(arena, from.v_),
        _cached_size_{0} {}

HistorySeekReply::HistorySeekReply(
    ::google::protobuf::Arena* arena,
    const HistorySeekReply& from)
    : ::google::protobuf::Message(arena) {
  HistorySeekReply* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.ok_ = from._impl_.ok_;

  // @@protoc_insertion_point(copy_constructor:remote.HistorySeekReply)
}
inline PROTOBUF_NDEBUG_INLINE HistorySeekReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : v_(arena),
        _cached_size_{0} {}

inline void HistorySeekReply::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.ok_ = {};
}
HistorySeekReply::~HistorySeekReply() {
  // @@protoc_insertion_point(destructor:remote.HistorySeekReply)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void HistorySeekReply::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.v_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
HistorySeekReply::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(HistorySeekReply, _impl_._cached_size_),
              false,
          },
          &HistorySeekReply::MergeImpl,
          &HistorySeekReply::kDescriptorMethods,
          &descriptor_table_remote_2fkv_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> HistorySeekReply::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_HistorySeekReply_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::remote::HistorySeekReply>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bool ok = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(HistorySeekReply, _impl_.ok_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(HistorySeekReply, _impl_.ok_)}},
    // bytes v = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(HistorySeekReply, _impl_.v_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes v = 1;
    {PROTOBUF_FIELD_OFFSET(HistorySeekReply, _impl_.v_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // bool ok = 2;
    {PROTOBUF_FIELD_OFFSET(HistorySeekReply, _impl_.ok_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void HistorySeekReply::Clear() {
// @@protoc_insertion_point(message_clear_start:remote.HistorySeekReply)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.v_.ClearToEmpty();
  _impl_.ok_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* HistorySeekReply::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:remote.HistorySeekReply)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bytes v = 1;
  if (!this->_internal_v().empty()) {
    const std::string& _s = this->_internal_v();
    target = stream->WriteBytesMaybeAliased(1, _s, target);
  }

  // bool ok = 2;
  if (this->_internal_ok() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        2, this->_internal_ok(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:remote.HistorySeekReply)
  return target;
}

::size_t HistorySeekReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:remote.HistorySeekReply)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // bytes v = 1;
  if (!this->_internal_v().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_v());
  }

  // bool ok = 2;
  if (this->_internal_ok() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void HistorySeekReply::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<HistorySeekReply*>(&to_msg);
  auto& from = static_cast<const HistorySeekReply&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:remote.HistorySeekReply)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_v().empty()) {
    _this->_internal_set_v(from._internal_v());
  }
  if (from._internal_ok() != 0) {
    _this->_impl_.ok_ = from._impl_.ok_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void HistorySeekReply::CopyFrom(const HistorySeekReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:remote.HistorySeekReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void HistorySeekReply::InternalSwap(HistorySeekReply* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.v_, &other->_impl_.v_, arena);
        swap(_impl_.ok_, other->_impl_.ok_);
}

::google::protobuf::Metadata HistorySeekReply::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class IndexRangeReq::_Internal {
 public:
};

IndexRangeReq::IndexRangeReq(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:remote.IndexRangeReq)
}
inline PROTOBUF_NDEBUG_INLINE IndexRangeReq::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::remote::IndexRangeReq& from_msg)
      : table_(arena, from.table_),
        k_(arena, from.k_),
        page_token_(arena, from.page_token_),
        _cached_size_{0} {}

IndexRangeReq::IndexRangeReq(
    ::google::protobuf::Arena* arena,
    const IndexRangeReq& from)
    : ::google::protobuf::Message(arena) {
  IndexRangeReq* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, tx_id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, tx_id_),
           offsetof(Impl_, page_size_) -
               offsetof(Impl_, tx_id_) +
               sizeof(Impl_::page_size_));

  // @@protoc_insertion_point(copy_constructor:remote.IndexRangeReq)
}
inline PROTOBUF_NDEBUG_INLINE IndexRangeReq::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : table_(arena),
        k_(arena),
        page_token_(arena),
        _cached_size_{0} {}

inline void IndexRangeReq::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, tx_id_),
           0,
           offsetof(Impl_, page_size_) -
               offsetof(Impl_, tx_id_) +
               sizeof(Impl_::page_size_));
}
IndexRangeReq::~IndexRangeReq() {
  // @@protoc_insertion_point(destructor:remote.IndexRangeReq)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void IndexRangeReq::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.table_.Destroy();
  _impl_.k_.Destroy();
  _impl_.page_token_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
IndexRangeReq::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(IndexRangeReq, _impl_._cached_size_),
              false,
          },
          &IndexRangeReq::MergeImpl,
          &IndexRangeReq::kDescriptorMethods,
          &descriptor_table_remote_2fkv_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 9, 0, 52, 2> IndexRangeReq::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    9, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966784,  // skipmap
    offsetof(decltype(_table_), field_entries),
    9,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_IndexRangeReq_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::remote::IndexRangeReq>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint64 tx_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(IndexRangeReq, _impl_.tx_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(IndexRangeReq, _impl_.tx_id_)}},
    // string table = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(IndexRangeReq, _impl_.table_)}},
    // bytes k = 3;
    {::_pbi::TcParser::FastBS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(IndexRangeReq, _impl_.k_)}},
    // sint64 from_ts = 4;
    {::_pbi::TcParser::FastZ64S1,
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(IndexRangeReq, _impl_.from_ts_)}},
    // sint64 to_ts = 5;
    {::_pbi::TcParser::FastZ64S1,
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(IndexRangeReq, _impl_.to_ts_)}},
    // bool order_ascend = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(IndexRangeReq, _impl_.order_ascend_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(IndexRangeReq, _impl_.order_ascend_)}},
    // sint64 limit = 7;
    {::_pbi::TcParser::FastZ64S1,
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(IndexRangeReq, _impl_.limit_)}},
    // int32 page_size = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(IndexRangeReq, _impl_.page_size_), 63>(),
     {64, 63, 0, PROTOBUF_FIELD_OFFSET(IndexRangeReq, _impl_.page_size_)}},
    // string page_token = 9;
    {::_pbi::TcParser::FastUS1,
     {74, 63, 0, PROTOBUF_FIELD_OFFSET(IndexRangeReq, _impl_.page_token_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 tx_id = 1;
    {PROTOBUF_FIELD_OFFSET(IndexRangeReq, _impl_.tx_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // string table = 2;
    {PROTOBUF_FIELD_OFFSET(IndexRangeReq, _impl_.table_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bytes k = 3;
    {PROTOBUF_FIELD_OFFSET(IndexRangeReq, _impl_.k_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // sint64 from_ts = 4;
    {PROTOBUF_FIELD_OFFSET(IndexRangeReq, _impl_.from_ts_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kSInt64)},
    // sint64 to_ts = 5;
    {PROTOBUF_FIELD_OFFSET(IndexRangeReq, _impl_.to_ts_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kSInt64)},
    // bool order_ascend = 6;
    {PROTOBUF_FIELD_OFFSET(IndexRangeReq, _impl_.order_ascend_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // sint64 limit = 7;
    {PROTOBUF_FIELD_OFFSET(IndexRangeReq, _impl_.limit_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kSInt64)},
    // int32 page_size = 8;
    {PROTOBUF_FIELD_OFFSET(IndexRangeReq, _impl_.page_size_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string page_token = 9;
    {PROTOBUF_FIELD_OFFSET(IndexRangeReq, _impl_.page_token_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\24\0\5\0\0\0\0\0\0\12\0\0\0\0\0\0"
    "remote.IndexRangeReq"
    "table"
    "page_token"
  }},
};

PROTOBUF_NOINLINE void IndexRangeReq::Clear() {
// @@protoc_insertion_point(message_clear_start:remote.IndexRangeReq)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.table_.ClearToEmpty();
  _impl_.k_.ClearToEmpty();
  _impl_.page_token_.ClearToEmpty();
  ::memset(&_impl_.tx_id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.page_size_) -
      reinterpret_cast<char*>(&_impl_.tx_id_)) + sizeof(_impl_.page_size_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* IndexRangeReq::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:remote.IndexRangeReq)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint64 tx_id = 1;
  if (this->_internal_tx_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this->_internal_tx_id(), target);
  }

  // string table = 2;
  if (!this->_internal_table().empty()) {
    const std::string& _s = this->_internal_table();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "remote.IndexRangeReq.table");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // bytes k = 3;
  if (!this->_internal_k().empty()) {
    const std::string& _s = this->_internal_k();
    target = stream->WriteBytesMaybeAliased(3, _s, target);
  }

  // sint64 from_ts = 4;
  if (this->_internal_from_ts() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt64ToArray(
        4, this->_internal_from_ts(), target);
  }

  // sint64 to_ts = 5;
  if (this->_internal_to_ts() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt64ToArray(
        5, this->_internal_to_ts(), target);
  }

  // bool order_ascend = 6;
  if (this->_internal_order_ascend() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        6, this->_internal_order_ascend(), target);
  }

  // sint64 limit = 7;
  if (this->_internal_limit() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt64ToArray(
        7, this->_internal_limit(), target);
  }

  // int32 page_size = 8;
  if (this->_internal_page_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<8>(
            stream, this->_internal_page_size(), target);
  }

  // string page_token = 9;
  if (!this->_internal_page_token().empty()) {
    const std::string& _s = this->_internal_page_token();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "remote.IndexRangeReq.page_token");
    target = stream->WriteStringMaybeAliased(9, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:remote.IndexRangeReq)
  return target;
}

::size_t IndexRangeReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:remote.IndexRangeReq)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // string table = 2;
  if (!this->_internal_table().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_table());
  }

  // bytes k = 3;
  if (!this->_internal_k().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_k());
  }

  // string page_token = 9;
  if (!this->_internal_page_token().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_page_token());
  }

  // uint64 tx_id = 1;
  if (this->_internal_tx_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_tx_id());
  }

  // sint64 from_ts = 4;
  if (this->_internal_from_ts() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt64SizePlusOne(
        this->_internal_from_ts());
  }

  // sint64 to_ts = 5;
  if (this->_internal_to_ts() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt64SizePlusOne(
        this->_internal_to_ts());
  }

  // sint64 limit = 7;
  if (this->_internal_limit() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt64SizePlusOne(
        this->_internal_limit());
  }

  // bool order_ascend = 6;
  if (this->_internal_order_ascend() != 0) {
    total_size += 2;
  }

  // int32 page_size = 8;
  if (this->_internal_page_size() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_page_size());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void IndexRangeReq::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<IndexRangeReq*>(&to_msg);
  auto& from = static_cast<const IndexRangeReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:remote.IndexRangeReq)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_table().empty()) {
    _this->_internal_set_table(from._internal_table());
  }
  if (!from._internal_k().empty()) {
    _this->_internal_set_k(from._internal_k());
  }
  if (!from._internal_page_token().empty()) {
    _this->_internal_set_page_token(from._internal_page_token());
  }
  if (from._internal_tx_id() != 0) {
    _this->_impl_.tx_id_ = from._impl_.tx_id_;
  }
  if (from._internal_from_ts() != 0) {
    _this->_impl_.from_ts_ = from._impl_.from_ts_;
  }
  if (from._internal_to_ts() != 0) {
    _this->_impl_.to_ts_ = from._impl_.to_ts_;
  }
  if (from._internal_limit() != 0) {
    _this->_impl_.limit_ = from._impl_.limit_;
  }
  if (from._internal_order_ascend() != 0) {
    _this->_impl_.order_ascend_ = from._impl_.order_ascend_;
  }
  if (from._internal_page_size() != 0) {
    _this->_impl_.page_size_ = from._impl_.page_size_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void IndexRangeReq::CopyFrom(const IndexRangeReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:remote.IndexRangeReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void IndexRangeReq::InternalSwap(IndexRangeReq* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.table_, &other->_impl_.table_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.k_, &other->_impl_.k_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.page_token_, &other->_impl_.page_token_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(IndexRangeReq, _impl_.page_size_)
      + sizeof(IndexRangeReq::_impl_.page_size_)
      - PROTOBUF_FIELD_OFFSET(IndexRangeReq, _impl_.tx_id_)>(
          reinterpret_cast<char*>(&_impl_.tx_id_),
          reinterpret_cast<char*>(&other->_impl_.tx_id_));
}

::google::protobuf::Metadata IndexRangeReq::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class IndexRangeReply::_Internal {
 public:
};

IndexRangeReply::IndexRangeReply(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:remote.IndexRangeReply)
}
inline PROTOBUF_NDEBUG_INLINE IndexRangeReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::remote::IndexRangeReply& from_msg)
      : timestamps_{visibility, arena, from.timestamps_},
        _timestamps_cached_byte_size_{0},
        next_page_token_(arena, from.next_page_token_),
        _cached_size_{0} {}

IndexRangeReply::IndexRangeReply(
    ::google::protobuf::Arena* arena,
    const IndexRangeReply& from)
    : ::google::protobuf::Message(arena) {
  IndexRangeReply* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:remote.IndexRangeReply)
}
inline PROTOBUF_NDEBUG_INLINE IndexRangeReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : timestamps_{visibility, arena},
        _timestamps_cached_byte_size_{0},
        next_page_token_(arena),
        _cached_size_{0} {}

inline void IndexRangeReply::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
IndexRangeReply::~IndexRangeReply() {
  // @@protoc_insertion_point(destructor:remote.IndexRangeReply)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void IndexRangeReply::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.next_page_token_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
IndexRangeReply::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(IndexRangeReply, _impl_._cached_size_),
              false,
          },
          &IndexRangeReply::MergeImpl,
          &IndexRangeReply::kDescriptorMethods,
          &descriptor_table_remote_2fkv_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 46, 2> IndexRangeReply::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_IndexRangeReply_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::remote::IndexRangeReply>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string next_page_token = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(IndexRangeReply, _impl_.next_page_token_)}},
    // repeated uint64 timestamps = 1;
    {::_pbi::TcParser::FastV64P1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(IndexRangeReply, _impl_.timestamps_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated uint64 timestamps = 1;
    {PROTOBUF_FIELD_OFFSET(IndexRangeReply, _impl_.timestamps_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedUInt64)},
    // string next_page_token = 2;
    {PROTOBUF_FIELD_OFFSET(IndexRangeReply, _impl_.next_page_token_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\26\0\17\0\0\0\0\0"
    "remote.IndexRangeReply"
    "next_page_token"
  }},
};

PROTOBUF_NOINLINE void IndexRangeReply::Clear() {
// @@protoc_insertion_point(message_clear_start:remote.IndexRangeReply)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.timestamps_.Clear();
  _impl_.next_page_token_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* IndexRangeReply::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:remote.IndexRangeReply)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated uint64 timestamps = 1;
  {
    int byte_size = _impl_._timestamps_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteUInt64Packed(
          1, _internal_timestamps(), byte_size, target);
    }
  }

  // string next_page_token = 2;
  if (!this->_internal_next_page_token().empty()) {
    const std::string& _s = this->_internal_next_page_token();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "remote.IndexRangeReply.next_page_token");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:remote.IndexRangeReply)
  return target;
}

::size_t IndexRangeReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:remote.IndexRangeReply)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated uint64 timestamps = 1;
  {
    std::size_t data_size = ::_pbi::WireFormatLite::UInt64Size(
        this->_internal_timestamps())
    ;
    _impl_._timestamps_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // string next_page_token = 2;
  if (!this->_internal_next_page_token().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_next_page_token());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void IndexRangeReply::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<IndexRangeReply*>(&to_msg);
  auto& from = static_cast<const IndexRangeReply&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:remote.IndexRangeReply)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_timestamps()->MergeFrom(from._internal_timestamps());
  if (!from._internal_next_page_token().empty()) {
    _this->_internal_set_next_page_token(from._internal_next_page_token());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void IndexRangeReply::CopyFrom(const IndexRangeReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:remote.IndexRangeReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void IndexRangeReply::InternalSwap(IndexRangeReply* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.timestamps_.InternalSwap(&other->_impl_.timestamps_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.next_page_token_, &other->_impl_.next_page_token_, arena);
}

::google::protobuf::Metadata IndexRangeReply::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class HistoryRangeReq::_Internal {
 public:
};

HistoryRangeReq::HistoryRangeReq(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:remote.HistoryRangeReq)
}
inline PROTOBUF_NDEBUG_INLINE HistoryRangeReq::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::remote::HistoryRangeReq& from_msg)
      : table_(arena, from.table_),
        page_token_(arena, from.page_token_),
        _cached_size_{0} {}

HistoryRangeReq::HistoryRangeReq(
    ::google::protobuf::Arena* arena,
    const HistoryRangeReq& from)
    : ::google::protobuf::Message(arena) {
  HistoryRangeReq* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, tx_id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, tx_id_),
           offsetof(Impl_, page_size_) -
               offsetof(Impl_, tx_id_) +
               sizeof(Impl_::page_size_));

  // @@protoc_insertion_point(copy_constructor:remote.HistoryRangeReq)
}
inline PROTOBUF_NDEBUG_INLINE HistoryRangeReq::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : table_(arena),
        page_token_(arena),
        _cached_size_{0} {}

inline void HistoryRangeReq::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, tx_id_),
           0,
           offsetof(Impl_, page_size_) -
               offsetof(Impl_, tx_id_) +
               sizeof(Impl_::page_size_));
}
HistoryRangeReq::~HistoryRangeReq() {
  // @@protoc_insertion_point(destructor:remote.HistoryRangeReq)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void HistoryRangeReq::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.table_.Destroy();
  _impl_.page_token_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
HistoryRangeReq::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(HistoryRangeReq, _impl_._cached_size_),
              false,
          },
          &HistoryRangeReq::MergeImpl,
          &HistoryRangeReq::kDescriptorMethods,
          &descriptor_table_remote_2fkv_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 8, 0, 54, 2> HistoryRangeReq::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    9, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966788,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_HistoryRangeReq_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::remote::HistoryRangeReq>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint64 tx_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(HistoryRangeReq, _impl_.tx_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(HistoryRangeReq, _impl_.tx_id_)}},
    // string table = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(HistoryRangeReq, _impl_.table_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // sint64 from_ts = 4;
    {::_pbi::TcParser::FastZ64S1,
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(HistoryRangeReq, _impl_.from_ts_)}},
    // sint64 to_ts = 5;
    {::_pbi::TcParser::FastZ64S1,
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(HistoryRangeReq, _impl_.to_ts_)}},
    // bool order_ascend = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(HistoryRangeReq, _impl_.order_ascend_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(HistoryRangeReq, _impl_.order_ascend_)}},
    // sint64 limit = 7;
    {::_pbi::TcParser::FastZ64S1,
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(HistoryRangeReq, _impl_.limit_)}},
    // int32 page_size = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(HistoryRangeReq, _impl_.page_size_), 63>(),
     {64, 63, 0, PROTOBUF_FIELD_OFFSET(HistoryRangeReq, _impl_.page_size_)}},
    // string page_token = 9;
    {::_pbi::TcParser::FastUS1,
     {74, 63, 0, PROTOBUF_FIELD_OFFSET(HistoryRangeReq, _impl_.page_token_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 tx_id = 1;
    {PROTOBUF_FIELD_OFFSET(HistoryRangeReq, _impl_.tx_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // string table = 2;
    {PROTOBUF_FIELD_OFFSET(HistoryRangeReq, _impl_.table_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // sint64 from_ts = 4;
    {PROTOBUF_FIELD_OFFSET(HistoryRangeReq, _impl_.from_ts_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kSInt64)},
    // sint64 to_ts = 5;
    {PROTOBUF_FIELD_OFFSET(HistoryRangeReq, _impl_.to_ts_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kSInt64)},
    // bool order_ascend = 6;
    {PROTOBUF_FIELD_OFFSET(HistoryRangeReq, _impl_.order_ascend_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // sint64 limit = 7;
    {PROTOBUF_FIELD_OFFSET(HistoryRangeReq, _impl_.limit_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kSInt64)},
    // int32 page_size = 8;
    {PROTOBUF_FIELD_OFFSET(HistoryRangeReq, _impl_.page_size_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string page_token = 9;
    {PROTOBUF_FIELD_OFFSET(HistoryRangeReq, _impl_.page_token_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\26\0\5\0\0\0\0\0\12\0\0\0\0\0\0\0"
    "remote.HistoryRangeReq"
    "table"
    "page_token"
  }},
};

PROTOBUF_NOINLINE void HistoryRangeReq::Clear() {
// @@protoc_insertion_point(message_clear_start:remote.HistoryRangeReq)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.table_.ClearToEmpty();
  _impl_.page_token_.ClearToEmpty();
  ::memset(&_impl_.tx_id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.page_size_) -
      reinterpret_cast<char*>(&_impl_.tx_id_)) + sizeof(_impl_.page_size_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* HistoryRangeReq::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:remote.HistoryRangeReq)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint64 tx_id = 1;
  if (this->_internal_tx_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this->_internal_tx_id(), target);
  }

  // string table = 2;
  if (!this->_internal_table().empty()) {
    const std::string& _s = this->_internal_table();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "remote.HistoryRangeReq.table");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // sint64 from_ts = 4;
  if (this->_internal_from_ts() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt64ToArray(
        4, this->_internal_from_ts(), target);
  }

  // sint64 to_ts = 5;
  if (this->_internal_to_ts() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt64ToArray(
        5, this->_internal_to_ts(), target);
  }

  // bool order_ascend = 6;
  if (this->_internal_order_ascend() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        6, this->_internal_order_ascend(), target);
  }

  // sint64 limit = 7;
  if (this->_internal_limit() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt64ToArray(
        7, this->_internal_limit(), target);
  }

  // int32 page_size = 8;
  if (this->_internal_page_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<8>(
            stream, this->_internal_page_size(), target);
  }

  // string page_token = 9;
  if (!this->_internal_page_token().empty()) {
    const std::string& _s = this->_internal_page_token();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "remote.HistoryRangeReq.page_token");
    target = stream->WriteStringMaybeAliased(9, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:remote.HistoryRangeReq)
  return target;
}

::size_t HistoryRangeReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:remote.HistoryRangeReq)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // string table = 2;
  if (!this->_internal_table().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_table());
  }

  // string page_token = 9;
  if (!this->_internal_page_token().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_page_token());
  }

  // uint64 tx_id = 1;
  if (this->_internal_tx_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_tx_id());
  }

  // sint64 from_ts = 4;
  if (this->_internal_from_ts() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt64SizePlusOne(
        this->_internal_from_ts());
  }

  // sint64 to_ts = 5;
  if (this->_internal_to_ts() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt64SizePlusOne(
        this->_internal_to_ts());
  }

  // sint64 limit = 7;
  if (this->_internal_limit() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt64SizePlusOne(
        this->_internal_limit());
  }

  // bool order_ascend = 6;
  if (this->_internal_order_ascend() != 0) {
    total_size += 2;
  }

  // int32 page_size = 8;
  if (this->_internal_page_size() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_page_size());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void HistoryRangeReq::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<HistoryRangeReq*>(&to_msg);
  auto& from = static_cast<const HistoryRangeReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:remote.HistoryRangeReq)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_table().empty()) {
    _this->_internal_set_table(from._internal_table());
  }
  if (!from._internal_page_token().empty()) {
    _this->_internal_set_page_token(from._internal_page_token());
  }
  if (from._internal_tx_id() != 0) {
    _this->_impl_.tx_id_ = from._impl_.tx_id_;
  }
  if (from._internal_from_ts() != 0) {
    _this->_impl_.from_ts_ = from._impl_.from_ts_;
  }
  if (from._internal_to_ts() != 0) {
    _this->_impl_.to_ts_ = from._impl_.to_ts_;
  }
  if (from._internal_limit() != 0) {
    _this->_impl_.limit_ = from._impl_.limit_;
  }
  if (from._internal_order_ascend() != 0) {
    _this->_impl_.order_ascend_ = from._impl_.order_ascend_;
  }
  if (from._internal_page_size() != 0) {
    _this->_impl_.page_size_ = from._impl_.page_size_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void HistoryRangeReq::CopyFrom(const HistoryRangeReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:remote.HistoryRangeReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void HistoryRangeReq::InternalSwap(HistoryRangeReq* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.table_, &other->_impl_.table_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.page_token_, &other->_impl_.page_token_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(HistoryRangeReq, _impl_.page_size_)
      + sizeof(HistoryRangeReq::_impl_.page_size_)
      - PROTOBUF_FIELD_OFFSET(HistoryRangeReq, _impl_.tx_id_)>(
          reinterpret_cast<char*>(&_impl_.tx_id_),
          reinterpret_cast<char*>(&other->_impl_.tx_id_));
}

::google::protobuf::Metadata HistoryRangeReq::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RangeAsOfReq::_Internal {
 public:
};

RangeAsOfReq::RangeAsOfReq(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:remote.RangeAsOfReq)
}
inline PROTOBUF_NDEBUG_INLINE RangeAsOfReq::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::remote::RangeAsOfReq& from_msg)
      : table_(arena, from.table_),
        from_key_(arena, from.from_key_),
        to_key_(arena, from.to_key_),
        page_token_(arena, from.page_token_),
        _cached_size_{0} {}

RangeAsOfReq::RangeAsOfReq(
    ::google::protobuf::Arena* arena,
    const RangeAsOfReq& from)
    : ::google::protobuf::Message(arena) {
  RangeAsOfReq* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, tx_id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, tx_id_),
           offsetof(Impl_, limit_) -
               offsetof(Impl_, tx_id_) +
               sizeof(Impl_::limit_));

  // @@protoc_insertion_point(copy_constructor:remote.RangeAsOfReq)
}
inline PROTOBUF_NDEBUG_INLINE RangeAsOfReq::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : table_(arena),
        from_key_(arena),
        to_key_(arena),
        page_token_(arena),
        _cached_size_{0} {}

inline void RangeAsOfReq::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, tx_id_),
           0,
           offsetof(Impl_, limit_) -
               offsetof(Impl_, tx_id_) +
               sizeof(Impl_::limit_));
}
RangeAsOfReq::~RangeAsOfReq() {
  // @@protoc_insertion_point(destructor:remote.RangeAsOfReq)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RangeAsOfReq::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.table_.Destroy();
  _impl_.from_key_.Destroy();
  _impl_.to_key_.Destroy();
  _impl_.page_token_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
RangeAsOfReq::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(RangeAsOfReq, _impl_._cached_size_),
              false,
          },
          &RangeAsOfReq::MergeImpl,
          &RangeAsOfReq::kDescriptorMethods,
          &descriptor_table_remote_2fkv_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 10, 0, 51, 2> RangeAsOfReq::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    10, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966272,  // skipmap
    offsetof(decltype(_table_), field_entries),
    10,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_RangeAsOfReq_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::remote::RangeAsOfReq>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint64 tx_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(RangeAsOfReq, _impl_.tx_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(RangeAsOfReq, _impl_.tx_id_)}},
    // string table = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(RangeAsOfReq, _impl_.table_)}},
    // bytes from_key = 3;
    {::_pbi::TcParser::FastBS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(RangeAsOfReq, _impl_.from_key_)}},
    // bytes to_key = 4;
    {::_pbi::TcParser::FastBS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(RangeAsOfReq, _impl_.to_key_)}},
    // uint64 ts = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(RangeAsOfReq, _impl_.ts_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(RangeAsOfReq, _impl_.ts_)}},
    // bool latest = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(RangeAsOfReq, _impl_.latest_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(RangeAsOfReq, _impl_.latest_)}},
    // bool order_ascend = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(RangeAsOfReq, _impl_.order_ascend_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(RangeAsOfReq, _impl_.order_ascend_)}},
    // sint64 limit = 8;
    {::_pbi::TcParser::FastZ64S1,
     {64, 63, 0, PROTOBUF_FIELD_OFFSET(RangeAsOfReq, _impl_.limit_)}},
    // int32 page_size = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RangeAsOfReq, _impl_.page_size_), 63>(),
     {72, 63, 0, PROTOBUF_FIELD_OFFSET(RangeAsOfReq, _impl_.page_size_)}},
    // string page_token = 10;
    {::_pbi::TcParser::FastUS1,
     {82, 63, 0, PROTOBUF_FIELD_OFFSET(RangeAsOfReq, _impl_.page_token_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 tx_id = 1;
    {PROTOBUF_FIELD_OFFSET(RangeAsOfReq, _impl_.tx_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // string table = 2;
    {PROTOBUF_FIELD_OFFSET(RangeAsOfReq, _impl_.table_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bytes from_key = 3;
    {PROTOBUF_FIELD_OFFSET(RangeAsOfReq, _impl_.from_key_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // bytes to_key = 4;
    {PROTOBUF_FIELD_OFFSET(RangeAsOfReq, _impl_.to_key_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // uint64 ts = 5;
    {PROTOBUF_FIELD_OFFSET(RangeAsOfReq, _impl_.ts_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // bool latest = 6;
    {PROTOBUF_FIELD_OFFSET(RangeAsOfReq, _impl_.latest_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool order_ascend = 7;
    {PROTOBUF_FIELD_OFFSET(RangeAsOfReq, _impl_.order_ascend_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // sint64 limit = 8;
    {PROTOBUF_FIELD_OFFSET(RangeAsOfReq, _impl_.limit_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kSInt64)},
    // int32 page_size = 9;
    {PROTOBUF_FIELD_OFFSET(RangeAsOfReq, _impl_.page_size_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string page_token = 10;
    {PROTOBUF_FIELD_OFFSET(RangeAsOfReq, _impl_.page_token_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\23\0\5\0\0\0\0\0\0\0\12\0\0\0\0\0"
    "remote.RangeAsOfReq"
    "table"
    "page_token"
  }},
};

PROTOBUF_NOINLINE void RangeAsOfReq::Clear() {
// @@protoc_insertion_point(message_clear_start:remote.RangeAsOfReq)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.table_.ClearToEmpty();
  _impl_.from_key_.ClearToEmpty();
  _impl_.to_key_.ClearToEmpty();
  _impl_.page_token_.ClearToEmpty();
  ::memset(&_impl_.tx_id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.limit_) -
      reinterpret_cast<char*>(&_impl_.tx_id_)) + sizeof(_impl_.limit_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* RangeAsOfReq::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:remote.RangeAsOfReq)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint64 tx_id = 1;
  if (this->_internal_tx_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this->_internal_tx_id(), target);
  }

  // string table = 2;
  if (!this->_internal_table().empty()) {
    const std::string& _s = this->_internal_table();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "remote.RangeAsOfReq.table");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // bytes from_key = 3;
  if (!this->_internal_from_key().empty()) {
    const std::string& _s = this->_internal_from_key();
    target = stream->WriteBytesMaybeAliased(3, _s, target);
  }

  // bytes to_key = 4;
  if (!this->_internal_to_key().empty()) {
    const std::string& _s = this->_internal_to_key();
    target = stream->WriteBytesMaybeAliased(4, _s, target);
  }

  // uint64 ts = 5;
  if (this->_internal_ts() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        5, this->_internal_ts(), target);
  }

  // bool latest = 6;
  if (this->_internal_latest() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        6, this->_internal_latest(), target);
  }

  // bool order_ascend = 7;
  if (this->_internal_order_ascend() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        7, this->_internal_order_ascend(), target);
  }

  // sint64 limit = 8;
  if (this->_internal_limit() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt64ToArray(
        8, this->_internal_limit(), target);
  }

  // int32 page_size = 9;
  if (this->_internal_page_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<9>(
            stream, this->_internal_page_size(), target);
  }

  // string page_token = 10;
  if (!this->_internal_page_token().empty()) {
    const std::string& _s = this->_internal_page_token();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "remote.RangeAsOfReq.page_token");
    target = stream->WriteStringMaybeAliased(10, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:remote.RangeAsOfReq)
  return target;
}

::size_t RangeAsOfReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:remote.RangeAsOfReq)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // string table = 2;
  if (!this->_internal_table().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_table());
  }

  // bytes from_key = 3;
  if (!this->_internal_from_key().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_from_key());
  }

  // bytes to_key = 4;
  if (!this->_internal_to_key().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_to_key());
  }

  // string page_token = 10;
  if (!this->_internal_page_token().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_page_token());
  }

  // uint64 tx_id = 1;
  if (this->_internal_tx_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_tx_id());
  }

  // uint64 ts = 5;
  if (this->_internal_ts() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_ts());
  }

  // bool latest = 6;
  if (this->_internal_latest() != 0) {
    total_size += 2;
  }

  // bool order_ascend = 7;
  if (this->_internal_order_ascend() != 0) {
    total_size += 2;
  }

  // int32 page_size = 9;
  if (this->_internal_page_size() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_page_size());
  }

  // sint64 limit = 8;
  if (this->_internal_limit() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt64SizePlusOne(
        this->_internal_limit());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void RangeAsOfReq::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RangeAsOfReq*>(&to_msg);
  auto& from = static_cast<const RangeAsOfReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:remote.RangeAsOfReq)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_table().empty()) {
    _this->_internal_set_table(from._internal_table());
  }
  if (!from._internal_from_key().empty()) {
    _this->_internal_set_from_key(from._internal_from_key());
  }
  if (!from._internal_to_key().empty()) {
    _this->_internal_set_to_key(from._internal_to_key());
  }
  if (!from._internal_page_token().empty()) {
    _this->_internal_set_page_token(from._internal_page_token());
  }
  if (from._internal_tx_id() != 0) {
    _this->_impl_.tx_id_ = from._impl_.tx_id_;
  }
  if (from._internal_ts() != 0) {
    _this->_impl_.ts_ = from._impl_.ts_;
  }
  if (from._internal_latest() != 0) {
    _this->_impl_.latest_ = from._impl_.latest_;
  }
  if (from._internal_order_ascend() != 0) {
    _this->_impl_.order_ascend_ = from._impl_.order_ascend_;
  }
  if (from._internal_page_size() != 0) {
    _this->_impl_.page_size_ = from._impl_.page_size_;
  }
  if (from._internal_limit() != 0) {
    _this->_impl_.limit_ = from._impl_.limit_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RangeAsOfReq::CopyFrom(const RangeAsOfReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:remote.RangeAsOfReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RangeAsOfReq::InternalSwap(RangeAsOfReq* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.table_, &other->_impl_.table_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.from_key_, &other->_impl_.from_key_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.to_key_, &other->_impl_.to_key_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.page_token_, &other->_impl_.page_token_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RangeAsOfReq, _impl_.limit_)
      + sizeof(RangeAsOfReq::_impl_.limit_)
      - PROTOBUF_FIELD_OFFSET(RangeAsOfReq, _impl_.tx_id_)>(
          reinterpret_cast<char*>(&_impl_.tx_id_),
          reinterpret_cast<char*>(&other->_impl_.tx_id_));
}

::google::protobuf::Metadata RangeAsOfReq::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Pairs::_Internal {
 public:
};

Pairs::Pairs(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:remote.Pairs)
}
inline PROTOBUF_NDEBUG_INLINE Pairs::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::remote::Pairs& from_msg)
      : keys_{visibility, arena, from.keys_},
        values_{visibility, arena, from.values_},
        next_page_token_(arena, from.next_page_token_),
        _cached_size_{0} {}

Pairs::Pairs(
    ::google::protobuf::Arena* arena,
    const Pairs& from)
    : ::google::protobuf::Message(arena) {
  Pairs* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:remote.Pairs)
}
inline PROTOBUF_NDEBUG_INLINE Pairs::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : keys_{visibility, arena},
        values_{visibility, arena},
        next_page_token_(arena),
        _cached_size_{0} {}

inline void Pairs::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Pairs::~Pairs() {
  // @@protoc_insertion_point(destructor:remote.Pairs)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Pairs::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.next_page_token_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Pairs::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(Pairs, _impl_._cached_size_),
              false,
          },
          &Pairs::MergeImpl,
          &Pairs::kDescriptorMethods,
          &descriptor_table_remote_2fkv_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 36, 2> Pairs::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Pairs_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::remote::Pairs>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated bytes keys = 1;
    {::_pbi::TcParser::FastBR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Pairs, _impl_.keys_)}},
    // repeated bytes values = 2;
    {::_pbi::TcParser::FastBR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Pairs, _impl_.values_)}},
    // string next_page_token = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Pairs, _impl_.next_page_token_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated bytes keys = 1;
    {PROTOBUF_FIELD_OFFSET(Pairs, _impl_.keys_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kBytes | ::_fl::kRepSString)},
    // repeated bytes values = 2;
    {PROTOBUF_FIELD_OFFSET(Pairs, _impl_.values_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kBytes | ::_fl::kRepSString)},
    // string next_page_token = 3;
    {PROTOBUF_FIELD_OFFSET(Pairs, _impl_.next_page_token_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\14\0\0\17\0\0\0\0"
    "remote.Pairs"
    "next_page_token"
  }},
};

PROTOBUF_NOINLINE void Pairs::Clear() {
// @@protoc_insertion_point(message_clear_start:remote.Pairs)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.keys_.Clear();
  _impl_.values_.Clear();
  _impl_.next_page_token_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* Pairs::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:remote.Pairs)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated bytes keys = 1;
  for (int i = 0, n = this->_internal_keys_size(); i < n; ++i) {
    const auto& s = this->_internal_keys().Get(i);
    target = stream->WriteBytes(1, s, target);
  }

  // repeated bytes values = 2;
  for (int i = 0, n = this->_internal_values_size(); i < n; ++i) {
    const auto& s = this->_internal_values().Get(i);
    target = stream->WriteBytes(2, s, target);
  }

  // string next_page_token = 3;
  if (!this->_internal_next_page_token().empty()) {
    const std::string& _s = this->_internal_next_page_token();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "remote.Pairs.next_page_token");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:remote.Pairs)
  return target;
}

::size_t Pairs::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:remote.Pairs)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated bytes keys = 1;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_keys().size());
  for (int i = 0, n = _internal_keys().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
        _internal_keys().Get(i));
  }
  // repeated bytes values = 2;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_values().size());
  for (int i = 0, n = _internal_values().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
        _internal_values().Get(i));
  }
  // string next_page_token = 3;
  if (!this->_internal_next_page_token().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_next_page_token());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Pairs::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Pairs*>(&to_msg);
  auto& from = static_cast<const Pairs&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:remote.Pairs)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_keys()->MergeFrom(from._internal_keys());
  _this->_internal_mutable_values()->MergeFrom(from._internal_values());
  if (!from._internal_next_page_token().empty()) {
    _this->_internal_set_next_page_token(from._internal_next_page_token());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Pairs::CopyFrom(const Pairs& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:remote.Pairs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Pairs::InternalSwap(Pairs* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.keys_.InternalSwap(&other->_impl_.keys_);
  _impl_.values_.InternalSwap(&other->_impl_.values_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.next_page_token_, &other->_impl_.next_page_token_, arena);
}

::google::protobuf::Metadata Pairs::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PairsPagination::_Internal {
 public:
};

PairsPagination::PairsPagination(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:remote.PairsPagination)
}
inline PROTOBUF_NDEBUG_INLINE PairsPagination::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::remote::PairsPagination& from_msg)
      : next_key_(arena, from.next_key_),
        _cached_size_{0} {}

PairsPagination::PairsPagination(
    ::google::protobuf::Arena* arena,
    const PairsPagination& from)
    : ::google::protobuf::Message(arena) {
  PairsPagination* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.limit_ = from._impl_.limit_;

  // @@protoc_insertion_point(copy_constructor:remote.PairsPagination)
}
inline PROTOBUF_NDEBUG_INLINE PairsPagination::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : next_key_(arena),
        _cached_size_{0} {}

inline void PairsPagination::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.limit_ = {};
}
PairsPagination::~PairsPagination() {
  // @@protoc_insertion_point(destructor:remote.PairsPagination)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PairsPagination::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.next_key_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
PairsPagination::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(PairsPagination, _impl_._cached_size_),
              false,
          },
          &PairsPagination::MergeImpl,
          &PairsPagination::kDescriptorMethods,
          &descriptor_table_remote_2fkv_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> PairsPagination::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_PairsPagination_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::remote::PairsPagination>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // sint64 limit = 2;
    {::_pbi::TcParser::FastZ64S1,
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(PairsPagination, _impl_.limit_)}},
    // bytes next_key = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PairsPagination, _impl_.next_key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes next_key = 1;
    {PROTOBUF_FIELD_OFFSET(PairsPagination, _impl_.next_key_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // sint64 limit = 2;
    {PROTOBUF_FIELD_OFFSET(PairsPagination, _impl_.limit_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kSInt64)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void PairsPagination::Clear() {
// @@protoc_insertion_point(message_clear_start:remote.PairsPagination)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.next_key_.ClearToEmpty();
  _impl_.limit_ = ::int64_t{0};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* PairsPagination::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:remote.PairsPagination)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bytes next_key = 1;
  if (!this->_internal_next_key().empty()) {
    const std::string& _s = this->_internal_next_key();
    target = stream->WriteBytesMaybeAliased(1, _s, target);
  }

  // sint64 limit = 2;
  if (this->_internal_limit() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt64ToArray(
        2, this->_internal_limit(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:remote.PairsPagination)
  return target;
}

::size_t PairsPagination::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:remote.PairsPagination)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // bytes next_key = 1;
  if (!this->_internal_next_key().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_next_key());
  }

  // sint64 limit = 2;
  if (this->_internal_limit() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt64SizePlusOne(
        this->_internal_limit());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void PairsPagination::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PairsPagination*>(&to_msg);
  auto& from = static_cast<const PairsPagination&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:remote.PairsPagination)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_next_key().empty()) {
    _this->_internal_set_next_key(from._internal_next_key());
  }
  if (from._internal_limit() != 0) {
    _this->_impl_.limit_ = from._impl_.limit_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PairsPagination::CopyFrom(const PairsPagination& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:remote.PairsPagination)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PairsPagination::InternalSwap(PairsPagination* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.next_key_, &other->_impl_.next_key_, arena);
        swap(_impl_.limit_, other->_impl_.limit_);
}

::google::protobuf::Metadata PairsPagination::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class IndexPagination::_Internal {
 public:
};

IndexPagination::IndexPagination(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:remote.IndexPagination)
}
IndexPagination::IndexPagination(
    ::google::protobuf::Arena* arena, const IndexPagination& from)
    : IndexPagination(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE IndexPagination::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void IndexPagination::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, next_time_stamp_),
           0,
           offsetof(Impl_, limit_) -
               offsetof(Impl_, next_time_stamp_) +
               sizeof(Impl_::limit_));
}
IndexPagination::~IndexPagination() {
  // @@protoc_insertion_point(destructor:remote.IndexPagination)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void IndexPagination::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
IndexPagination::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(IndexPagination, _impl_._cached_size_),
              false,
          },
          &IndexPagination::MergeImpl,
          &IndexPagination::kDescriptorMethods,
          &descriptor_table_remote_2fkv_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> IndexPagination::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_IndexPagination_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::remote::IndexPagination>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // sint64 limit = 2;
    {::_pbi::TcParser::FastZ64S1,
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(IndexPagination, _impl_.limit_)}},
    // sint64 next_time_stamp = 1;
    {::_pbi::TcParser::FastZ64S1,
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(IndexPagination, _impl_.next_time_stamp_)}},
  }}, {{
    65535, 65535
  }}, {{
    // sint64 next_time_stamp = 1;
    {PROTOBUF_FIELD_OFFSET(IndexPagination, _impl_.next_time_stamp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kSInt64)},
    // sint64 limit = 2;
    {PROTOBUF_FIELD_OFFSET(IndexPagination, _impl_.limit_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kSInt64)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void IndexPagination::Clear() {
// @@protoc_insertion_point(message_clear_start:remote.IndexPagination)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.next_time_stamp_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.limit_) -
      reinterpret_cast<char*>(&_impl_.next_time_stamp_)) + sizeof(_impl_.limit_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* IndexPagination::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:remote.IndexPagination)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // sint64 next_time_stamp = 1;
  if (this->_internal_next_time_stamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt64ToArray(
        1, this->_internal_next_time_stamp(), target);
  }

  // sint64 limit = 2;
  if (this->_internal_limit() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt64ToArray(
        2, this->_internal_limit(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:remote.IndexPagination)
  return target;
}

::size_t IndexPagination::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:remote.IndexPagination)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // sint64 next_time_stamp = 1;
  if (this->_internal_next_time_stamp() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt64SizePlusOne(
        this->_internal_next_time_stamp());
  }

  // sint64 limit = 2;
  if (this->_internal_limit() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt64SizePlusOne(
        this->_internal_limit());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void IndexPagination::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<IndexPagination*>(&to_msg);
  auto& from = static_cast<const IndexPagination&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:remote.IndexPagination)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_next_time_stamp() != 0) {
    _this->_impl_.next_time_stamp_ = from._impl_.next_time_stamp_;
  }
  if (from._internal_limit() != 0) {
    _this->_impl_.limit_ = from._impl_.limit_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void IndexPagination::CopyFrom(const IndexPagination& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:remote.IndexPagination)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void IndexPagination::InternalSwap(IndexPagination* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(IndexPagination, _impl_.limit_)
      + sizeof(IndexPagination::_impl_.limit_)
      - PROTOBUF_FIELD_OFFSET(IndexPagination, _impl_.next_time_stamp_)>(
          reinterpret_cast<char*>(&_impl_.next_time_stamp_),
          reinterpret_cast<char*>(&other->_impl_.next_time_stamp_));
}

::google::protobuf::Metadata IndexPagination::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace remote
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_remote_2fkv_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
