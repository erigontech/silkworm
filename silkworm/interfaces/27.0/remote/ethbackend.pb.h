// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: remote/ethbackend.proto
// Protobuf C++ Version: 5.27.0

#ifndef GOOGLE_PROTOBUF_INCLUDED_remote_2fethbackend_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_remote_2fethbackend_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5027000
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "google/protobuf/empty.pb.h"
#include "types/types.pb.h"
#include "remote/bor.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_remote_2fethbackend_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_remote_2fethbackend_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_remote_2fethbackend_2eproto;
namespace remote {
class AddPeerReply;
struct AddPeerReplyDefaultTypeInternal;
extern AddPeerReplyDefaultTypeInternal _AddPeerReply_default_instance_;
class AddPeerRequest;
struct AddPeerRequestDefaultTypeInternal;
extern AddPeerRequestDefaultTypeInternal _AddPeerRequest_default_instance_;
class BlockReply;
struct BlockReplyDefaultTypeInternal;
extern BlockReplyDefaultTypeInternal _BlockReply_default_instance_;
class BlockRequest;
struct BlockRequestDefaultTypeInternal;
extern BlockRequestDefaultTypeInternal _BlockRequest_default_instance_;
class CanonicalBodyForStorageReply;
struct CanonicalBodyForStorageReplyDefaultTypeInternal;
extern CanonicalBodyForStorageReplyDefaultTypeInternal _CanonicalBodyForStorageReply_default_instance_;
class CanonicalBodyForStorageRequest;
struct CanonicalBodyForStorageRequestDefaultTypeInternal;
extern CanonicalBodyForStorageRequestDefaultTypeInternal _CanonicalBodyForStorageRequest_default_instance_;
class CanonicalHashReply;
struct CanonicalHashReplyDefaultTypeInternal;
extern CanonicalHashReplyDefaultTypeInternal _CanonicalHashReply_default_instance_;
class CanonicalHashRequest;
struct CanonicalHashRequestDefaultTypeInternal;
extern CanonicalHashRequestDefaultTypeInternal _CanonicalHashRequest_default_instance_;
class ClientVersionReply;
struct ClientVersionReplyDefaultTypeInternal;
extern ClientVersionReplyDefaultTypeInternal _ClientVersionReply_default_instance_;
class ClientVersionRequest;
struct ClientVersionRequestDefaultTypeInternal;
extern ClientVersionRequestDefaultTypeInternal _ClientVersionRequest_default_instance_;
class EngineGetPayloadBodiesByHashV1Request;
struct EngineGetPayloadBodiesByHashV1RequestDefaultTypeInternal;
extern EngineGetPayloadBodiesByHashV1RequestDefaultTypeInternal _EngineGetPayloadBodiesByHashV1Request_default_instance_;
class EngineGetPayloadBodiesByRangeV1Request;
struct EngineGetPayloadBodiesByRangeV1RequestDefaultTypeInternal;
extern EngineGetPayloadBodiesByRangeV1RequestDefaultTypeInternal _EngineGetPayloadBodiesByRangeV1Request_default_instance_;
class EtherbaseReply;
struct EtherbaseReplyDefaultTypeInternal;
extern EtherbaseReplyDefaultTypeInternal _EtherbaseReply_default_instance_;
class EtherbaseRequest;
struct EtherbaseRequestDefaultTypeInternal;
extern EtherbaseRequestDefaultTypeInternal _EtherbaseRequest_default_instance_;
class HeaderNumberReply;
struct HeaderNumberReplyDefaultTypeInternal;
extern HeaderNumberReplyDefaultTypeInternal _HeaderNumberReply_default_instance_;
class HeaderNumberRequest;
struct HeaderNumberRequestDefaultTypeInternal;
extern HeaderNumberRequestDefaultTypeInternal _HeaderNumberRequest_default_instance_;
class LogsFilterRequest;
struct LogsFilterRequestDefaultTypeInternal;
extern LogsFilterRequestDefaultTypeInternal _LogsFilterRequest_default_instance_;
class NetPeerCountReply;
struct NetPeerCountReplyDefaultTypeInternal;
extern NetPeerCountReplyDefaultTypeInternal _NetPeerCountReply_default_instance_;
class NetPeerCountRequest;
struct NetPeerCountRequestDefaultTypeInternal;
extern NetPeerCountRequestDefaultTypeInternal _NetPeerCountRequest_default_instance_;
class NetVersionReply;
struct NetVersionReplyDefaultTypeInternal;
extern NetVersionReplyDefaultTypeInternal _NetVersionReply_default_instance_;
class NetVersionRequest;
struct NetVersionRequestDefaultTypeInternal;
extern NetVersionRequestDefaultTypeInternal _NetVersionRequest_default_instance_;
class NodesInfoReply;
struct NodesInfoReplyDefaultTypeInternal;
extern NodesInfoReplyDefaultTypeInternal _NodesInfoReply_default_instance_;
class NodesInfoRequest;
struct NodesInfoRequestDefaultTypeInternal;
extern NodesInfoRequestDefaultTypeInternal _NodesInfoRequest_default_instance_;
class PeersReply;
struct PeersReplyDefaultTypeInternal;
extern PeersReplyDefaultTypeInternal _PeersReply_default_instance_;
class PendingBlockReply;
struct PendingBlockReplyDefaultTypeInternal;
extern PendingBlockReplyDefaultTypeInternal _PendingBlockReply_default_instance_;
class ProtocolVersionReply;
struct ProtocolVersionReplyDefaultTypeInternal;
extern ProtocolVersionReplyDefaultTypeInternal _ProtocolVersionReply_default_instance_;
class ProtocolVersionRequest;
struct ProtocolVersionRequestDefaultTypeInternal;
extern ProtocolVersionRequestDefaultTypeInternal _ProtocolVersionRequest_default_instance_;
class SubscribeLogsReply;
struct SubscribeLogsReplyDefaultTypeInternal;
extern SubscribeLogsReplyDefaultTypeInternal _SubscribeLogsReply_default_instance_;
class SubscribeReply;
struct SubscribeReplyDefaultTypeInternal;
extern SubscribeReplyDefaultTypeInternal _SubscribeReply_default_instance_;
class SubscribeRequest;
struct SubscribeRequestDefaultTypeInternal;
extern SubscribeRequestDefaultTypeInternal _SubscribeRequest_default_instance_;
class SyncingReply;
struct SyncingReplyDefaultTypeInternal;
extern SyncingReplyDefaultTypeInternal _SyncingReply_default_instance_;
class SyncingReply_StageProgress;
struct SyncingReply_StageProgressDefaultTypeInternal;
extern SyncingReply_StageProgressDefaultTypeInternal _SyncingReply_StageProgress_default_instance_;
class TxnLookupReply;
struct TxnLookupReplyDefaultTypeInternal;
extern TxnLookupReplyDefaultTypeInternal _TxnLookupReply_default_instance_;
class TxnLookupRequest;
struct TxnLookupRequestDefaultTypeInternal;
extern TxnLookupRequestDefaultTypeInternal _TxnLookupRequest_default_instance_;
}  // namespace remote
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace remote {
enum Event : int {
  HEADER = 0,
  PENDING_LOGS = 1,
  PENDING_BLOCK = 2,
  NEW_SNAPSHOT = 3,
  Event_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  Event_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool Event_IsValid(int value);
extern const uint32_t Event_internal_data_[];
constexpr Event Event_MIN = static_cast<Event>(0);
constexpr Event Event_MAX = static_cast<Event>(3);
constexpr int Event_ARRAYSIZE = 3 + 1;
const ::google::protobuf::EnumDescriptor*
Event_descriptor();
template <typename T>
const std::string& Event_Name(T value) {
  static_assert(std::is_same<T, Event>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to Event_Name().");
  return Event_Name(static_cast<Event>(value));
}
template <>
inline const std::string& Event_Name(Event value) {
  return ::google::protobuf::internal::NameOfDenseEnum<Event_descriptor,
                                                 0, 3>(
      static_cast<int>(value));
}
inline bool Event_Parse(absl::string_view name, Event* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Event>(
      Event_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class TxnLookupReply final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:remote.TxnLookupReply) */ {
 public:
  inline TxnLookupReply() : TxnLookupReply(nullptr) {}
  ~TxnLookupReply() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TxnLookupReply(
      ::google::protobuf::internal::ConstantInitialized);

  inline TxnLookupReply(const TxnLookupReply& from) : TxnLookupReply(nullptr, from) {}
  inline TxnLookupReply(TxnLookupReply&& from) noexcept
      : TxnLookupReply(nullptr, std::move(from)) {}
  inline TxnLookupReply& operator=(const TxnLookupReply& from) {
    CopyFrom(from);
    return *this;
  }
  inline TxnLookupReply& operator=(TxnLookupReply&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TxnLookupReply& default_instance() {
    return *internal_default_instance();
  }
  static inline const TxnLookupReply* internal_default_instance() {
    return reinterpret_cast<const TxnLookupReply*>(
        &_TxnLookupReply_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 25;
  friend void swap(TxnLookupReply& a, TxnLookupReply& b) { a.Swap(&b); }
  inline void Swap(TxnLookupReply* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TxnLookupReply* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TxnLookupReply* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<TxnLookupReply>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TxnLookupReply& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TxnLookupReply& from) { TxnLookupReply::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TxnLookupReply* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "remote.TxnLookupReply"; }

 protected:
  explicit TxnLookupReply(::google::protobuf::Arena* arena);
  TxnLookupReply(::google::protobuf::Arena* arena, const TxnLookupReply& from);
  TxnLookupReply(::google::protobuf::Arena* arena, TxnLookupReply&& from) noexcept
      : TxnLookupReply(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kBlockNumberFieldNumber = 1,
  };
  // uint64 block_number = 1;
  void clear_block_number() ;
  ::uint64_t block_number() const;
  void set_block_number(::uint64_t value);

  private:
  ::uint64_t _internal_block_number() const;
  void _internal_set_block_number(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:remote.TxnLookupReply)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TxnLookupReply_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TxnLookupReply& from_msg);
    ::uint64_t block_number_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_remote_2fethbackend_2eproto;
};
// -------------------------------------------------------------------

class SyncingReply_StageProgress final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:remote.SyncingReply.StageProgress) */ {
 public:
  inline SyncingReply_StageProgress() : SyncingReply_StageProgress(nullptr) {}
  ~SyncingReply_StageProgress() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SyncingReply_StageProgress(
      ::google::protobuf::internal::ConstantInitialized);

  inline SyncingReply_StageProgress(const SyncingReply_StageProgress& from) : SyncingReply_StageProgress(nullptr, from) {}
  inline SyncingReply_StageProgress(SyncingReply_StageProgress&& from) noexcept
      : SyncingReply_StageProgress(nullptr, std::move(from)) {}
  inline SyncingReply_StageProgress& operator=(const SyncingReply_StageProgress& from) {
    CopyFrom(from);
    return *this;
  }
  inline SyncingReply_StageProgress& operator=(SyncingReply_StageProgress&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SyncingReply_StageProgress& default_instance() {
    return *internal_default_instance();
  }
  static inline const SyncingReply_StageProgress* internal_default_instance() {
    return reinterpret_cast<const SyncingReply_StageProgress*>(
        &_SyncingReply_StageProgress_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(SyncingReply_StageProgress& a, SyncingReply_StageProgress& b) { a.Swap(&b); }
  inline void Swap(SyncingReply_StageProgress* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SyncingReply_StageProgress* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SyncingReply_StageProgress* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<SyncingReply_StageProgress>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SyncingReply_StageProgress& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SyncingReply_StageProgress& from) { SyncingReply_StageProgress::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SyncingReply_StageProgress* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "remote.SyncingReply.StageProgress"; }

 protected:
  explicit SyncingReply_StageProgress(::google::protobuf::Arena* arena);
  SyncingReply_StageProgress(::google::protobuf::Arena* arena, const SyncingReply_StageProgress& from);
  SyncingReply_StageProgress(::google::protobuf::Arena* arena, SyncingReply_StageProgress&& from) noexcept
      : SyncingReply_StageProgress(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kStageNameFieldNumber = 1,
    kBlockNumberFieldNumber = 2,
  };
  // string stage_name = 1;
  void clear_stage_name() ;
  const std::string& stage_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_stage_name(Arg_&& arg, Args_... args);
  std::string* mutable_stage_name();
  PROTOBUF_NODISCARD std::string* release_stage_name();
  void set_allocated_stage_name(std::string* value);

  private:
  const std::string& _internal_stage_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_stage_name(
      const std::string& value);
  std::string* _internal_mutable_stage_name();

  public:
  // uint64 block_number = 2;
  void clear_block_number() ;
  ::uint64_t block_number() const;
  void set_block_number(::uint64_t value);

  private:
  ::uint64_t _internal_block_number() const;
  void _internal_set_block_number(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:remote.SyncingReply.StageProgress)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      52, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SyncingReply_StageProgress_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SyncingReply_StageProgress& from_msg);
    ::google::protobuf::internal::ArenaStringPtr stage_name_;
    ::uint64_t block_number_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_remote_2fethbackend_2eproto;
};
// -------------------------------------------------------------------

class SubscribeRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:remote.SubscribeRequest) */ {
 public:
  inline SubscribeRequest() : SubscribeRequest(nullptr) {}
  ~SubscribeRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SubscribeRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline SubscribeRequest(const SubscribeRequest& from) : SubscribeRequest(nullptr, from) {}
  inline SubscribeRequest(SubscribeRequest&& from) noexcept
      : SubscribeRequest(nullptr, std::move(from)) {}
  inline SubscribeRequest& operator=(const SubscribeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SubscribeRequest& operator=(SubscribeRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SubscribeRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SubscribeRequest* internal_default_instance() {
    return reinterpret_cast<const SubscribeRequest*>(
        &_SubscribeRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 18;
  friend void swap(SubscribeRequest& a, SubscribeRequest& b) { a.Swap(&b); }
  inline void Swap(SubscribeRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SubscribeRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SubscribeRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<SubscribeRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SubscribeRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SubscribeRequest& from) { SubscribeRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SubscribeRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "remote.SubscribeRequest"; }

 protected:
  explicit SubscribeRequest(::google::protobuf::Arena* arena);
  SubscribeRequest(::google::protobuf::Arena* arena, const SubscribeRequest& from);
  SubscribeRequest(::google::protobuf::Arena* arena, SubscribeRequest&& from) noexcept
      : SubscribeRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTypeFieldNumber = 1,
  };
  // .remote.Event type = 1;
  void clear_type() ;
  ::remote::Event type() const;
  void set_type(::remote::Event value);

  private:
  ::remote::Event _internal_type() const;
  void _internal_set_type(::remote::Event value);

  public:
  // @@protoc_insertion_point(class_scope:remote.SubscribeRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SubscribeRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SubscribeRequest& from_msg);
    int type_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_remote_2fethbackend_2eproto;
};
// -------------------------------------------------------------------

class SubscribeReply final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:remote.SubscribeReply) */ {
 public:
  inline SubscribeReply() : SubscribeReply(nullptr) {}
  ~SubscribeReply() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SubscribeReply(
      ::google::protobuf::internal::ConstantInitialized);

  inline SubscribeReply(const SubscribeReply& from) : SubscribeReply(nullptr, from) {}
  inline SubscribeReply(SubscribeReply&& from) noexcept
      : SubscribeReply(nullptr, std::move(from)) {}
  inline SubscribeReply& operator=(const SubscribeReply& from) {
    CopyFrom(from);
    return *this;
  }
  inline SubscribeReply& operator=(SubscribeReply&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SubscribeReply& default_instance() {
    return *internal_default_instance();
  }
  static inline const SubscribeReply* internal_default_instance() {
    return reinterpret_cast<const SubscribeReply*>(
        &_SubscribeReply_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 19;
  friend void swap(SubscribeReply& a, SubscribeReply& b) { a.Swap(&b); }
  inline void Swap(SubscribeReply* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SubscribeReply* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SubscribeReply* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<SubscribeReply>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SubscribeReply& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SubscribeReply& from) { SubscribeReply::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SubscribeReply* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "remote.SubscribeReply"; }

 protected:
  explicit SubscribeReply(::google::protobuf::Arena* arena);
  SubscribeReply(::google::protobuf::Arena* arena, const SubscribeReply& from);
  SubscribeReply(::google::protobuf::Arena* arena, SubscribeReply&& from) noexcept
      : SubscribeReply(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDataFieldNumber = 2,
    kTypeFieldNumber = 1,
  };
  // bytes data = 2;
  void clear_data() ;
  const std::string& data() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_data(Arg_&& arg, Args_... args);
  std::string* mutable_data();
  PROTOBUF_NODISCARD std::string* release_data();
  void set_allocated_data(std::string* value);

  private:
  const std::string& _internal_data() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_data(
      const std::string& value);
  std::string* _internal_mutable_data();

  public:
  // .remote.Event type = 1;
  void clear_type() ;
  ::remote::Event type() const;
  void set_type(::remote::Event value);

  private:
  ::remote::Event _internal_type() const;
  void _internal_set_type(::remote::Event value);

  public:
  // @@protoc_insertion_point(class_scope:remote.SubscribeReply)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SubscribeReply_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SubscribeReply& from_msg);
    ::google::protobuf::internal::ArenaStringPtr data_;
    int type_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_remote_2fethbackend_2eproto;
};
// -------------------------------------------------------------------

class ProtocolVersionRequest final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:remote.ProtocolVersionRequest) */ {
 public:
  inline ProtocolVersionRequest() : ProtocolVersionRequest(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ProtocolVersionRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline ProtocolVersionRequest(const ProtocolVersionRequest& from) : ProtocolVersionRequest(nullptr, from) {}
  inline ProtocolVersionRequest(ProtocolVersionRequest&& from) noexcept
      : ProtocolVersionRequest(nullptr, std::move(from)) {}
  inline ProtocolVersionRequest& operator=(const ProtocolVersionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ProtocolVersionRequest& operator=(ProtocolVersionRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ProtocolVersionRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ProtocolVersionRequest* internal_default_instance() {
    return reinterpret_cast<const ProtocolVersionRequest*>(
        &_ProtocolVersionRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(ProtocolVersionRequest& a, ProtocolVersionRequest& b) { a.Swap(&b); }
  inline void Swap(ProtocolVersionRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ProtocolVersionRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ProtocolVersionRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<ProtocolVersionRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const ProtocolVersionRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const ProtocolVersionRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "remote.ProtocolVersionRequest"; }

 protected:
  explicit ProtocolVersionRequest(::google::protobuf::Arena* arena);
  ProtocolVersionRequest(::google::protobuf::Arena* arena, const ProtocolVersionRequest& from);
  ProtocolVersionRequest(::google::protobuf::Arena* arena, ProtocolVersionRequest&& from) noexcept
      : ProtocolVersionRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ZeroFieldsBase::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:remote.ProtocolVersionRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ProtocolVersionRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ProtocolVersionRequest& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_remote_2fethbackend_2eproto;
};
// -------------------------------------------------------------------

class ProtocolVersionReply final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:remote.ProtocolVersionReply) */ {
 public:
  inline ProtocolVersionReply() : ProtocolVersionReply(nullptr) {}
  ~ProtocolVersionReply() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ProtocolVersionReply(
      ::google::protobuf::internal::ConstantInitialized);

  inline ProtocolVersionReply(const ProtocolVersionReply& from) : ProtocolVersionReply(nullptr, from) {}
  inline ProtocolVersionReply(ProtocolVersionReply&& from) noexcept
      : ProtocolVersionReply(nullptr, std::move(from)) {}
  inline ProtocolVersionReply& operator=(const ProtocolVersionReply& from) {
    CopyFrom(from);
    return *this;
  }
  inline ProtocolVersionReply& operator=(ProtocolVersionReply&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ProtocolVersionReply& default_instance() {
    return *internal_default_instance();
  }
  static inline const ProtocolVersionReply* internal_default_instance() {
    return reinterpret_cast<const ProtocolVersionReply*>(
        &_ProtocolVersionReply_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(ProtocolVersionReply& a, ProtocolVersionReply& b) { a.Swap(&b); }
  inline void Swap(ProtocolVersionReply* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ProtocolVersionReply* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ProtocolVersionReply* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<ProtocolVersionReply>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ProtocolVersionReply& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ProtocolVersionReply& from) { ProtocolVersionReply::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ProtocolVersionReply* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "remote.ProtocolVersionReply"; }

 protected:
  explicit ProtocolVersionReply(::google::protobuf::Arena* arena);
  ProtocolVersionReply(::google::protobuf::Arena* arena, const ProtocolVersionReply& from);
  ProtocolVersionReply(::google::protobuf::Arena* arena, ProtocolVersionReply&& from) noexcept
      : ProtocolVersionReply(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIdFieldNumber = 1,
  };
  // uint64 id = 1;
  void clear_id() ;
  ::uint64_t id() const;
  void set_id(::uint64_t value);

  private:
  ::uint64_t _internal_id() const;
  void _internal_set_id(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:remote.ProtocolVersionReply)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ProtocolVersionReply_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ProtocolVersionReply& from_msg);
    ::uint64_t id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_remote_2fethbackend_2eproto;
};
// -------------------------------------------------------------------

class PendingBlockReply final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:remote.PendingBlockReply) */ {
 public:
  inline PendingBlockReply() : PendingBlockReply(nullptr) {}
  ~PendingBlockReply() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PendingBlockReply(
      ::google::protobuf::internal::ConstantInitialized);

  inline PendingBlockReply(const PendingBlockReply& from) : PendingBlockReply(nullptr, from) {}
  inline PendingBlockReply(PendingBlockReply&& from) noexcept
      : PendingBlockReply(nullptr, std::move(from)) {}
  inline PendingBlockReply& operator=(const PendingBlockReply& from) {
    CopyFrom(from);
    return *this;
  }
  inline PendingBlockReply& operator=(PendingBlockReply&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PendingBlockReply& default_instance() {
    return *internal_default_instance();
  }
  static inline const PendingBlockReply* internal_default_instance() {
    return reinterpret_cast<const PendingBlockReply*>(
        &_PendingBlockReply_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 31;
  friend void swap(PendingBlockReply& a, PendingBlockReply& b) { a.Swap(&b); }
  inline void Swap(PendingBlockReply* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PendingBlockReply* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PendingBlockReply* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<PendingBlockReply>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PendingBlockReply& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PendingBlockReply& from) { PendingBlockReply::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(PendingBlockReply* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "remote.PendingBlockReply"; }

 protected:
  explicit PendingBlockReply(::google::protobuf::Arena* arena);
  PendingBlockReply(::google::protobuf::Arena* arena, const PendingBlockReply& from);
  PendingBlockReply(::google::protobuf::Arena* arena, PendingBlockReply&& from) noexcept
      : PendingBlockReply(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kBlockRlpFieldNumber = 1,
  };
  // bytes block_rlp = 1;
  void clear_block_rlp() ;
  const std::string& block_rlp() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_block_rlp(Arg_&& arg, Args_... args);
  std::string* mutable_block_rlp();
  PROTOBUF_NODISCARD std::string* release_block_rlp();
  void set_allocated_block_rlp(std::string* value);

  private:
  const std::string& _internal_block_rlp() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_block_rlp(
      const std::string& value);
  std::string* _internal_mutable_block_rlp();

  public:
  // @@protoc_insertion_point(class_scope:remote.PendingBlockReply)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_PendingBlockReply_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PendingBlockReply& from_msg);
    ::google::protobuf::internal::ArenaStringPtr block_rlp_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_remote_2fethbackend_2eproto;
};
// -------------------------------------------------------------------

class NodesInfoRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:remote.NodesInfoRequest) */ {
 public:
  inline NodesInfoRequest() : NodesInfoRequest(nullptr) {}
  ~NodesInfoRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR NodesInfoRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline NodesInfoRequest(const NodesInfoRequest& from) : NodesInfoRequest(nullptr, from) {}
  inline NodesInfoRequest(NodesInfoRequest&& from) noexcept
      : NodesInfoRequest(nullptr, std::move(from)) {}
  inline NodesInfoRequest& operator=(const NodesInfoRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline NodesInfoRequest& operator=(NodesInfoRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NodesInfoRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const NodesInfoRequest* internal_default_instance() {
    return reinterpret_cast<const NodesInfoRequest*>(
        &_NodesInfoRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 26;
  friend void swap(NodesInfoRequest& a, NodesInfoRequest& b) { a.Swap(&b); }
  inline void Swap(NodesInfoRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NodesInfoRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NodesInfoRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<NodesInfoRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const NodesInfoRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const NodesInfoRequest& from) { NodesInfoRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(NodesInfoRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "remote.NodesInfoRequest"; }

 protected:
  explicit NodesInfoRequest(::google::protobuf::Arena* arena);
  NodesInfoRequest(::google::protobuf::Arena* arena, const NodesInfoRequest& from);
  NodesInfoRequest(::google::protobuf::Arena* arena, NodesInfoRequest&& from) noexcept
      : NodesInfoRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kLimitFieldNumber = 1,
  };
  // uint32 limit = 1;
  void clear_limit() ;
  ::uint32_t limit() const;
  void set_limit(::uint32_t value);

  private:
  ::uint32_t _internal_limit() const;
  void _internal_set_limit(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:remote.NodesInfoRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_NodesInfoRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const NodesInfoRequest& from_msg);
    ::uint32_t limit_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_remote_2fethbackend_2eproto;
};
// -------------------------------------------------------------------

class NetVersionRequest final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:remote.NetVersionRequest) */ {
 public:
  inline NetVersionRequest() : NetVersionRequest(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR NetVersionRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline NetVersionRequest(const NetVersionRequest& from) : NetVersionRequest(nullptr, from) {}
  inline NetVersionRequest(NetVersionRequest&& from) noexcept
      : NetVersionRequest(nullptr, std::move(from)) {}
  inline NetVersionRequest& operator=(const NetVersionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline NetVersionRequest& operator=(NetVersionRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NetVersionRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const NetVersionRequest* internal_default_instance() {
    return reinterpret_cast<const NetVersionRequest*>(
        &_NetVersionRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(NetVersionRequest& a, NetVersionRequest& b) { a.Swap(&b); }
  inline void Swap(NetVersionRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NetVersionRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NetVersionRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<NetVersionRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const NetVersionRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const NetVersionRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "remote.NetVersionRequest"; }

 protected:
  explicit NetVersionRequest(::google::protobuf::Arena* arena);
  NetVersionRequest(::google::protobuf::Arena* arena, const NetVersionRequest& from);
  NetVersionRequest(::google::protobuf::Arena* arena, NetVersionRequest&& from) noexcept
      : NetVersionRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ZeroFieldsBase::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:remote.NetVersionRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_NetVersionRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const NetVersionRequest& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_remote_2fethbackend_2eproto;
};
// -------------------------------------------------------------------

class NetVersionReply final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:remote.NetVersionReply) */ {
 public:
  inline NetVersionReply() : NetVersionReply(nullptr) {}
  ~NetVersionReply() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR NetVersionReply(
      ::google::protobuf::internal::ConstantInitialized);

  inline NetVersionReply(const NetVersionReply& from) : NetVersionReply(nullptr, from) {}
  inline NetVersionReply(NetVersionReply&& from) noexcept
      : NetVersionReply(nullptr, std::move(from)) {}
  inline NetVersionReply& operator=(const NetVersionReply& from) {
    CopyFrom(from);
    return *this;
  }
  inline NetVersionReply& operator=(NetVersionReply&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NetVersionReply& default_instance() {
    return *internal_default_instance();
  }
  static inline const NetVersionReply* internal_default_instance() {
    return reinterpret_cast<const NetVersionReply*>(
        &_NetVersionReply_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(NetVersionReply& a, NetVersionReply& b) { a.Swap(&b); }
  inline void Swap(NetVersionReply* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NetVersionReply* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NetVersionReply* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<NetVersionReply>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const NetVersionReply& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const NetVersionReply& from) { NetVersionReply::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(NetVersionReply* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "remote.NetVersionReply"; }

 protected:
  explicit NetVersionReply(::google::protobuf::Arena* arena);
  NetVersionReply(::google::protobuf::Arena* arena, const NetVersionReply& from);
  NetVersionReply(::google::protobuf::Arena* arena, NetVersionReply&& from) noexcept
      : NetVersionReply(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIdFieldNumber = 1,
  };
  // uint64 id = 1;
  void clear_id() ;
  ::uint64_t id() const;
  void set_id(::uint64_t value);

  private:
  ::uint64_t _internal_id() const;
  void _internal_set_id(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:remote.NetVersionReply)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_NetVersionReply_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const NetVersionReply& from_msg);
    ::uint64_t id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_remote_2fethbackend_2eproto;
};
// -------------------------------------------------------------------

class NetPeerCountRequest final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:remote.NetPeerCountRequest) */ {
 public:
  inline NetPeerCountRequest() : NetPeerCountRequest(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR NetPeerCountRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline NetPeerCountRequest(const NetPeerCountRequest& from) : NetPeerCountRequest(nullptr, from) {}
  inline NetPeerCountRequest(NetPeerCountRequest&& from) noexcept
      : NetPeerCountRequest(nullptr, std::move(from)) {}
  inline NetPeerCountRequest& operator=(const NetPeerCountRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline NetPeerCountRequest& operator=(NetPeerCountRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NetPeerCountRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const NetPeerCountRequest* internal_default_instance() {
    return reinterpret_cast<const NetPeerCountRequest*>(
        &_NetPeerCountRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(NetPeerCountRequest& a, NetPeerCountRequest& b) { a.Swap(&b); }
  inline void Swap(NetPeerCountRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NetPeerCountRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NetPeerCountRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<NetPeerCountRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const NetPeerCountRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const NetPeerCountRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "remote.NetPeerCountRequest"; }

 protected:
  explicit NetPeerCountRequest(::google::protobuf::Arena* arena);
  NetPeerCountRequest(::google::protobuf::Arena* arena, const NetPeerCountRequest& from);
  NetPeerCountRequest(::google::protobuf::Arena* arena, NetPeerCountRequest&& from) noexcept
      : NetPeerCountRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ZeroFieldsBase::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:remote.NetPeerCountRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_NetPeerCountRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const NetPeerCountRequest& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_remote_2fethbackend_2eproto;
};
// -------------------------------------------------------------------

class NetPeerCountReply final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:remote.NetPeerCountReply) */ {
 public:
  inline NetPeerCountReply() : NetPeerCountReply(nullptr) {}
  ~NetPeerCountReply() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR NetPeerCountReply(
      ::google::protobuf::internal::ConstantInitialized);

  inline NetPeerCountReply(const NetPeerCountReply& from) : NetPeerCountReply(nullptr, from) {}
  inline NetPeerCountReply(NetPeerCountReply&& from) noexcept
      : NetPeerCountReply(nullptr, std::move(from)) {}
  inline NetPeerCountReply& operator=(const NetPeerCountReply& from) {
    CopyFrom(from);
    return *this;
  }
  inline NetPeerCountReply& operator=(NetPeerCountReply&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NetPeerCountReply& default_instance() {
    return *internal_default_instance();
  }
  static inline const NetPeerCountReply* internal_default_instance() {
    return reinterpret_cast<const NetPeerCountReply*>(
        &_NetPeerCountReply_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(NetPeerCountReply& a, NetPeerCountReply& b) { a.Swap(&b); }
  inline void Swap(NetPeerCountReply* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NetPeerCountReply* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NetPeerCountReply* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<NetPeerCountReply>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const NetPeerCountReply& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const NetPeerCountReply& from) { NetPeerCountReply::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(NetPeerCountReply* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "remote.NetPeerCountReply"; }

 protected:
  explicit NetPeerCountReply(::google::protobuf::Arena* arena);
  NetPeerCountReply(::google::protobuf::Arena* arena, const NetPeerCountReply& from);
  NetPeerCountReply(::google::protobuf::Arena* arena, NetPeerCountReply&& from) noexcept
      : NetPeerCountReply(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCountFieldNumber = 1,
  };
  // uint64 count = 1;
  void clear_count() ;
  ::uint64_t count() const;
  void set_count(::uint64_t value);

  private:
  ::uint64_t _internal_count() const;
  void _internal_set_count(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:remote.NetPeerCountReply)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_NetPeerCountReply_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const NetPeerCountReply& from_msg);
    ::uint64_t count_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_remote_2fethbackend_2eproto;
};
// -------------------------------------------------------------------

class HeaderNumberReply final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:remote.HeaderNumberReply) */ {
 public:
  inline HeaderNumberReply() : HeaderNumberReply(nullptr) {}
  ~HeaderNumberReply() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR HeaderNumberReply(
      ::google::protobuf::internal::ConstantInitialized);

  inline HeaderNumberReply(const HeaderNumberReply& from) : HeaderNumberReply(nullptr, from) {}
  inline HeaderNumberReply(HeaderNumberReply&& from) noexcept
      : HeaderNumberReply(nullptr, std::move(from)) {}
  inline HeaderNumberReply& operator=(const HeaderNumberReply& from) {
    CopyFrom(from);
    return *this;
  }
  inline HeaderNumberReply& operator=(HeaderNumberReply&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const HeaderNumberReply& default_instance() {
    return *internal_default_instance();
  }
  static inline const HeaderNumberReply* internal_default_instance() {
    return reinterpret_cast<const HeaderNumberReply*>(
        &_HeaderNumberReply_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 15;
  friend void swap(HeaderNumberReply& a, HeaderNumberReply& b) { a.Swap(&b); }
  inline void Swap(HeaderNumberReply* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(HeaderNumberReply* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  HeaderNumberReply* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<HeaderNumberReply>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const HeaderNumberReply& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const HeaderNumberReply& from) { HeaderNumberReply::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(HeaderNumberReply* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "remote.HeaderNumberReply"; }

 protected:
  explicit HeaderNumberReply(::google::protobuf::Arena* arena);
  HeaderNumberReply(::google::protobuf::Arena* arena, const HeaderNumberReply& from);
  HeaderNumberReply(::google::protobuf::Arena* arena, HeaderNumberReply&& from) noexcept
      : HeaderNumberReply(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNumberFieldNumber = 1,
  };
  // optional uint64 number = 1;
  bool has_number() const;
  void clear_number() ;
  ::uint64_t number() const;
  void set_number(::uint64_t value);

  private:
  ::uint64_t _internal_number() const;
  void _internal_set_number(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:remote.HeaderNumberReply)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_HeaderNumberReply_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const HeaderNumberReply& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint64_t number_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_remote_2fethbackend_2eproto;
};
// -------------------------------------------------------------------

class EtherbaseRequest final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:remote.EtherbaseRequest) */ {
 public:
  inline EtherbaseRequest() : EtherbaseRequest(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR EtherbaseRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline EtherbaseRequest(const EtherbaseRequest& from) : EtherbaseRequest(nullptr, from) {}
  inline EtherbaseRequest(EtherbaseRequest&& from) noexcept
      : EtherbaseRequest(nullptr, std::move(from)) {}
  inline EtherbaseRequest& operator=(const EtherbaseRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline EtherbaseRequest& operator=(EtherbaseRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EtherbaseRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const EtherbaseRequest* internal_default_instance() {
    return reinterpret_cast<const EtherbaseRequest*>(
        &_EtherbaseRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(EtherbaseRequest& a, EtherbaseRequest& b) { a.Swap(&b); }
  inline void Swap(EtherbaseRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EtherbaseRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EtherbaseRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<EtherbaseRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const EtherbaseRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const EtherbaseRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "remote.EtherbaseRequest"; }

 protected:
  explicit EtherbaseRequest(::google::protobuf::Arena* arena);
  EtherbaseRequest(::google::protobuf::Arena* arena, const EtherbaseRequest& from);
  EtherbaseRequest(::google::protobuf::Arena* arena, EtherbaseRequest&& from) noexcept
      : EtherbaseRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ZeroFieldsBase::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:remote.EtherbaseRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_EtherbaseRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const EtherbaseRequest& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_remote_2fethbackend_2eproto;
};
// -------------------------------------------------------------------

class EngineGetPayloadBodiesByRangeV1Request final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:remote.EngineGetPayloadBodiesByRangeV1Request) */ {
 public:
  inline EngineGetPayloadBodiesByRangeV1Request() : EngineGetPayloadBodiesByRangeV1Request(nullptr) {}
  ~EngineGetPayloadBodiesByRangeV1Request() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR EngineGetPayloadBodiesByRangeV1Request(
      ::google::protobuf::internal::ConstantInitialized);

  inline EngineGetPayloadBodiesByRangeV1Request(const EngineGetPayloadBodiesByRangeV1Request& from) : EngineGetPayloadBodiesByRangeV1Request(nullptr, from) {}
  inline EngineGetPayloadBodiesByRangeV1Request(EngineGetPayloadBodiesByRangeV1Request&& from) noexcept
      : EngineGetPayloadBodiesByRangeV1Request(nullptr, std::move(from)) {}
  inline EngineGetPayloadBodiesByRangeV1Request& operator=(const EngineGetPayloadBodiesByRangeV1Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline EngineGetPayloadBodiesByRangeV1Request& operator=(EngineGetPayloadBodiesByRangeV1Request&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EngineGetPayloadBodiesByRangeV1Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const EngineGetPayloadBodiesByRangeV1Request* internal_default_instance() {
    return reinterpret_cast<const EngineGetPayloadBodiesByRangeV1Request*>(
        &_EngineGetPayloadBodiesByRangeV1Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 33;
  friend void swap(EngineGetPayloadBodiesByRangeV1Request& a, EngineGetPayloadBodiesByRangeV1Request& b) { a.Swap(&b); }
  inline void Swap(EngineGetPayloadBodiesByRangeV1Request* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EngineGetPayloadBodiesByRangeV1Request* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EngineGetPayloadBodiesByRangeV1Request* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<EngineGetPayloadBodiesByRangeV1Request>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const EngineGetPayloadBodiesByRangeV1Request& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const EngineGetPayloadBodiesByRangeV1Request& from) { EngineGetPayloadBodiesByRangeV1Request::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(EngineGetPayloadBodiesByRangeV1Request* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "remote.EngineGetPayloadBodiesByRangeV1Request"; }

 protected:
  explicit EngineGetPayloadBodiesByRangeV1Request(::google::protobuf::Arena* arena);
  EngineGetPayloadBodiesByRangeV1Request(::google::protobuf::Arena* arena, const EngineGetPayloadBodiesByRangeV1Request& from);
  EngineGetPayloadBodiesByRangeV1Request(::google::protobuf::Arena* arena, EngineGetPayloadBodiesByRangeV1Request&& from) noexcept
      : EngineGetPayloadBodiesByRangeV1Request(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kStartFieldNumber = 1,
    kCountFieldNumber = 2,
  };
  // uint64 start = 1;
  void clear_start() ;
  ::uint64_t start() const;
  void set_start(::uint64_t value);

  private:
  ::uint64_t _internal_start() const;
  void _internal_set_start(::uint64_t value);

  public:
  // uint64 count = 2;
  void clear_count() ;
  ::uint64_t count() const;
  void set_count(::uint64_t value);

  private:
  ::uint64_t _internal_count() const;
  void _internal_set_count(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:remote.EngineGetPayloadBodiesByRangeV1Request)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_EngineGetPayloadBodiesByRangeV1Request_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const EngineGetPayloadBodiesByRangeV1Request& from_msg);
    ::uint64_t start_;
    ::uint64_t count_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_remote_2fethbackend_2eproto;
};
// -------------------------------------------------------------------

class ClientVersionRequest final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:remote.ClientVersionRequest) */ {
 public:
  inline ClientVersionRequest() : ClientVersionRequest(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ClientVersionRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline ClientVersionRequest(const ClientVersionRequest& from) : ClientVersionRequest(nullptr, from) {}
  inline ClientVersionRequest(ClientVersionRequest&& from) noexcept
      : ClientVersionRequest(nullptr, std::move(from)) {}
  inline ClientVersionRequest& operator=(const ClientVersionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ClientVersionRequest& operator=(ClientVersionRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ClientVersionRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ClientVersionRequest* internal_default_instance() {
    return reinterpret_cast<const ClientVersionRequest*>(
        &_ClientVersionRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 10;
  friend void swap(ClientVersionRequest& a, ClientVersionRequest& b) { a.Swap(&b); }
  inline void Swap(ClientVersionRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ClientVersionRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ClientVersionRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<ClientVersionRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const ClientVersionRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const ClientVersionRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "remote.ClientVersionRequest"; }

 protected:
  explicit ClientVersionRequest(::google::protobuf::Arena* arena);
  ClientVersionRequest(::google::protobuf::Arena* arena, const ClientVersionRequest& from);
  ClientVersionRequest(::google::protobuf::Arena* arena, ClientVersionRequest&& from) noexcept
      : ClientVersionRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ZeroFieldsBase::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:remote.ClientVersionRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ClientVersionRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ClientVersionRequest& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_remote_2fethbackend_2eproto;
};
// -------------------------------------------------------------------

class ClientVersionReply final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:remote.ClientVersionReply) */ {
 public:
  inline ClientVersionReply() : ClientVersionReply(nullptr) {}
  ~ClientVersionReply() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ClientVersionReply(
      ::google::protobuf::internal::ConstantInitialized);

  inline ClientVersionReply(const ClientVersionReply& from) : ClientVersionReply(nullptr, from) {}
  inline ClientVersionReply(ClientVersionReply&& from) noexcept
      : ClientVersionReply(nullptr, std::move(from)) {}
  inline ClientVersionReply& operator=(const ClientVersionReply& from) {
    CopyFrom(from);
    return *this;
  }
  inline ClientVersionReply& operator=(ClientVersionReply&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ClientVersionReply& default_instance() {
    return *internal_default_instance();
  }
  static inline const ClientVersionReply* internal_default_instance() {
    return reinterpret_cast<const ClientVersionReply*>(
        &_ClientVersionReply_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 11;
  friend void swap(ClientVersionReply& a, ClientVersionReply& b) { a.Swap(&b); }
  inline void Swap(ClientVersionReply* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ClientVersionReply* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ClientVersionReply* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<ClientVersionReply>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ClientVersionReply& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ClientVersionReply& from) { ClientVersionReply::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ClientVersionReply* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "remote.ClientVersionReply"; }

 protected:
  explicit ClientVersionReply(::google::protobuf::Arena* arena);
  ClientVersionReply(::google::protobuf::Arena* arena, const ClientVersionReply& from);
  ClientVersionReply(::google::protobuf::Arena* arena, ClientVersionReply&& from) noexcept
      : ClientVersionReply(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNodeNameFieldNumber = 1,
  };
  // string node_name = 1;
  void clear_node_name() ;
  const std::string& node_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_node_name(Arg_&& arg, Args_... args);
  std::string* mutable_node_name();
  PROTOBUF_NODISCARD std::string* release_node_name();
  void set_allocated_node_name(std::string* value);

  private:
  const std::string& _internal_node_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_node_name(
      const std::string& value);
  std::string* _internal_mutable_node_name();

  public:
  // @@protoc_insertion_point(class_scope:remote.ClientVersionReply)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      43, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ClientVersionReply_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ClientVersionReply& from_msg);
    ::google::protobuf::internal::ArenaStringPtr node_name_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_remote_2fethbackend_2eproto;
};
// -------------------------------------------------------------------

class CanonicalHashRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:remote.CanonicalHashRequest) */ {
 public:
  inline CanonicalHashRequest() : CanonicalHashRequest(nullptr) {}
  ~CanonicalHashRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CanonicalHashRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline CanonicalHashRequest(const CanonicalHashRequest& from) : CanonicalHashRequest(nullptr, from) {}
  inline CanonicalHashRequest(CanonicalHashRequest&& from) noexcept
      : CanonicalHashRequest(nullptr, std::move(from)) {}
  inline CanonicalHashRequest& operator=(const CanonicalHashRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CanonicalHashRequest& operator=(CanonicalHashRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CanonicalHashRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const CanonicalHashRequest* internal_default_instance() {
    return reinterpret_cast<const CanonicalHashRequest*>(
        &_CanonicalHashRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 12;
  friend void swap(CanonicalHashRequest& a, CanonicalHashRequest& b) { a.Swap(&b); }
  inline void Swap(CanonicalHashRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CanonicalHashRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CanonicalHashRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<CanonicalHashRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CanonicalHashRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CanonicalHashRequest& from) { CanonicalHashRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CanonicalHashRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "remote.CanonicalHashRequest"; }

 protected:
  explicit CanonicalHashRequest(::google::protobuf::Arena* arena);
  CanonicalHashRequest(::google::protobuf::Arena* arena, const CanonicalHashRequest& from);
  CanonicalHashRequest(::google::protobuf::Arena* arena, CanonicalHashRequest&& from) noexcept
      : CanonicalHashRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kBlockNumberFieldNumber = 1,
  };
  // uint64 block_number = 1;
  void clear_block_number() ;
  ::uint64_t block_number() const;
  void set_block_number(::uint64_t value);

  private:
  ::uint64_t _internal_block_number() const;
  void _internal_set_block_number(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:remote.CanonicalHashRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_CanonicalHashRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CanonicalHashRequest& from_msg);
    ::uint64_t block_number_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_remote_2fethbackend_2eproto;
};
// -------------------------------------------------------------------

class CanonicalBodyForStorageRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:remote.CanonicalBodyForStorageRequest) */ {
 public:
  inline CanonicalBodyForStorageRequest() : CanonicalBodyForStorageRequest(nullptr) {}
  ~CanonicalBodyForStorageRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CanonicalBodyForStorageRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline CanonicalBodyForStorageRequest(const CanonicalBodyForStorageRequest& from) : CanonicalBodyForStorageRequest(nullptr, from) {}
  inline CanonicalBodyForStorageRequest(CanonicalBodyForStorageRequest&& from) noexcept
      : CanonicalBodyForStorageRequest(nullptr, std::move(from)) {}
  inline CanonicalBodyForStorageRequest& operator=(const CanonicalBodyForStorageRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CanonicalBodyForStorageRequest& operator=(CanonicalBodyForStorageRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CanonicalBodyForStorageRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const CanonicalBodyForStorageRequest* internal_default_instance() {
    return reinterpret_cast<const CanonicalBodyForStorageRequest*>(
        &_CanonicalBodyForStorageRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 16;
  friend void swap(CanonicalBodyForStorageRequest& a, CanonicalBodyForStorageRequest& b) { a.Swap(&b); }
  inline void Swap(CanonicalBodyForStorageRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CanonicalBodyForStorageRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CanonicalBodyForStorageRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<CanonicalBodyForStorageRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CanonicalBodyForStorageRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CanonicalBodyForStorageRequest& from) { CanonicalBodyForStorageRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CanonicalBodyForStorageRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "remote.CanonicalBodyForStorageRequest"; }

 protected:
  explicit CanonicalBodyForStorageRequest(::google::protobuf::Arena* arena);
  CanonicalBodyForStorageRequest(::google::protobuf::Arena* arena, const CanonicalBodyForStorageRequest& from);
  CanonicalBodyForStorageRequest(::google::protobuf::Arena* arena, CanonicalBodyForStorageRequest&& from) noexcept
      : CanonicalBodyForStorageRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kBlockNumberFieldNumber = 1,
  };
  // uint64 blockNumber = 1;
  void clear_blocknumber() ;
  ::uint64_t blocknumber() const;
  void set_blocknumber(::uint64_t value);

  private:
  ::uint64_t _internal_blocknumber() const;
  void _internal_set_blocknumber(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:remote.CanonicalBodyForStorageRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_CanonicalBodyForStorageRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CanonicalBodyForStorageRequest& from_msg);
    ::uint64_t blocknumber_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_remote_2fethbackend_2eproto;
};
// -------------------------------------------------------------------

class CanonicalBodyForStorageReply final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:remote.CanonicalBodyForStorageReply) */ {
 public:
  inline CanonicalBodyForStorageReply() : CanonicalBodyForStorageReply(nullptr) {}
  ~CanonicalBodyForStorageReply() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CanonicalBodyForStorageReply(
      ::google::protobuf::internal::ConstantInitialized);

  inline CanonicalBodyForStorageReply(const CanonicalBodyForStorageReply& from) : CanonicalBodyForStorageReply(nullptr, from) {}
  inline CanonicalBodyForStorageReply(CanonicalBodyForStorageReply&& from) noexcept
      : CanonicalBodyForStorageReply(nullptr, std::move(from)) {}
  inline CanonicalBodyForStorageReply& operator=(const CanonicalBodyForStorageReply& from) {
    CopyFrom(from);
    return *this;
  }
  inline CanonicalBodyForStorageReply& operator=(CanonicalBodyForStorageReply&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CanonicalBodyForStorageReply& default_instance() {
    return *internal_default_instance();
  }
  static inline const CanonicalBodyForStorageReply* internal_default_instance() {
    return reinterpret_cast<const CanonicalBodyForStorageReply*>(
        &_CanonicalBodyForStorageReply_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 17;
  friend void swap(CanonicalBodyForStorageReply& a, CanonicalBodyForStorageReply& b) { a.Swap(&b); }
  inline void Swap(CanonicalBodyForStorageReply* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CanonicalBodyForStorageReply* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CanonicalBodyForStorageReply* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<CanonicalBodyForStorageReply>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CanonicalBodyForStorageReply& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CanonicalBodyForStorageReply& from) { CanonicalBodyForStorageReply::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CanonicalBodyForStorageReply* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "remote.CanonicalBodyForStorageReply"; }

 protected:
  explicit CanonicalBodyForStorageReply(::google::protobuf::Arena* arena);
  CanonicalBodyForStorageReply(::google::protobuf::Arena* arena, const CanonicalBodyForStorageReply& from);
  CanonicalBodyForStorageReply(::google::protobuf::Arena* arena, CanonicalBodyForStorageReply&& from) noexcept
      : CanonicalBodyForStorageReply(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kBodyFieldNumber = 1,
  };
  // bytes body = 1;
  void clear_body() ;
  const std::string& body() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_body(Arg_&& arg, Args_... args);
  std::string* mutable_body();
  PROTOBUF_NODISCARD std::string* release_body();
  void set_allocated_body(std::string* value);

  private:
  const std::string& _internal_body() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_body(
      const std::string& value);
  std::string* _internal_mutable_body();

  public:
  // @@protoc_insertion_point(class_scope:remote.CanonicalBodyForStorageReply)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_CanonicalBodyForStorageReply_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CanonicalBodyForStorageReply& from_msg);
    ::google::protobuf::internal::ArenaStringPtr body_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_remote_2fethbackend_2eproto;
};
// -------------------------------------------------------------------

class BlockReply final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:remote.BlockReply) */ {
 public:
  inline BlockReply() : BlockReply(nullptr) {}
  ~BlockReply() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR BlockReply(
      ::google::protobuf::internal::ConstantInitialized);

  inline BlockReply(const BlockReply& from) : BlockReply(nullptr, from) {}
  inline BlockReply(BlockReply&& from) noexcept
      : BlockReply(nullptr, std::move(from)) {}
  inline BlockReply& operator=(const BlockReply& from) {
    CopyFrom(from);
    return *this;
  }
  inline BlockReply& operator=(BlockReply&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BlockReply& default_instance() {
    return *internal_default_instance();
  }
  static inline const BlockReply* internal_default_instance() {
    return reinterpret_cast<const BlockReply*>(
        &_BlockReply_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 23;
  friend void swap(BlockReply& a, BlockReply& b) { a.Swap(&b); }
  inline void Swap(BlockReply* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BlockReply* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BlockReply* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<BlockReply>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BlockReply& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const BlockReply& from) { BlockReply::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(BlockReply* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "remote.BlockReply"; }

 protected:
  explicit BlockReply(::google::protobuf::Arena* arena);
  BlockReply(::google::protobuf::Arena* arena, const BlockReply& from);
  BlockReply(::google::protobuf::Arena* arena, BlockReply&& from) noexcept
      : BlockReply(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kBlockRlpFieldNumber = 1,
    kSendersFieldNumber = 2,
  };
  // bytes block_rlp = 1;
  void clear_block_rlp() ;
  const std::string& block_rlp() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_block_rlp(Arg_&& arg, Args_... args);
  std::string* mutable_block_rlp();
  PROTOBUF_NODISCARD std::string* release_block_rlp();
  void set_allocated_block_rlp(std::string* value);

  private:
  const std::string& _internal_block_rlp() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_block_rlp(
      const std::string& value);
  std::string* _internal_mutable_block_rlp();

  public:
  // bytes senders = 2;
  void clear_senders() ;
  const std::string& senders() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_senders(Arg_&& arg, Args_... args);
  std::string* mutable_senders();
  PROTOBUF_NODISCARD std::string* release_senders();
  void set_allocated_senders(std::string* value);

  private:
  const std::string& _internal_senders() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_senders(
      const std::string& value);
  std::string* _internal_mutable_senders();

  public:
  // @@protoc_insertion_point(class_scope:remote.BlockReply)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_BlockReply_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const BlockReply& from_msg);
    ::google::protobuf::internal::ArenaStringPtr block_rlp_;
    ::google::protobuf::internal::ArenaStringPtr senders_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_remote_2fethbackend_2eproto;
};
// -------------------------------------------------------------------

class AddPeerRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:remote.AddPeerRequest) */ {
 public:
  inline AddPeerRequest() : AddPeerRequest(nullptr) {}
  ~AddPeerRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AddPeerRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline AddPeerRequest(const AddPeerRequest& from) : AddPeerRequest(nullptr, from) {}
  inline AddPeerRequest(AddPeerRequest&& from) noexcept
      : AddPeerRequest(nullptr, std::move(from)) {}
  inline AddPeerRequest& operator=(const AddPeerRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline AddPeerRequest& operator=(AddPeerRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AddPeerRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const AddPeerRequest* internal_default_instance() {
    return reinterpret_cast<const AddPeerRequest*>(
        &_AddPeerRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 27;
  friend void swap(AddPeerRequest& a, AddPeerRequest& b) { a.Swap(&b); }
  inline void Swap(AddPeerRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AddPeerRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AddPeerRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<AddPeerRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AddPeerRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AddPeerRequest& from) { AddPeerRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(AddPeerRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "remote.AddPeerRequest"; }

 protected:
  explicit AddPeerRequest(::google::protobuf::Arena* arena);
  AddPeerRequest(::google::protobuf::Arena* arena, const AddPeerRequest& from);
  AddPeerRequest(::google::protobuf::Arena* arena, AddPeerRequest&& from) noexcept
      : AddPeerRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kUrlFieldNumber = 1,
  };
  // string url = 1;
  void clear_url() ;
  const std::string& url() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_url(Arg_&& arg, Args_... args);
  std::string* mutable_url();
  PROTOBUF_NODISCARD std::string* release_url();
  void set_allocated_url(std::string* value);

  private:
  const std::string& _internal_url() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_url(
      const std::string& value);
  std::string* _internal_mutable_url();

  public:
  // @@protoc_insertion_point(class_scope:remote.AddPeerRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      33, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_AddPeerRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const AddPeerRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr url_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_remote_2fethbackend_2eproto;
};
// -------------------------------------------------------------------

class AddPeerReply final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:remote.AddPeerReply) */ {
 public:
  inline AddPeerReply() : AddPeerReply(nullptr) {}
  ~AddPeerReply() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AddPeerReply(
      ::google::protobuf::internal::ConstantInitialized);

  inline AddPeerReply(const AddPeerReply& from) : AddPeerReply(nullptr, from) {}
  inline AddPeerReply(AddPeerReply&& from) noexcept
      : AddPeerReply(nullptr, std::move(from)) {}
  inline AddPeerReply& operator=(const AddPeerReply& from) {
    CopyFrom(from);
    return *this;
  }
  inline AddPeerReply& operator=(AddPeerReply&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AddPeerReply& default_instance() {
    return *internal_default_instance();
  }
  static inline const AddPeerReply* internal_default_instance() {
    return reinterpret_cast<const AddPeerReply*>(
        &_AddPeerReply_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 30;
  friend void swap(AddPeerReply& a, AddPeerReply& b) { a.Swap(&b); }
  inline void Swap(AddPeerReply* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AddPeerReply* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AddPeerReply* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<AddPeerReply>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AddPeerReply& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AddPeerReply& from) { AddPeerReply::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(AddPeerReply* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "remote.AddPeerReply"; }

 protected:
  explicit AddPeerReply(::google::protobuf::Arena* arena);
  AddPeerReply(::google::protobuf::Arena* arena, const AddPeerReply& from);
  AddPeerReply(::google::protobuf::Arena* arena, AddPeerReply&& from) noexcept
      : AddPeerReply(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSuccessFieldNumber = 1,
  };
  // bool success = 1;
  void clear_success() ;
  bool success() const;
  void set_success(bool value);

  private:
  bool _internal_success() const;
  void _internal_set_success(bool value);

  public:
  // @@protoc_insertion_point(class_scope:remote.AddPeerReply)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_AddPeerReply_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const AddPeerReply& from_msg);
    bool success_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_remote_2fethbackend_2eproto;
};
// -------------------------------------------------------------------

class SyncingReply final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:remote.SyncingReply) */ {
 public:
  inline SyncingReply() : SyncingReply(nullptr) {}
  ~SyncingReply() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SyncingReply(
      ::google::protobuf::internal::ConstantInitialized);

  inline SyncingReply(const SyncingReply& from) : SyncingReply(nullptr, from) {}
  inline SyncingReply(SyncingReply&& from) noexcept
      : SyncingReply(nullptr, std::move(from)) {}
  inline SyncingReply& operator=(const SyncingReply& from) {
    CopyFrom(from);
    return *this;
  }
  inline SyncingReply& operator=(SyncingReply&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SyncingReply& default_instance() {
    return *internal_default_instance();
  }
  static inline const SyncingReply* internal_default_instance() {
    return reinterpret_cast<const SyncingReply*>(
        &_SyncingReply_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(SyncingReply& a, SyncingReply& b) { a.Swap(&b); }
  inline void Swap(SyncingReply* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SyncingReply* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SyncingReply* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<SyncingReply>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SyncingReply& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SyncingReply& from) { SyncingReply::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SyncingReply* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "remote.SyncingReply"; }

 protected:
  explicit SyncingReply(::google::protobuf::Arena* arena);
  SyncingReply(::google::protobuf::Arena* arena, const SyncingReply& from);
  SyncingReply(::google::protobuf::Arena* arena, SyncingReply&& from) noexcept
      : SyncingReply(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using StageProgress = SyncingReply_StageProgress;

  // accessors -------------------------------------------------------
  enum : int {
    kStagesFieldNumber = 5,
    kLastNewBlockSeenFieldNumber = 1,
    kFrozenBlocksFieldNumber = 2,
    kCurrentBlockFieldNumber = 3,
    kSyncingFieldNumber = 4,
  };
  // repeated .remote.SyncingReply.StageProgress stages = 5;
  int stages_size() const;
  private:
  int _internal_stages_size() const;

  public:
  void clear_stages() ;
  ::remote::SyncingReply_StageProgress* mutable_stages(int index);
  ::google::protobuf::RepeatedPtrField<::remote::SyncingReply_StageProgress>* mutable_stages();

  private:
  const ::google::protobuf::RepeatedPtrField<::remote::SyncingReply_StageProgress>& _internal_stages() const;
  ::google::protobuf::RepeatedPtrField<::remote::SyncingReply_StageProgress>* _internal_mutable_stages();
  public:
  const ::remote::SyncingReply_StageProgress& stages(int index) const;
  ::remote::SyncingReply_StageProgress* add_stages();
  const ::google::protobuf::RepeatedPtrField<::remote::SyncingReply_StageProgress>& stages() const;
  // uint64 last_new_block_seen = 1;
  void clear_last_new_block_seen() ;
  ::uint64_t last_new_block_seen() const;
  void set_last_new_block_seen(::uint64_t value);

  private:
  ::uint64_t _internal_last_new_block_seen() const;
  void _internal_set_last_new_block_seen(::uint64_t value);

  public:
  // uint64 frozen_blocks = 2;
  void clear_frozen_blocks() ;
  ::uint64_t frozen_blocks() const;
  void set_frozen_blocks(::uint64_t value);

  private:
  ::uint64_t _internal_frozen_blocks() const;
  void _internal_set_frozen_blocks(::uint64_t value);

  public:
  // uint64 current_block = 3;
  void clear_current_block() ;
  ::uint64_t current_block() const;
  void set_current_block(::uint64_t value);

  private:
  ::uint64_t _internal_current_block() const;
  void _internal_set_current_block(::uint64_t value);

  public:
  // bool syncing = 4;
  void clear_syncing() ;
  bool syncing() const;
  void set_syncing(bool value);

  private:
  bool _internal_syncing() const;
  void _internal_set_syncing(bool value);

  public:
  // @@protoc_insertion_point(class_scope:remote.SyncingReply)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SyncingReply_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SyncingReply& from_msg);
    ::google::protobuf::RepeatedPtrField< ::remote::SyncingReply_StageProgress > stages_;
    ::uint64_t last_new_block_seen_;
    ::uint64_t frozen_blocks_;
    ::uint64_t current_block_;
    bool syncing_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_remote_2fethbackend_2eproto;
};
// -------------------------------------------------------------------

class PeersReply final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:remote.PeersReply) */ {
 public:
  inline PeersReply() : PeersReply(nullptr) {}
  ~PeersReply() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PeersReply(
      ::google::protobuf::internal::ConstantInitialized);

  inline PeersReply(const PeersReply& from) : PeersReply(nullptr, from) {}
  inline PeersReply(PeersReply&& from) noexcept
      : PeersReply(nullptr, std::move(from)) {}
  inline PeersReply& operator=(const PeersReply& from) {
    CopyFrom(from);
    return *this;
  }
  inline PeersReply& operator=(PeersReply&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PeersReply& default_instance() {
    return *internal_default_instance();
  }
  static inline const PeersReply* internal_default_instance() {
    return reinterpret_cast<const PeersReply*>(
        &_PeersReply_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 29;
  friend void swap(PeersReply& a, PeersReply& b) { a.Swap(&b); }
  inline void Swap(PeersReply* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PeersReply* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PeersReply* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<PeersReply>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PeersReply& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PeersReply& from) { PeersReply::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(PeersReply* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "remote.PeersReply"; }

 protected:
  explicit PeersReply(::google::protobuf::Arena* arena);
  PeersReply(::google::protobuf::Arena* arena, const PeersReply& from);
  PeersReply(::google::protobuf::Arena* arena, PeersReply&& from) noexcept
      : PeersReply(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPeersFieldNumber = 1,
  };
  // repeated .types.PeerInfo peers = 1;
  int peers_size() const;
  private:
  int _internal_peers_size() const;

  public:
  void clear_peers() ;
  ::types::PeerInfo* mutable_peers(int index);
  ::google::protobuf::RepeatedPtrField<::types::PeerInfo>* mutable_peers();

  private:
  const ::google::protobuf::RepeatedPtrField<::types::PeerInfo>& _internal_peers() const;
  ::google::protobuf::RepeatedPtrField<::types::PeerInfo>* _internal_mutable_peers();
  public:
  const ::types::PeerInfo& peers(int index) const;
  ::types::PeerInfo* add_peers();
  const ::google::protobuf::RepeatedPtrField<::types::PeerInfo>& peers() const;
  // @@protoc_insertion_point(class_scope:remote.PeersReply)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_PeersReply_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PeersReply& from_msg);
    ::google::protobuf::RepeatedPtrField< ::types::PeerInfo > peers_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_remote_2fethbackend_2eproto;
};
// -------------------------------------------------------------------

class TxnLookupRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:remote.TxnLookupRequest) */ {
 public:
  inline TxnLookupRequest() : TxnLookupRequest(nullptr) {}
  ~TxnLookupRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TxnLookupRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline TxnLookupRequest(const TxnLookupRequest& from) : TxnLookupRequest(nullptr, from) {}
  inline TxnLookupRequest(TxnLookupRequest&& from) noexcept
      : TxnLookupRequest(nullptr, std::move(from)) {}
  inline TxnLookupRequest& operator=(const TxnLookupRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline TxnLookupRequest& operator=(TxnLookupRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TxnLookupRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const TxnLookupRequest* internal_default_instance() {
    return reinterpret_cast<const TxnLookupRequest*>(
        &_TxnLookupRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 24;
  friend void swap(TxnLookupRequest& a, TxnLookupRequest& b) { a.Swap(&b); }
  inline void Swap(TxnLookupRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TxnLookupRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TxnLookupRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<TxnLookupRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TxnLookupRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TxnLookupRequest& from) { TxnLookupRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TxnLookupRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "remote.TxnLookupRequest"; }

 protected:
  explicit TxnLookupRequest(::google::protobuf::Arena* arena);
  TxnLookupRequest(::google::protobuf::Arena* arena, const TxnLookupRequest& from);
  TxnLookupRequest(::google::protobuf::Arena* arena, TxnLookupRequest&& from) noexcept
      : TxnLookupRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTxnHashFieldNumber = 1,
  };
  // .types.H256 txn_hash = 1;
  bool has_txn_hash() const;
  void clear_txn_hash() ;
  const ::types::H256& txn_hash() const;
  PROTOBUF_NODISCARD ::types::H256* release_txn_hash();
  ::types::H256* mutable_txn_hash();
  void set_allocated_txn_hash(::types::H256* value);
  void unsafe_arena_set_allocated_txn_hash(::types::H256* value);
  ::types::H256* unsafe_arena_release_txn_hash();

  private:
  const ::types::H256& _internal_txn_hash() const;
  ::types::H256* _internal_mutable_txn_hash();

  public:
  // @@protoc_insertion_point(class_scope:remote.TxnLookupRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TxnLookupRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TxnLookupRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::types::H256* txn_hash_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_remote_2fethbackend_2eproto;
};
// -------------------------------------------------------------------

class SubscribeLogsReply final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:remote.SubscribeLogsReply) */ {
 public:
  inline SubscribeLogsReply() : SubscribeLogsReply(nullptr) {}
  ~SubscribeLogsReply() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SubscribeLogsReply(
      ::google::protobuf::internal::ConstantInitialized);

  inline SubscribeLogsReply(const SubscribeLogsReply& from) : SubscribeLogsReply(nullptr, from) {}
  inline SubscribeLogsReply(SubscribeLogsReply&& from) noexcept
      : SubscribeLogsReply(nullptr, std::move(from)) {}
  inline SubscribeLogsReply& operator=(const SubscribeLogsReply& from) {
    CopyFrom(from);
    return *this;
  }
  inline SubscribeLogsReply& operator=(SubscribeLogsReply&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SubscribeLogsReply& default_instance() {
    return *internal_default_instance();
  }
  static inline const SubscribeLogsReply* internal_default_instance() {
    return reinterpret_cast<const SubscribeLogsReply*>(
        &_SubscribeLogsReply_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 21;
  friend void swap(SubscribeLogsReply& a, SubscribeLogsReply& b) { a.Swap(&b); }
  inline void Swap(SubscribeLogsReply* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SubscribeLogsReply* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SubscribeLogsReply* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<SubscribeLogsReply>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SubscribeLogsReply& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SubscribeLogsReply& from) { SubscribeLogsReply::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SubscribeLogsReply* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "remote.SubscribeLogsReply"; }

 protected:
  explicit SubscribeLogsReply(::google::protobuf::Arena* arena);
  SubscribeLogsReply(::google::protobuf::Arena* arena, const SubscribeLogsReply& from);
  SubscribeLogsReply(::google::protobuf::Arena* arena, SubscribeLogsReply&& from) noexcept
      : SubscribeLogsReply(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTopicsFieldNumber = 6,
    kDataFieldNumber = 4,
    kAddressFieldNumber = 1,
    kBlockHashFieldNumber = 2,
    kTransactionHashFieldNumber = 7,
    kBlockNumberFieldNumber = 3,
    kLogIndexFieldNumber = 5,
    kTransactionIndexFieldNumber = 8,
    kRemovedFieldNumber = 9,
  };
  // repeated .types.H256 topics = 6;
  int topics_size() const;
  private:
  int _internal_topics_size() const;

  public:
  void clear_topics() ;
  ::types::H256* mutable_topics(int index);
  ::google::protobuf::RepeatedPtrField<::types::H256>* mutable_topics();

  private:
  const ::google::protobuf::RepeatedPtrField<::types::H256>& _internal_topics() const;
  ::google::protobuf::RepeatedPtrField<::types::H256>* _internal_mutable_topics();
  public:
  const ::types::H256& topics(int index) const;
  ::types::H256* add_topics();
  const ::google::protobuf::RepeatedPtrField<::types::H256>& topics() const;
  // bytes data = 4;
  void clear_data() ;
  const std::string& data() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_data(Arg_&& arg, Args_... args);
  std::string* mutable_data();
  PROTOBUF_NODISCARD std::string* release_data();
  void set_allocated_data(std::string* value);

  private:
  const std::string& _internal_data() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_data(
      const std::string& value);
  std::string* _internal_mutable_data();

  public:
  // .types.H160 address = 1;
  bool has_address() const;
  void clear_address() ;
  const ::types::H160& address() const;
  PROTOBUF_NODISCARD ::types::H160* release_address();
  ::types::H160* mutable_address();
  void set_allocated_address(::types::H160* value);
  void unsafe_arena_set_allocated_address(::types::H160* value);
  ::types::H160* unsafe_arena_release_address();

  private:
  const ::types::H160& _internal_address() const;
  ::types::H160* _internal_mutable_address();

  public:
  // .types.H256 block_hash = 2;
  bool has_block_hash() const;
  void clear_block_hash() ;
  const ::types::H256& block_hash() const;
  PROTOBUF_NODISCARD ::types::H256* release_block_hash();
  ::types::H256* mutable_block_hash();
  void set_allocated_block_hash(::types::H256* value);
  void unsafe_arena_set_allocated_block_hash(::types::H256* value);
  ::types::H256* unsafe_arena_release_block_hash();

  private:
  const ::types::H256& _internal_block_hash() const;
  ::types::H256* _internal_mutable_block_hash();

  public:
  // .types.H256 transaction_hash = 7;
  bool has_transaction_hash() const;
  void clear_transaction_hash() ;
  const ::types::H256& transaction_hash() const;
  PROTOBUF_NODISCARD ::types::H256* release_transaction_hash();
  ::types::H256* mutable_transaction_hash();
  void set_allocated_transaction_hash(::types::H256* value);
  void unsafe_arena_set_allocated_transaction_hash(::types::H256* value);
  ::types::H256* unsafe_arena_release_transaction_hash();

  private:
  const ::types::H256& _internal_transaction_hash() const;
  ::types::H256* _internal_mutable_transaction_hash();

  public:
  // uint64 block_number = 3;
  void clear_block_number() ;
  ::uint64_t block_number() const;
  void set_block_number(::uint64_t value);

  private:
  ::uint64_t _internal_block_number() const;
  void _internal_set_block_number(::uint64_t value);

  public:
  // uint64 log_index = 5;
  void clear_log_index() ;
  ::uint64_t log_index() const;
  void set_log_index(::uint64_t value);

  private:
  ::uint64_t _internal_log_index() const;
  void _internal_set_log_index(::uint64_t value);

  public:
  // uint64 transaction_index = 8;
  void clear_transaction_index() ;
  ::uint64_t transaction_index() const;
  void set_transaction_index(::uint64_t value);

  private:
  ::uint64_t _internal_transaction_index() const;
  void _internal_set_transaction_index(::uint64_t value);

  public:
  // bool removed = 9;
  void clear_removed() ;
  bool removed() const;
  void set_removed(bool value);

  private:
  bool _internal_removed() const;
  void _internal_set_removed(bool value);

  public:
  // @@protoc_insertion_point(class_scope:remote.SubscribeLogsReply)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 9, 4,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SubscribeLogsReply_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SubscribeLogsReply& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::types::H256 > topics_;
    ::google::protobuf::internal::ArenaStringPtr data_;
    ::types::H160* address_;
    ::types::H256* block_hash_;
    ::types::H256* transaction_hash_;
    ::uint64_t block_number_;
    ::uint64_t log_index_;
    ::uint64_t transaction_index_;
    bool removed_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_remote_2fethbackend_2eproto;
};
// -------------------------------------------------------------------

class NodesInfoReply final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:remote.NodesInfoReply) */ {
 public:
  inline NodesInfoReply() : NodesInfoReply(nullptr) {}
  ~NodesInfoReply() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR NodesInfoReply(
      ::google::protobuf::internal::ConstantInitialized);

  inline NodesInfoReply(const NodesInfoReply& from) : NodesInfoReply(nullptr, from) {}
  inline NodesInfoReply(NodesInfoReply&& from) noexcept
      : NodesInfoReply(nullptr, std::move(from)) {}
  inline NodesInfoReply& operator=(const NodesInfoReply& from) {
    CopyFrom(from);
    return *this;
  }
  inline NodesInfoReply& operator=(NodesInfoReply&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NodesInfoReply& default_instance() {
    return *internal_default_instance();
  }
  static inline const NodesInfoReply* internal_default_instance() {
    return reinterpret_cast<const NodesInfoReply*>(
        &_NodesInfoReply_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 28;
  friend void swap(NodesInfoReply& a, NodesInfoReply& b) { a.Swap(&b); }
  inline void Swap(NodesInfoReply* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NodesInfoReply* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NodesInfoReply* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<NodesInfoReply>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const NodesInfoReply& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const NodesInfoReply& from) { NodesInfoReply::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(NodesInfoReply* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "remote.NodesInfoReply"; }

 protected:
  explicit NodesInfoReply(::google::protobuf::Arena* arena);
  NodesInfoReply(::google::protobuf::Arena* arena, const NodesInfoReply& from);
  NodesInfoReply(::google::protobuf::Arena* arena, NodesInfoReply&& from) noexcept
      : NodesInfoReply(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNodesInfoFieldNumber = 1,
  };
  // repeated .types.NodeInfoReply nodes_info = 1;
  int nodes_info_size() const;
  private:
  int _internal_nodes_info_size() const;

  public:
  void clear_nodes_info() ;
  ::types::NodeInfoReply* mutable_nodes_info(int index);
  ::google::protobuf::RepeatedPtrField<::types::NodeInfoReply>* mutable_nodes_info();

  private:
  const ::google::protobuf::RepeatedPtrField<::types::NodeInfoReply>& _internal_nodes_info() const;
  ::google::protobuf::RepeatedPtrField<::types::NodeInfoReply>* _internal_mutable_nodes_info();
  public:
  const ::types::NodeInfoReply& nodes_info(int index) const;
  ::types::NodeInfoReply* add_nodes_info();
  const ::google::protobuf::RepeatedPtrField<::types::NodeInfoReply>& nodes_info() const;
  // @@protoc_insertion_point(class_scope:remote.NodesInfoReply)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_NodesInfoReply_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const NodesInfoReply& from_msg);
    ::google::protobuf::RepeatedPtrField< ::types::NodeInfoReply > nodes_info_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_remote_2fethbackend_2eproto;
};
// -------------------------------------------------------------------

class LogsFilterRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:remote.LogsFilterRequest) */ {
 public:
  inline LogsFilterRequest() : LogsFilterRequest(nullptr) {}
  ~LogsFilterRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR LogsFilterRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline LogsFilterRequest(const LogsFilterRequest& from) : LogsFilterRequest(nullptr, from) {}
  inline LogsFilterRequest(LogsFilterRequest&& from) noexcept
      : LogsFilterRequest(nullptr, std::move(from)) {}
  inline LogsFilterRequest& operator=(const LogsFilterRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline LogsFilterRequest& operator=(LogsFilterRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LogsFilterRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const LogsFilterRequest* internal_default_instance() {
    return reinterpret_cast<const LogsFilterRequest*>(
        &_LogsFilterRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 20;
  friend void swap(LogsFilterRequest& a, LogsFilterRequest& b) { a.Swap(&b); }
  inline void Swap(LogsFilterRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LogsFilterRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LogsFilterRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<LogsFilterRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LogsFilterRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const LogsFilterRequest& from) { LogsFilterRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(LogsFilterRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "remote.LogsFilterRequest"; }

 protected:
  explicit LogsFilterRequest(::google::protobuf::Arena* arena);
  LogsFilterRequest(::google::protobuf::Arena* arena, const LogsFilterRequest& from);
  LogsFilterRequest(::google::protobuf::Arena* arena, LogsFilterRequest&& from) noexcept
      : LogsFilterRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAddressesFieldNumber = 2,
    kTopicsFieldNumber = 4,
    kAllAddressesFieldNumber = 1,
    kAllTopicsFieldNumber = 3,
  };
  // repeated .types.H160 addresses = 2;
  int addresses_size() const;
  private:
  int _internal_addresses_size() const;

  public:
  void clear_addresses() ;
  ::types::H160* mutable_addresses(int index);
  ::google::protobuf::RepeatedPtrField<::types::H160>* mutable_addresses();

  private:
  const ::google::protobuf::RepeatedPtrField<::types::H160>& _internal_addresses() const;
  ::google::protobuf::RepeatedPtrField<::types::H160>* _internal_mutable_addresses();
  public:
  const ::types::H160& addresses(int index) const;
  ::types::H160* add_addresses();
  const ::google::protobuf::RepeatedPtrField<::types::H160>& addresses() const;
  // repeated .types.H256 topics = 4;
  int topics_size() const;
  private:
  int _internal_topics_size() const;

  public:
  void clear_topics() ;
  ::types::H256* mutable_topics(int index);
  ::google::protobuf::RepeatedPtrField<::types::H256>* mutable_topics();

  private:
  const ::google::protobuf::RepeatedPtrField<::types::H256>& _internal_topics() const;
  ::google::protobuf::RepeatedPtrField<::types::H256>* _internal_mutable_topics();
  public:
  const ::types::H256& topics(int index) const;
  ::types::H256* add_topics();
  const ::google::protobuf::RepeatedPtrField<::types::H256>& topics() const;
  // bool all_addresses = 1;
  void clear_all_addresses() ;
  bool all_addresses() const;
  void set_all_addresses(bool value);

  private:
  bool _internal_all_addresses() const;
  void _internal_set_all_addresses(bool value);

  public:
  // bool all_topics = 3;
  void clear_all_topics() ;
  bool all_topics() const;
  void set_all_topics(bool value);

  private:
  bool _internal_all_topics() const;
  void _internal_set_all_topics(bool value);

  public:
  // @@protoc_insertion_point(class_scope:remote.LogsFilterRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 2,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_LogsFilterRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const LogsFilterRequest& from_msg);
    ::google::protobuf::RepeatedPtrField< ::types::H160 > addresses_;
    ::google::protobuf::RepeatedPtrField< ::types::H256 > topics_;
    bool all_addresses_;
    bool all_topics_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_remote_2fethbackend_2eproto;
};
// -------------------------------------------------------------------

class HeaderNumberRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:remote.HeaderNumberRequest) */ {
 public:
  inline HeaderNumberRequest() : HeaderNumberRequest(nullptr) {}
  ~HeaderNumberRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR HeaderNumberRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline HeaderNumberRequest(const HeaderNumberRequest& from) : HeaderNumberRequest(nullptr, from) {}
  inline HeaderNumberRequest(HeaderNumberRequest&& from) noexcept
      : HeaderNumberRequest(nullptr, std::move(from)) {}
  inline HeaderNumberRequest& operator=(const HeaderNumberRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline HeaderNumberRequest& operator=(HeaderNumberRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const HeaderNumberRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const HeaderNumberRequest* internal_default_instance() {
    return reinterpret_cast<const HeaderNumberRequest*>(
        &_HeaderNumberRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 14;
  friend void swap(HeaderNumberRequest& a, HeaderNumberRequest& b) { a.Swap(&b); }
  inline void Swap(HeaderNumberRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(HeaderNumberRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  HeaderNumberRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<HeaderNumberRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const HeaderNumberRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const HeaderNumberRequest& from) { HeaderNumberRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(HeaderNumberRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "remote.HeaderNumberRequest"; }

 protected:
  explicit HeaderNumberRequest(::google::protobuf::Arena* arena);
  HeaderNumberRequest(::google::protobuf::Arena* arena, const HeaderNumberRequest& from);
  HeaderNumberRequest(::google::protobuf::Arena* arena, HeaderNumberRequest&& from) noexcept
      : HeaderNumberRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kHashFieldNumber = 1,
  };
  // .types.H256 hash = 1;
  bool has_hash() const;
  void clear_hash() ;
  const ::types::H256& hash() const;
  PROTOBUF_NODISCARD ::types::H256* release_hash();
  ::types::H256* mutable_hash();
  void set_allocated_hash(::types::H256* value);
  void unsafe_arena_set_allocated_hash(::types::H256* value);
  ::types::H256* unsafe_arena_release_hash();

  private:
  const ::types::H256& _internal_hash() const;
  ::types::H256* _internal_mutable_hash();

  public:
  // @@protoc_insertion_point(class_scope:remote.HeaderNumberRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_HeaderNumberRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const HeaderNumberRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::types::H256* hash_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_remote_2fethbackend_2eproto;
};
// -------------------------------------------------------------------

class EtherbaseReply final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:remote.EtherbaseReply) */ {
 public:
  inline EtherbaseReply() : EtherbaseReply(nullptr) {}
  ~EtherbaseReply() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR EtherbaseReply(
      ::google::protobuf::internal::ConstantInitialized);

  inline EtherbaseReply(const EtherbaseReply& from) : EtherbaseReply(nullptr, from) {}
  inline EtherbaseReply(EtherbaseReply&& from) noexcept
      : EtherbaseReply(nullptr, std::move(from)) {}
  inline EtherbaseReply& operator=(const EtherbaseReply& from) {
    CopyFrom(from);
    return *this;
  }
  inline EtherbaseReply& operator=(EtherbaseReply&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EtherbaseReply& default_instance() {
    return *internal_default_instance();
  }
  static inline const EtherbaseReply* internal_default_instance() {
    return reinterpret_cast<const EtherbaseReply*>(
        &_EtherbaseReply_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(EtherbaseReply& a, EtherbaseReply& b) { a.Swap(&b); }
  inline void Swap(EtherbaseReply* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EtherbaseReply* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EtherbaseReply* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<EtherbaseReply>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const EtherbaseReply& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const EtherbaseReply& from) { EtherbaseReply::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(EtherbaseReply* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "remote.EtherbaseReply"; }

 protected:
  explicit EtherbaseReply(::google::protobuf::Arena* arena);
  EtherbaseReply(::google::protobuf::Arena* arena, const EtherbaseReply& from);
  EtherbaseReply(::google::protobuf::Arena* arena, EtherbaseReply&& from) noexcept
      : EtherbaseReply(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAddressFieldNumber = 1,
  };
  // .types.H160 address = 1;
  bool has_address() const;
  void clear_address() ;
  const ::types::H160& address() const;
  PROTOBUF_NODISCARD ::types::H160* release_address();
  ::types::H160* mutable_address();
  void set_allocated_address(::types::H160* value);
  void unsafe_arena_set_allocated_address(::types::H160* value);
  ::types::H160* unsafe_arena_release_address();

  private:
  const ::types::H160& _internal_address() const;
  ::types::H160* _internal_mutable_address();

  public:
  // @@protoc_insertion_point(class_scope:remote.EtherbaseReply)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_EtherbaseReply_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const EtherbaseReply& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::types::H160* address_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_remote_2fethbackend_2eproto;
};
// -------------------------------------------------------------------

class EngineGetPayloadBodiesByHashV1Request final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:remote.EngineGetPayloadBodiesByHashV1Request) */ {
 public:
  inline EngineGetPayloadBodiesByHashV1Request() : EngineGetPayloadBodiesByHashV1Request(nullptr) {}
  ~EngineGetPayloadBodiesByHashV1Request() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR EngineGetPayloadBodiesByHashV1Request(
      ::google::protobuf::internal::ConstantInitialized);

  inline EngineGetPayloadBodiesByHashV1Request(const EngineGetPayloadBodiesByHashV1Request& from) : EngineGetPayloadBodiesByHashV1Request(nullptr, from) {}
  inline EngineGetPayloadBodiesByHashV1Request(EngineGetPayloadBodiesByHashV1Request&& from) noexcept
      : EngineGetPayloadBodiesByHashV1Request(nullptr, std::move(from)) {}
  inline EngineGetPayloadBodiesByHashV1Request& operator=(const EngineGetPayloadBodiesByHashV1Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline EngineGetPayloadBodiesByHashV1Request& operator=(EngineGetPayloadBodiesByHashV1Request&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EngineGetPayloadBodiesByHashV1Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const EngineGetPayloadBodiesByHashV1Request* internal_default_instance() {
    return reinterpret_cast<const EngineGetPayloadBodiesByHashV1Request*>(
        &_EngineGetPayloadBodiesByHashV1Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 32;
  friend void swap(EngineGetPayloadBodiesByHashV1Request& a, EngineGetPayloadBodiesByHashV1Request& b) { a.Swap(&b); }
  inline void Swap(EngineGetPayloadBodiesByHashV1Request* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EngineGetPayloadBodiesByHashV1Request* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EngineGetPayloadBodiesByHashV1Request* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<EngineGetPayloadBodiesByHashV1Request>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const EngineGetPayloadBodiesByHashV1Request& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const EngineGetPayloadBodiesByHashV1Request& from) { EngineGetPayloadBodiesByHashV1Request::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(EngineGetPayloadBodiesByHashV1Request* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "remote.EngineGetPayloadBodiesByHashV1Request"; }

 protected:
  explicit EngineGetPayloadBodiesByHashV1Request(::google::protobuf::Arena* arena);
  EngineGetPayloadBodiesByHashV1Request(::google::protobuf::Arena* arena, const EngineGetPayloadBodiesByHashV1Request& from);
  EngineGetPayloadBodiesByHashV1Request(::google::protobuf::Arena* arena, EngineGetPayloadBodiesByHashV1Request&& from) noexcept
      : EngineGetPayloadBodiesByHashV1Request(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kHashesFieldNumber = 1,
  };
  // repeated .types.H256 hashes = 1;
  int hashes_size() const;
  private:
  int _internal_hashes_size() const;

  public:
  void clear_hashes() ;
  ::types::H256* mutable_hashes(int index);
  ::google::protobuf::RepeatedPtrField<::types::H256>* mutable_hashes();

  private:
  const ::google::protobuf::RepeatedPtrField<::types::H256>& _internal_hashes() const;
  ::google::protobuf::RepeatedPtrField<::types::H256>* _internal_mutable_hashes();
  public:
  const ::types::H256& hashes(int index) const;
  ::types::H256* add_hashes();
  const ::google::protobuf::RepeatedPtrField<::types::H256>& hashes() const;
  // @@protoc_insertion_point(class_scope:remote.EngineGetPayloadBodiesByHashV1Request)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_EngineGetPayloadBodiesByHashV1Request_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const EngineGetPayloadBodiesByHashV1Request& from_msg);
    ::google::protobuf::RepeatedPtrField< ::types::H256 > hashes_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_remote_2fethbackend_2eproto;
};
// -------------------------------------------------------------------

class CanonicalHashReply final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:remote.CanonicalHashReply) */ {
 public:
  inline CanonicalHashReply() : CanonicalHashReply(nullptr) {}
  ~CanonicalHashReply() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CanonicalHashReply(
      ::google::protobuf::internal::ConstantInitialized);

  inline CanonicalHashReply(const CanonicalHashReply& from) : CanonicalHashReply(nullptr, from) {}
  inline CanonicalHashReply(CanonicalHashReply&& from) noexcept
      : CanonicalHashReply(nullptr, std::move(from)) {}
  inline CanonicalHashReply& operator=(const CanonicalHashReply& from) {
    CopyFrom(from);
    return *this;
  }
  inline CanonicalHashReply& operator=(CanonicalHashReply&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CanonicalHashReply& default_instance() {
    return *internal_default_instance();
  }
  static inline const CanonicalHashReply* internal_default_instance() {
    return reinterpret_cast<const CanonicalHashReply*>(
        &_CanonicalHashReply_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 13;
  friend void swap(CanonicalHashReply& a, CanonicalHashReply& b) { a.Swap(&b); }
  inline void Swap(CanonicalHashReply* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CanonicalHashReply* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CanonicalHashReply* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<CanonicalHashReply>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CanonicalHashReply& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CanonicalHashReply& from) { CanonicalHashReply::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CanonicalHashReply* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "remote.CanonicalHashReply"; }

 protected:
  explicit CanonicalHashReply(::google::protobuf::Arena* arena);
  CanonicalHashReply(::google::protobuf::Arena* arena, const CanonicalHashReply& from);
  CanonicalHashReply(::google::protobuf::Arena* arena, CanonicalHashReply&& from) noexcept
      : CanonicalHashReply(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kHashFieldNumber = 1,
  };
  // .types.H256 hash = 1;
  bool has_hash() const;
  void clear_hash() ;
  const ::types::H256& hash() const;
  PROTOBUF_NODISCARD ::types::H256* release_hash();
  ::types::H256* mutable_hash();
  void set_allocated_hash(::types::H256* value);
  void unsafe_arena_set_allocated_hash(::types::H256* value);
  ::types::H256* unsafe_arena_release_hash();

  private:
  const ::types::H256& _internal_hash() const;
  ::types::H256* _internal_mutable_hash();

  public:
  // @@protoc_insertion_point(class_scope:remote.CanonicalHashReply)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_CanonicalHashReply_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CanonicalHashReply& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::types::H256* hash_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_remote_2fethbackend_2eproto;
};
// -------------------------------------------------------------------

class BlockRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:remote.BlockRequest) */ {
 public:
  inline BlockRequest() : BlockRequest(nullptr) {}
  ~BlockRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR BlockRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline BlockRequest(const BlockRequest& from) : BlockRequest(nullptr, from) {}
  inline BlockRequest(BlockRequest&& from) noexcept
      : BlockRequest(nullptr, std::move(from)) {}
  inline BlockRequest& operator=(const BlockRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline BlockRequest& operator=(BlockRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BlockRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const BlockRequest* internal_default_instance() {
    return reinterpret_cast<const BlockRequest*>(
        &_BlockRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 22;
  friend void swap(BlockRequest& a, BlockRequest& b) { a.Swap(&b); }
  inline void Swap(BlockRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BlockRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BlockRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<BlockRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BlockRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const BlockRequest& from) { BlockRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(BlockRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "remote.BlockRequest"; }

 protected:
  explicit BlockRequest(::google::protobuf::Arena* arena);
  BlockRequest(::google::protobuf::Arena* arena, const BlockRequest& from);
  BlockRequest(::google::protobuf::Arena* arena, BlockRequest&& from) noexcept
      : BlockRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kBlockHashFieldNumber = 3,
    kBlockHeightFieldNumber = 2,
  };
  // .types.H256 block_hash = 3;
  bool has_block_hash() const;
  void clear_block_hash() ;
  const ::types::H256& block_hash() const;
  PROTOBUF_NODISCARD ::types::H256* release_block_hash();
  ::types::H256* mutable_block_hash();
  void set_allocated_block_hash(::types::H256* value);
  void unsafe_arena_set_allocated_block_hash(::types::H256* value);
  ::types::H256* unsafe_arena_release_block_hash();

  private:
  const ::types::H256& _internal_block_hash() const;
  ::types::H256* _internal_mutable_block_hash();

  public:
  // uint64 block_height = 2;
  void clear_block_height() ;
  ::uint64_t block_height() const;
  void set_block_height(::uint64_t value);

  private:
  ::uint64_t _internal_block_height() const;
  void _internal_set_block_height(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:remote.BlockRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_BlockRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const BlockRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::types::H256* block_hash_;
    ::uint64_t block_height_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_remote_2fethbackend_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// EtherbaseRequest

// -------------------------------------------------------------------

// EtherbaseReply

// .types.H160 address = 1;
inline bool EtherbaseReply::has_address() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.address_ != nullptr);
  return value;
}
inline const ::types::H160& EtherbaseReply::_internal_address() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::types::H160* p = _impl_.address_;
  return p != nullptr ? *p : reinterpret_cast<const ::types::H160&>(::types::_H160_default_instance_);
}
inline const ::types::H160& EtherbaseReply::address() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:remote.EtherbaseReply.address)
  return _internal_address();
}
inline void EtherbaseReply::unsafe_arena_set_allocated_address(::types::H160* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.address_);
  }
  _impl_.address_ = reinterpret_cast<::types::H160*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:remote.EtherbaseReply.address)
}
inline ::types::H160* EtherbaseReply::release_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::types::H160* released = _impl_.address_;
  _impl_.address_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::types::H160* EtherbaseReply::unsafe_arena_release_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:remote.EtherbaseReply.address)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::types::H160* temp = _impl_.address_;
  _impl_.address_ = nullptr;
  return temp;
}
inline ::types::H160* EtherbaseReply::_internal_mutable_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.address_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::types::H160>(GetArena());
    _impl_.address_ = reinterpret_cast<::types::H160*>(p);
  }
  return _impl_.address_;
}
inline ::types::H160* EtherbaseReply::mutable_address() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::types::H160* _msg = _internal_mutable_address();
  // @@protoc_insertion_point(field_mutable:remote.EtherbaseReply.address)
  return _msg;
}
inline void EtherbaseReply::set_allocated_address(::types::H160* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.address_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.address_ = reinterpret_cast<::types::H160*>(value);
  // @@protoc_insertion_point(field_set_allocated:remote.EtherbaseReply.address)
}

// -------------------------------------------------------------------

// NetVersionRequest

// -------------------------------------------------------------------

// NetVersionReply

// uint64 id = 1;
inline void NetVersionReply::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = ::uint64_t{0u};
}
inline ::uint64_t NetVersionReply::id() const {
  // @@protoc_insertion_point(field_get:remote.NetVersionReply.id)
  return _internal_id();
}
inline void NetVersionReply::set_id(::uint64_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:remote.NetVersionReply.id)
}
inline ::uint64_t NetVersionReply::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_;
}
inline void NetVersionReply::_internal_set_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// -------------------------------------------------------------------

// SyncingReply_StageProgress

// string stage_name = 1;
inline void SyncingReply_StageProgress::clear_stage_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.stage_name_.ClearToEmpty();
}
inline const std::string& SyncingReply_StageProgress::stage_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:remote.SyncingReply.StageProgress.stage_name)
  return _internal_stage_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SyncingReply_StageProgress::set_stage_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.stage_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:remote.SyncingReply.StageProgress.stage_name)
}
inline std::string* SyncingReply_StageProgress::mutable_stage_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_stage_name();
  // @@protoc_insertion_point(field_mutable:remote.SyncingReply.StageProgress.stage_name)
  return _s;
}
inline const std::string& SyncingReply_StageProgress::_internal_stage_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.stage_name_.Get();
}
inline void SyncingReply_StageProgress::_internal_set_stage_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.stage_name_.Set(value, GetArena());
}
inline std::string* SyncingReply_StageProgress::_internal_mutable_stage_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.stage_name_.Mutable( GetArena());
}
inline std::string* SyncingReply_StageProgress::release_stage_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:remote.SyncingReply.StageProgress.stage_name)
  return _impl_.stage_name_.Release();
}
inline void SyncingReply_StageProgress::set_allocated_stage_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.stage_name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.stage_name_.IsDefault()) {
          _impl_.stage_name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:remote.SyncingReply.StageProgress.stage_name)
}

// uint64 block_number = 2;
inline void SyncingReply_StageProgress::clear_block_number() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.block_number_ = ::uint64_t{0u};
}
inline ::uint64_t SyncingReply_StageProgress::block_number() const {
  // @@protoc_insertion_point(field_get:remote.SyncingReply.StageProgress.block_number)
  return _internal_block_number();
}
inline void SyncingReply_StageProgress::set_block_number(::uint64_t value) {
  _internal_set_block_number(value);
  // @@protoc_insertion_point(field_set:remote.SyncingReply.StageProgress.block_number)
}
inline ::uint64_t SyncingReply_StageProgress::_internal_block_number() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.block_number_;
}
inline void SyncingReply_StageProgress::_internal_set_block_number(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.block_number_ = value;
}

// -------------------------------------------------------------------

// SyncingReply

// uint64 last_new_block_seen = 1;
inline void SyncingReply::clear_last_new_block_seen() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_new_block_seen_ = ::uint64_t{0u};
}
inline ::uint64_t SyncingReply::last_new_block_seen() const {
  // @@protoc_insertion_point(field_get:remote.SyncingReply.last_new_block_seen)
  return _internal_last_new_block_seen();
}
inline void SyncingReply::set_last_new_block_seen(::uint64_t value) {
  _internal_set_last_new_block_seen(value);
  // @@protoc_insertion_point(field_set:remote.SyncingReply.last_new_block_seen)
}
inline ::uint64_t SyncingReply::_internal_last_new_block_seen() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.last_new_block_seen_;
}
inline void SyncingReply::_internal_set_last_new_block_seen(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_new_block_seen_ = value;
}

// uint64 frozen_blocks = 2;
inline void SyncingReply::clear_frozen_blocks() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.frozen_blocks_ = ::uint64_t{0u};
}
inline ::uint64_t SyncingReply::frozen_blocks() const {
  // @@protoc_insertion_point(field_get:remote.SyncingReply.frozen_blocks)
  return _internal_frozen_blocks();
}
inline void SyncingReply::set_frozen_blocks(::uint64_t value) {
  _internal_set_frozen_blocks(value);
  // @@protoc_insertion_point(field_set:remote.SyncingReply.frozen_blocks)
}
inline ::uint64_t SyncingReply::_internal_frozen_blocks() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.frozen_blocks_;
}
inline void SyncingReply::_internal_set_frozen_blocks(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.frozen_blocks_ = value;
}

// uint64 current_block = 3;
inline void SyncingReply::clear_current_block() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.current_block_ = ::uint64_t{0u};
}
inline ::uint64_t SyncingReply::current_block() const {
  // @@protoc_insertion_point(field_get:remote.SyncingReply.current_block)
  return _internal_current_block();
}
inline void SyncingReply::set_current_block(::uint64_t value) {
  _internal_set_current_block(value);
  // @@protoc_insertion_point(field_set:remote.SyncingReply.current_block)
}
inline ::uint64_t SyncingReply::_internal_current_block() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.current_block_;
}
inline void SyncingReply::_internal_set_current_block(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.current_block_ = value;
}

// bool syncing = 4;
inline void SyncingReply::clear_syncing() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.syncing_ = false;
}
inline bool SyncingReply::syncing() const {
  // @@protoc_insertion_point(field_get:remote.SyncingReply.syncing)
  return _internal_syncing();
}
inline void SyncingReply::set_syncing(bool value) {
  _internal_set_syncing(value);
  // @@protoc_insertion_point(field_set:remote.SyncingReply.syncing)
}
inline bool SyncingReply::_internal_syncing() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.syncing_;
}
inline void SyncingReply::_internal_set_syncing(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.syncing_ = value;
}

// repeated .remote.SyncingReply.StageProgress stages = 5;
inline int SyncingReply::_internal_stages_size() const {
  return _internal_stages().size();
}
inline int SyncingReply::stages_size() const {
  return _internal_stages_size();
}
inline void SyncingReply::clear_stages() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.stages_.Clear();
}
inline ::remote::SyncingReply_StageProgress* SyncingReply::mutable_stages(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:remote.SyncingReply.stages)
  return _internal_mutable_stages()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::remote::SyncingReply_StageProgress>* SyncingReply::mutable_stages()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:remote.SyncingReply.stages)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_stages();
}
inline const ::remote::SyncingReply_StageProgress& SyncingReply::stages(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:remote.SyncingReply.stages)
  return _internal_stages().Get(index);
}
inline ::remote::SyncingReply_StageProgress* SyncingReply::add_stages() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::remote::SyncingReply_StageProgress* _add = _internal_mutable_stages()->Add();
  // @@protoc_insertion_point(field_add:remote.SyncingReply.stages)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::remote::SyncingReply_StageProgress>& SyncingReply::stages() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:remote.SyncingReply.stages)
  return _internal_stages();
}
inline const ::google::protobuf::RepeatedPtrField<::remote::SyncingReply_StageProgress>&
SyncingReply::_internal_stages() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.stages_;
}
inline ::google::protobuf::RepeatedPtrField<::remote::SyncingReply_StageProgress>*
SyncingReply::_internal_mutable_stages() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.stages_;
}

// -------------------------------------------------------------------

// NetPeerCountRequest

// -------------------------------------------------------------------

// NetPeerCountReply

// uint64 count = 1;
inline void NetPeerCountReply::clear_count() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.count_ = ::uint64_t{0u};
}
inline ::uint64_t NetPeerCountReply::count() const {
  // @@protoc_insertion_point(field_get:remote.NetPeerCountReply.count)
  return _internal_count();
}
inline void NetPeerCountReply::set_count(::uint64_t value) {
  _internal_set_count(value);
  // @@protoc_insertion_point(field_set:remote.NetPeerCountReply.count)
}
inline ::uint64_t NetPeerCountReply::_internal_count() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.count_;
}
inline void NetPeerCountReply::_internal_set_count(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.count_ = value;
}

// -------------------------------------------------------------------

// ProtocolVersionRequest

// -------------------------------------------------------------------

// ProtocolVersionReply

// uint64 id = 1;
inline void ProtocolVersionReply::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = ::uint64_t{0u};
}
inline ::uint64_t ProtocolVersionReply::id() const {
  // @@protoc_insertion_point(field_get:remote.ProtocolVersionReply.id)
  return _internal_id();
}
inline void ProtocolVersionReply::set_id(::uint64_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:remote.ProtocolVersionReply.id)
}
inline ::uint64_t ProtocolVersionReply::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_;
}
inline void ProtocolVersionReply::_internal_set_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// -------------------------------------------------------------------

// ClientVersionRequest

// -------------------------------------------------------------------

// ClientVersionReply

// string node_name = 1;
inline void ClientVersionReply::clear_node_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.node_name_.ClearToEmpty();
}
inline const std::string& ClientVersionReply::node_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:remote.ClientVersionReply.node_name)
  return _internal_node_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ClientVersionReply::set_node_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.node_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:remote.ClientVersionReply.node_name)
}
inline std::string* ClientVersionReply::mutable_node_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_node_name();
  // @@protoc_insertion_point(field_mutable:remote.ClientVersionReply.node_name)
  return _s;
}
inline const std::string& ClientVersionReply::_internal_node_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.node_name_.Get();
}
inline void ClientVersionReply::_internal_set_node_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.node_name_.Set(value, GetArena());
}
inline std::string* ClientVersionReply::_internal_mutable_node_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.node_name_.Mutable( GetArena());
}
inline std::string* ClientVersionReply::release_node_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:remote.ClientVersionReply.node_name)
  return _impl_.node_name_.Release();
}
inline void ClientVersionReply::set_allocated_node_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.node_name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.node_name_.IsDefault()) {
          _impl_.node_name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:remote.ClientVersionReply.node_name)
}

// -------------------------------------------------------------------

// CanonicalHashRequest

// uint64 block_number = 1;
inline void CanonicalHashRequest::clear_block_number() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.block_number_ = ::uint64_t{0u};
}
inline ::uint64_t CanonicalHashRequest::block_number() const {
  // @@protoc_insertion_point(field_get:remote.CanonicalHashRequest.block_number)
  return _internal_block_number();
}
inline void CanonicalHashRequest::set_block_number(::uint64_t value) {
  _internal_set_block_number(value);
  // @@protoc_insertion_point(field_set:remote.CanonicalHashRequest.block_number)
}
inline ::uint64_t CanonicalHashRequest::_internal_block_number() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.block_number_;
}
inline void CanonicalHashRequest::_internal_set_block_number(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.block_number_ = value;
}

// -------------------------------------------------------------------

// CanonicalHashReply

// .types.H256 hash = 1;
inline bool CanonicalHashReply::has_hash() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.hash_ != nullptr);
  return value;
}
inline const ::types::H256& CanonicalHashReply::_internal_hash() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::types::H256* p = _impl_.hash_;
  return p != nullptr ? *p : reinterpret_cast<const ::types::H256&>(::types::_H256_default_instance_);
}
inline const ::types::H256& CanonicalHashReply::hash() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:remote.CanonicalHashReply.hash)
  return _internal_hash();
}
inline void CanonicalHashReply::unsafe_arena_set_allocated_hash(::types::H256* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.hash_);
  }
  _impl_.hash_ = reinterpret_cast<::types::H256*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:remote.CanonicalHashReply.hash)
}
inline ::types::H256* CanonicalHashReply::release_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::types::H256* released = _impl_.hash_;
  _impl_.hash_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::types::H256* CanonicalHashReply::unsafe_arena_release_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:remote.CanonicalHashReply.hash)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::types::H256* temp = _impl_.hash_;
  _impl_.hash_ = nullptr;
  return temp;
}
inline ::types::H256* CanonicalHashReply::_internal_mutable_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.hash_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::types::H256>(GetArena());
    _impl_.hash_ = reinterpret_cast<::types::H256*>(p);
  }
  return _impl_.hash_;
}
inline ::types::H256* CanonicalHashReply::mutable_hash() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::types::H256* _msg = _internal_mutable_hash();
  // @@protoc_insertion_point(field_mutable:remote.CanonicalHashReply.hash)
  return _msg;
}
inline void CanonicalHashReply::set_allocated_hash(::types::H256* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.hash_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.hash_ = reinterpret_cast<::types::H256*>(value);
  // @@protoc_insertion_point(field_set_allocated:remote.CanonicalHashReply.hash)
}

// -------------------------------------------------------------------

// HeaderNumberRequest

// .types.H256 hash = 1;
inline bool HeaderNumberRequest::has_hash() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.hash_ != nullptr);
  return value;
}
inline const ::types::H256& HeaderNumberRequest::_internal_hash() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::types::H256* p = _impl_.hash_;
  return p != nullptr ? *p : reinterpret_cast<const ::types::H256&>(::types::_H256_default_instance_);
}
inline const ::types::H256& HeaderNumberRequest::hash() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:remote.HeaderNumberRequest.hash)
  return _internal_hash();
}
inline void HeaderNumberRequest::unsafe_arena_set_allocated_hash(::types::H256* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.hash_);
  }
  _impl_.hash_ = reinterpret_cast<::types::H256*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:remote.HeaderNumberRequest.hash)
}
inline ::types::H256* HeaderNumberRequest::release_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::types::H256* released = _impl_.hash_;
  _impl_.hash_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::types::H256* HeaderNumberRequest::unsafe_arena_release_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:remote.HeaderNumberRequest.hash)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::types::H256* temp = _impl_.hash_;
  _impl_.hash_ = nullptr;
  return temp;
}
inline ::types::H256* HeaderNumberRequest::_internal_mutable_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.hash_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::types::H256>(GetArena());
    _impl_.hash_ = reinterpret_cast<::types::H256*>(p);
  }
  return _impl_.hash_;
}
inline ::types::H256* HeaderNumberRequest::mutable_hash() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::types::H256* _msg = _internal_mutable_hash();
  // @@protoc_insertion_point(field_mutable:remote.HeaderNumberRequest.hash)
  return _msg;
}
inline void HeaderNumberRequest::set_allocated_hash(::types::H256* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.hash_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.hash_ = reinterpret_cast<::types::H256*>(value);
  // @@protoc_insertion_point(field_set_allocated:remote.HeaderNumberRequest.hash)
}

// -------------------------------------------------------------------

// HeaderNumberReply

// optional uint64 number = 1;
inline bool HeaderNumberReply::has_number() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void HeaderNumberReply::clear_number() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.number_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::uint64_t HeaderNumberReply::number() const {
  // @@protoc_insertion_point(field_get:remote.HeaderNumberReply.number)
  return _internal_number();
}
inline void HeaderNumberReply::set_number(::uint64_t value) {
  _internal_set_number(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:remote.HeaderNumberReply.number)
}
inline ::uint64_t HeaderNumberReply::_internal_number() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.number_;
}
inline void HeaderNumberReply::_internal_set_number(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.number_ = value;
}

// -------------------------------------------------------------------

// CanonicalBodyForStorageRequest

// uint64 blockNumber = 1;
inline void CanonicalBodyForStorageRequest::clear_blocknumber() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.blocknumber_ = ::uint64_t{0u};
}
inline ::uint64_t CanonicalBodyForStorageRequest::blocknumber() const {
  // @@protoc_insertion_point(field_get:remote.CanonicalBodyForStorageRequest.blockNumber)
  return _internal_blocknumber();
}
inline void CanonicalBodyForStorageRequest::set_blocknumber(::uint64_t value) {
  _internal_set_blocknumber(value);
  // @@protoc_insertion_point(field_set:remote.CanonicalBodyForStorageRequest.blockNumber)
}
inline ::uint64_t CanonicalBodyForStorageRequest::_internal_blocknumber() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.blocknumber_;
}
inline void CanonicalBodyForStorageRequest::_internal_set_blocknumber(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.blocknumber_ = value;
}

// -------------------------------------------------------------------

// CanonicalBodyForStorageReply

// bytes body = 1;
inline void CanonicalBodyForStorageReply::clear_body() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.body_.ClearToEmpty();
}
inline const std::string& CanonicalBodyForStorageReply::body() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:remote.CanonicalBodyForStorageReply.body)
  return _internal_body();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CanonicalBodyForStorageReply::set_body(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.body_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:remote.CanonicalBodyForStorageReply.body)
}
inline std::string* CanonicalBodyForStorageReply::mutable_body() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_body();
  // @@protoc_insertion_point(field_mutable:remote.CanonicalBodyForStorageReply.body)
  return _s;
}
inline const std::string& CanonicalBodyForStorageReply::_internal_body() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.body_.Get();
}
inline void CanonicalBodyForStorageReply::_internal_set_body(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.body_.Set(value, GetArena());
}
inline std::string* CanonicalBodyForStorageReply::_internal_mutable_body() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.body_.Mutable( GetArena());
}
inline std::string* CanonicalBodyForStorageReply::release_body() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:remote.CanonicalBodyForStorageReply.body)
  return _impl_.body_.Release();
}
inline void CanonicalBodyForStorageReply::set_allocated_body(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.body_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.body_.IsDefault()) {
          _impl_.body_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:remote.CanonicalBodyForStorageReply.body)
}

// -------------------------------------------------------------------

// SubscribeRequest

// .remote.Event type = 1;
inline void SubscribeRequest::clear_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = 0;
}
inline ::remote::Event SubscribeRequest::type() const {
  // @@protoc_insertion_point(field_get:remote.SubscribeRequest.type)
  return _internal_type();
}
inline void SubscribeRequest::set_type(::remote::Event value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:remote.SubscribeRequest.type)
}
inline ::remote::Event SubscribeRequest::_internal_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::remote::Event>(_impl_.type_);
}
inline void SubscribeRequest::_internal_set_type(::remote::Event value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = value;
}

// -------------------------------------------------------------------

// SubscribeReply

// .remote.Event type = 1;
inline void SubscribeReply::clear_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = 0;
}
inline ::remote::Event SubscribeReply::type() const {
  // @@protoc_insertion_point(field_get:remote.SubscribeReply.type)
  return _internal_type();
}
inline void SubscribeReply::set_type(::remote::Event value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:remote.SubscribeReply.type)
}
inline ::remote::Event SubscribeReply::_internal_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::remote::Event>(_impl_.type_);
}
inline void SubscribeReply::_internal_set_type(::remote::Event value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = value;
}

// bytes data = 2;
inline void SubscribeReply::clear_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.ClearToEmpty();
}
inline const std::string& SubscribeReply::data() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:remote.SubscribeReply.data)
  return _internal_data();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SubscribeReply::set_data(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:remote.SubscribeReply.data)
}
inline std::string* SubscribeReply::mutable_data() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_data();
  // @@protoc_insertion_point(field_mutable:remote.SubscribeReply.data)
  return _s;
}
inline const std::string& SubscribeReply::_internal_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.data_.Get();
}
inline void SubscribeReply::_internal_set_data(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.Set(value, GetArena());
}
inline std::string* SubscribeReply::_internal_mutable_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.data_.Mutable( GetArena());
}
inline std::string* SubscribeReply::release_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:remote.SubscribeReply.data)
  return _impl_.data_.Release();
}
inline void SubscribeReply::set_allocated_data(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.data_.IsDefault()) {
          _impl_.data_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:remote.SubscribeReply.data)
}

// -------------------------------------------------------------------

// LogsFilterRequest

// bool all_addresses = 1;
inline void LogsFilterRequest::clear_all_addresses() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.all_addresses_ = false;
}
inline bool LogsFilterRequest::all_addresses() const {
  // @@protoc_insertion_point(field_get:remote.LogsFilterRequest.all_addresses)
  return _internal_all_addresses();
}
inline void LogsFilterRequest::set_all_addresses(bool value) {
  _internal_set_all_addresses(value);
  // @@protoc_insertion_point(field_set:remote.LogsFilterRequest.all_addresses)
}
inline bool LogsFilterRequest::_internal_all_addresses() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.all_addresses_;
}
inline void LogsFilterRequest::_internal_set_all_addresses(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.all_addresses_ = value;
}

// repeated .types.H160 addresses = 2;
inline int LogsFilterRequest::_internal_addresses_size() const {
  return _internal_addresses().size();
}
inline int LogsFilterRequest::addresses_size() const {
  return _internal_addresses_size();
}
inline ::types::H160* LogsFilterRequest::mutable_addresses(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:remote.LogsFilterRequest.addresses)
  return _internal_mutable_addresses()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::types::H160>* LogsFilterRequest::mutable_addresses()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:remote.LogsFilterRequest.addresses)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_addresses();
}
inline const ::types::H160& LogsFilterRequest::addresses(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:remote.LogsFilterRequest.addresses)
  return _internal_addresses().Get(index);
}
inline ::types::H160* LogsFilterRequest::add_addresses() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::types::H160* _add = _internal_mutable_addresses()->Add();
  // @@protoc_insertion_point(field_add:remote.LogsFilterRequest.addresses)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::types::H160>& LogsFilterRequest::addresses() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:remote.LogsFilterRequest.addresses)
  return _internal_addresses();
}
inline const ::google::protobuf::RepeatedPtrField<::types::H160>&
LogsFilterRequest::_internal_addresses() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.addresses_;
}
inline ::google::protobuf::RepeatedPtrField<::types::H160>*
LogsFilterRequest::_internal_mutable_addresses() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.addresses_;
}

// bool all_topics = 3;
inline void LogsFilterRequest::clear_all_topics() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.all_topics_ = false;
}
inline bool LogsFilterRequest::all_topics() const {
  // @@protoc_insertion_point(field_get:remote.LogsFilterRequest.all_topics)
  return _internal_all_topics();
}
inline void LogsFilterRequest::set_all_topics(bool value) {
  _internal_set_all_topics(value);
  // @@protoc_insertion_point(field_set:remote.LogsFilterRequest.all_topics)
}
inline bool LogsFilterRequest::_internal_all_topics() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.all_topics_;
}
inline void LogsFilterRequest::_internal_set_all_topics(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.all_topics_ = value;
}

// repeated .types.H256 topics = 4;
inline int LogsFilterRequest::_internal_topics_size() const {
  return _internal_topics().size();
}
inline int LogsFilterRequest::topics_size() const {
  return _internal_topics_size();
}
inline ::types::H256* LogsFilterRequest::mutable_topics(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:remote.LogsFilterRequest.topics)
  return _internal_mutable_topics()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::types::H256>* LogsFilterRequest::mutable_topics()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:remote.LogsFilterRequest.topics)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_topics();
}
inline const ::types::H256& LogsFilterRequest::topics(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:remote.LogsFilterRequest.topics)
  return _internal_topics().Get(index);
}
inline ::types::H256* LogsFilterRequest::add_topics() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::types::H256* _add = _internal_mutable_topics()->Add();
  // @@protoc_insertion_point(field_add:remote.LogsFilterRequest.topics)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::types::H256>& LogsFilterRequest::topics() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:remote.LogsFilterRequest.topics)
  return _internal_topics();
}
inline const ::google::protobuf::RepeatedPtrField<::types::H256>&
LogsFilterRequest::_internal_topics() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.topics_;
}
inline ::google::protobuf::RepeatedPtrField<::types::H256>*
LogsFilterRequest::_internal_mutable_topics() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.topics_;
}

// -------------------------------------------------------------------

// SubscribeLogsReply

// .types.H160 address = 1;
inline bool SubscribeLogsReply::has_address() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.address_ != nullptr);
  return value;
}
inline const ::types::H160& SubscribeLogsReply::_internal_address() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::types::H160* p = _impl_.address_;
  return p != nullptr ? *p : reinterpret_cast<const ::types::H160&>(::types::_H160_default_instance_);
}
inline const ::types::H160& SubscribeLogsReply::address() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:remote.SubscribeLogsReply.address)
  return _internal_address();
}
inline void SubscribeLogsReply::unsafe_arena_set_allocated_address(::types::H160* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.address_);
  }
  _impl_.address_ = reinterpret_cast<::types::H160*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:remote.SubscribeLogsReply.address)
}
inline ::types::H160* SubscribeLogsReply::release_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::types::H160* released = _impl_.address_;
  _impl_.address_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::types::H160* SubscribeLogsReply::unsafe_arena_release_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:remote.SubscribeLogsReply.address)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::types::H160* temp = _impl_.address_;
  _impl_.address_ = nullptr;
  return temp;
}
inline ::types::H160* SubscribeLogsReply::_internal_mutable_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.address_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::types::H160>(GetArena());
    _impl_.address_ = reinterpret_cast<::types::H160*>(p);
  }
  return _impl_.address_;
}
inline ::types::H160* SubscribeLogsReply::mutable_address() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::types::H160* _msg = _internal_mutable_address();
  // @@protoc_insertion_point(field_mutable:remote.SubscribeLogsReply.address)
  return _msg;
}
inline void SubscribeLogsReply::set_allocated_address(::types::H160* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.address_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.address_ = reinterpret_cast<::types::H160*>(value);
  // @@protoc_insertion_point(field_set_allocated:remote.SubscribeLogsReply.address)
}

// .types.H256 block_hash = 2;
inline bool SubscribeLogsReply::has_block_hash() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.block_hash_ != nullptr);
  return value;
}
inline const ::types::H256& SubscribeLogsReply::_internal_block_hash() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::types::H256* p = _impl_.block_hash_;
  return p != nullptr ? *p : reinterpret_cast<const ::types::H256&>(::types::_H256_default_instance_);
}
inline const ::types::H256& SubscribeLogsReply::block_hash() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:remote.SubscribeLogsReply.block_hash)
  return _internal_block_hash();
}
inline void SubscribeLogsReply::unsafe_arena_set_allocated_block_hash(::types::H256* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.block_hash_);
  }
  _impl_.block_hash_ = reinterpret_cast<::types::H256*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:remote.SubscribeLogsReply.block_hash)
}
inline ::types::H256* SubscribeLogsReply::release_block_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::types::H256* released = _impl_.block_hash_;
  _impl_.block_hash_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::types::H256* SubscribeLogsReply::unsafe_arena_release_block_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:remote.SubscribeLogsReply.block_hash)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::types::H256* temp = _impl_.block_hash_;
  _impl_.block_hash_ = nullptr;
  return temp;
}
inline ::types::H256* SubscribeLogsReply::_internal_mutable_block_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.block_hash_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::types::H256>(GetArena());
    _impl_.block_hash_ = reinterpret_cast<::types::H256*>(p);
  }
  return _impl_.block_hash_;
}
inline ::types::H256* SubscribeLogsReply::mutable_block_hash() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::types::H256* _msg = _internal_mutable_block_hash();
  // @@protoc_insertion_point(field_mutable:remote.SubscribeLogsReply.block_hash)
  return _msg;
}
inline void SubscribeLogsReply::set_allocated_block_hash(::types::H256* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.block_hash_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.block_hash_ = reinterpret_cast<::types::H256*>(value);
  // @@protoc_insertion_point(field_set_allocated:remote.SubscribeLogsReply.block_hash)
}

// uint64 block_number = 3;
inline void SubscribeLogsReply::clear_block_number() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.block_number_ = ::uint64_t{0u};
}
inline ::uint64_t SubscribeLogsReply::block_number() const {
  // @@protoc_insertion_point(field_get:remote.SubscribeLogsReply.block_number)
  return _internal_block_number();
}
inline void SubscribeLogsReply::set_block_number(::uint64_t value) {
  _internal_set_block_number(value);
  // @@protoc_insertion_point(field_set:remote.SubscribeLogsReply.block_number)
}
inline ::uint64_t SubscribeLogsReply::_internal_block_number() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.block_number_;
}
inline void SubscribeLogsReply::_internal_set_block_number(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.block_number_ = value;
}

// bytes data = 4;
inline void SubscribeLogsReply::clear_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.ClearToEmpty();
}
inline const std::string& SubscribeLogsReply::data() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:remote.SubscribeLogsReply.data)
  return _internal_data();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SubscribeLogsReply::set_data(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:remote.SubscribeLogsReply.data)
}
inline std::string* SubscribeLogsReply::mutable_data() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_data();
  // @@protoc_insertion_point(field_mutable:remote.SubscribeLogsReply.data)
  return _s;
}
inline const std::string& SubscribeLogsReply::_internal_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.data_.Get();
}
inline void SubscribeLogsReply::_internal_set_data(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.Set(value, GetArena());
}
inline std::string* SubscribeLogsReply::_internal_mutable_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.data_.Mutable( GetArena());
}
inline std::string* SubscribeLogsReply::release_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:remote.SubscribeLogsReply.data)
  return _impl_.data_.Release();
}
inline void SubscribeLogsReply::set_allocated_data(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.data_.IsDefault()) {
          _impl_.data_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:remote.SubscribeLogsReply.data)
}

// uint64 log_index = 5;
inline void SubscribeLogsReply::clear_log_index() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.log_index_ = ::uint64_t{0u};
}
inline ::uint64_t SubscribeLogsReply::log_index() const {
  // @@protoc_insertion_point(field_get:remote.SubscribeLogsReply.log_index)
  return _internal_log_index();
}
inline void SubscribeLogsReply::set_log_index(::uint64_t value) {
  _internal_set_log_index(value);
  // @@protoc_insertion_point(field_set:remote.SubscribeLogsReply.log_index)
}
inline ::uint64_t SubscribeLogsReply::_internal_log_index() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.log_index_;
}
inline void SubscribeLogsReply::_internal_set_log_index(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.log_index_ = value;
}

// repeated .types.H256 topics = 6;
inline int SubscribeLogsReply::_internal_topics_size() const {
  return _internal_topics().size();
}
inline int SubscribeLogsReply::topics_size() const {
  return _internal_topics_size();
}
inline ::types::H256* SubscribeLogsReply::mutable_topics(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:remote.SubscribeLogsReply.topics)
  return _internal_mutable_topics()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::types::H256>* SubscribeLogsReply::mutable_topics()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:remote.SubscribeLogsReply.topics)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_topics();
}
inline const ::types::H256& SubscribeLogsReply::topics(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:remote.SubscribeLogsReply.topics)
  return _internal_topics().Get(index);
}
inline ::types::H256* SubscribeLogsReply::add_topics() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::types::H256* _add = _internal_mutable_topics()->Add();
  // @@protoc_insertion_point(field_add:remote.SubscribeLogsReply.topics)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::types::H256>& SubscribeLogsReply::topics() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:remote.SubscribeLogsReply.topics)
  return _internal_topics();
}
inline const ::google::protobuf::RepeatedPtrField<::types::H256>&
SubscribeLogsReply::_internal_topics() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.topics_;
}
inline ::google::protobuf::RepeatedPtrField<::types::H256>*
SubscribeLogsReply::_internal_mutable_topics() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.topics_;
}

// .types.H256 transaction_hash = 7;
inline bool SubscribeLogsReply::has_transaction_hash() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.transaction_hash_ != nullptr);
  return value;
}
inline const ::types::H256& SubscribeLogsReply::_internal_transaction_hash() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::types::H256* p = _impl_.transaction_hash_;
  return p != nullptr ? *p : reinterpret_cast<const ::types::H256&>(::types::_H256_default_instance_);
}
inline const ::types::H256& SubscribeLogsReply::transaction_hash() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:remote.SubscribeLogsReply.transaction_hash)
  return _internal_transaction_hash();
}
inline void SubscribeLogsReply::unsafe_arena_set_allocated_transaction_hash(::types::H256* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.transaction_hash_);
  }
  _impl_.transaction_hash_ = reinterpret_cast<::types::H256*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:remote.SubscribeLogsReply.transaction_hash)
}
inline ::types::H256* SubscribeLogsReply::release_transaction_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::types::H256* released = _impl_.transaction_hash_;
  _impl_.transaction_hash_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::types::H256* SubscribeLogsReply::unsafe_arena_release_transaction_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:remote.SubscribeLogsReply.transaction_hash)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::types::H256* temp = _impl_.transaction_hash_;
  _impl_.transaction_hash_ = nullptr;
  return temp;
}
inline ::types::H256* SubscribeLogsReply::_internal_mutable_transaction_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.transaction_hash_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::types::H256>(GetArena());
    _impl_.transaction_hash_ = reinterpret_cast<::types::H256*>(p);
  }
  return _impl_.transaction_hash_;
}
inline ::types::H256* SubscribeLogsReply::mutable_transaction_hash() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::types::H256* _msg = _internal_mutable_transaction_hash();
  // @@protoc_insertion_point(field_mutable:remote.SubscribeLogsReply.transaction_hash)
  return _msg;
}
inline void SubscribeLogsReply::set_allocated_transaction_hash(::types::H256* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.transaction_hash_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.transaction_hash_ = reinterpret_cast<::types::H256*>(value);
  // @@protoc_insertion_point(field_set_allocated:remote.SubscribeLogsReply.transaction_hash)
}

// uint64 transaction_index = 8;
inline void SubscribeLogsReply::clear_transaction_index() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.transaction_index_ = ::uint64_t{0u};
}
inline ::uint64_t SubscribeLogsReply::transaction_index() const {
  // @@protoc_insertion_point(field_get:remote.SubscribeLogsReply.transaction_index)
  return _internal_transaction_index();
}
inline void SubscribeLogsReply::set_transaction_index(::uint64_t value) {
  _internal_set_transaction_index(value);
  // @@protoc_insertion_point(field_set:remote.SubscribeLogsReply.transaction_index)
}
inline ::uint64_t SubscribeLogsReply::_internal_transaction_index() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.transaction_index_;
}
inline void SubscribeLogsReply::_internal_set_transaction_index(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.transaction_index_ = value;
}

// bool removed = 9;
inline void SubscribeLogsReply::clear_removed() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.removed_ = false;
}
inline bool SubscribeLogsReply::removed() const {
  // @@protoc_insertion_point(field_get:remote.SubscribeLogsReply.removed)
  return _internal_removed();
}
inline void SubscribeLogsReply::set_removed(bool value) {
  _internal_set_removed(value);
  // @@protoc_insertion_point(field_set:remote.SubscribeLogsReply.removed)
}
inline bool SubscribeLogsReply::_internal_removed() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.removed_;
}
inline void SubscribeLogsReply::_internal_set_removed(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.removed_ = value;
}

// -------------------------------------------------------------------

// BlockRequest

// uint64 block_height = 2;
inline void BlockRequest::clear_block_height() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.block_height_ = ::uint64_t{0u};
}
inline ::uint64_t BlockRequest::block_height() const {
  // @@protoc_insertion_point(field_get:remote.BlockRequest.block_height)
  return _internal_block_height();
}
inline void BlockRequest::set_block_height(::uint64_t value) {
  _internal_set_block_height(value);
  // @@protoc_insertion_point(field_set:remote.BlockRequest.block_height)
}
inline ::uint64_t BlockRequest::_internal_block_height() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.block_height_;
}
inline void BlockRequest::_internal_set_block_height(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.block_height_ = value;
}

// .types.H256 block_hash = 3;
inline bool BlockRequest::has_block_hash() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.block_hash_ != nullptr);
  return value;
}
inline const ::types::H256& BlockRequest::_internal_block_hash() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::types::H256* p = _impl_.block_hash_;
  return p != nullptr ? *p : reinterpret_cast<const ::types::H256&>(::types::_H256_default_instance_);
}
inline const ::types::H256& BlockRequest::block_hash() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:remote.BlockRequest.block_hash)
  return _internal_block_hash();
}
inline void BlockRequest::unsafe_arena_set_allocated_block_hash(::types::H256* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.block_hash_);
  }
  _impl_.block_hash_ = reinterpret_cast<::types::H256*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:remote.BlockRequest.block_hash)
}
inline ::types::H256* BlockRequest::release_block_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::types::H256* released = _impl_.block_hash_;
  _impl_.block_hash_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::types::H256* BlockRequest::unsafe_arena_release_block_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:remote.BlockRequest.block_hash)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::types::H256* temp = _impl_.block_hash_;
  _impl_.block_hash_ = nullptr;
  return temp;
}
inline ::types::H256* BlockRequest::_internal_mutable_block_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.block_hash_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::types::H256>(GetArena());
    _impl_.block_hash_ = reinterpret_cast<::types::H256*>(p);
  }
  return _impl_.block_hash_;
}
inline ::types::H256* BlockRequest::mutable_block_hash() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::types::H256* _msg = _internal_mutable_block_hash();
  // @@protoc_insertion_point(field_mutable:remote.BlockRequest.block_hash)
  return _msg;
}
inline void BlockRequest::set_allocated_block_hash(::types::H256* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.block_hash_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.block_hash_ = reinterpret_cast<::types::H256*>(value);
  // @@protoc_insertion_point(field_set_allocated:remote.BlockRequest.block_hash)
}

// -------------------------------------------------------------------

// BlockReply

// bytes block_rlp = 1;
inline void BlockReply::clear_block_rlp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.block_rlp_.ClearToEmpty();
}
inline const std::string& BlockReply::block_rlp() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:remote.BlockReply.block_rlp)
  return _internal_block_rlp();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void BlockReply::set_block_rlp(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.block_rlp_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:remote.BlockReply.block_rlp)
}
inline std::string* BlockReply::mutable_block_rlp() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_block_rlp();
  // @@protoc_insertion_point(field_mutable:remote.BlockReply.block_rlp)
  return _s;
}
inline const std::string& BlockReply::_internal_block_rlp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.block_rlp_.Get();
}
inline void BlockReply::_internal_set_block_rlp(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.block_rlp_.Set(value, GetArena());
}
inline std::string* BlockReply::_internal_mutable_block_rlp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.block_rlp_.Mutable( GetArena());
}
inline std::string* BlockReply::release_block_rlp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:remote.BlockReply.block_rlp)
  return _impl_.block_rlp_.Release();
}
inline void BlockReply::set_allocated_block_rlp(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.block_rlp_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.block_rlp_.IsDefault()) {
          _impl_.block_rlp_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:remote.BlockReply.block_rlp)
}

// bytes senders = 2;
inline void BlockReply::clear_senders() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.senders_.ClearToEmpty();
}
inline const std::string& BlockReply::senders() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:remote.BlockReply.senders)
  return _internal_senders();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void BlockReply::set_senders(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.senders_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:remote.BlockReply.senders)
}
inline std::string* BlockReply::mutable_senders() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_senders();
  // @@protoc_insertion_point(field_mutable:remote.BlockReply.senders)
  return _s;
}
inline const std::string& BlockReply::_internal_senders() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.senders_.Get();
}
inline void BlockReply::_internal_set_senders(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.senders_.Set(value, GetArena());
}
inline std::string* BlockReply::_internal_mutable_senders() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.senders_.Mutable( GetArena());
}
inline std::string* BlockReply::release_senders() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:remote.BlockReply.senders)
  return _impl_.senders_.Release();
}
inline void BlockReply::set_allocated_senders(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.senders_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.senders_.IsDefault()) {
          _impl_.senders_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:remote.BlockReply.senders)
}

// -------------------------------------------------------------------

// TxnLookupRequest

// .types.H256 txn_hash = 1;
inline bool TxnLookupRequest::has_txn_hash() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.txn_hash_ != nullptr);
  return value;
}
inline const ::types::H256& TxnLookupRequest::_internal_txn_hash() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::types::H256* p = _impl_.txn_hash_;
  return p != nullptr ? *p : reinterpret_cast<const ::types::H256&>(::types::_H256_default_instance_);
}
inline const ::types::H256& TxnLookupRequest::txn_hash() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:remote.TxnLookupRequest.txn_hash)
  return _internal_txn_hash();
}
inline void TxnLookupRequest::unsafe_arena_set_allocated_txn_hash(::types::H256* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.txn_hash_);
  }
  _impl_.txn_hash_ = reinterpret_cast<::types::H256*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:remote.TxnLookupRequest.txn_hash)
}
inline ::types::H256* TxnLookupRequest::release_txn_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::types::H256* released = _impl_.txn_hash_;
  _impl_.txn_hash_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::types::H256* TxnLookupRequest::unsafe_arena_release_txn_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:remote.TxnLookupRequest.txn_hash)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::types::H256* temp = _impl_.txn_hash_;
  _impl_.txn_hash_ = nullptr;
  return temp;
}
inline ::types::H256* TxnLookupRequest::_internal_mutable_txn_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.txn_hash_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::types::H256>(GetArena());
    _impl_.txn_hash_ = reinterpret_cast<::types::H256*>(p);
  }
  return _impl_.txn_hash_;
}
inline ::types::H256* TxnLookupRequest::mutable_txn_hash() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::types::H256* _msg = _internal_mutable_txn_hash();
  // @@protoc_insertion_point(field_mutable:remote.TxnLookupRequest.txn_hash)
  return _msg;
}
inline void TxnLookupRequest::set_allocated_txn_hash(::types::H256* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.txn_hash_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.txn_hash_ = reinterpret_cast<::types::H256*>(value);
  // @@protoc_insertion_point(field_set_allocated:remote.TxnLookupRequest.txn_hash)
}

// -------------------------------------------------------------------

// TxnLookupReply

// uint64 block_number = 1;
inline void TxnLookupReply::clear_block_number() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.block_number_ = ::uint64_t{0u};
}
inline ::uint64_t TxnLookupReply::block_number() const {
  // @@protoc_insertion_point(field_get:remote.TxnLookupReply.block_number)
  return _internal_block_number();
}
inline void TxnLookupReply::set_block_number(::uint64_t value) {
  _internal_set_block_number(value);
  // @@protoc_insertion_point(field_set:remote.TxnLookupReply.block_number)
}
inline ::uint64_t TxnLookupReply::_internal_block_number() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.block_number_;
}
inline void TxnLookupReply::_internal_set_block_number(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.block_number_ = value;
}

// -------------------------------------------------------------------

// NodesInfoRequest

// uint32 limit = 1;
inline void NodesInfoRequest::clear_limit() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.limit_ = 0u;
}
inline ::uint32_t NodesInfoRequest::limit() const {
  // @@protoc_insertion_point(field_get:remote.NodesInfoRequest.limit)
  return _internal_limit();
}
inline void NodesInfoRequest::set_limit(::uint32_t value) {
  _internal_set_limit(value);
  // @@protoc_insertion_point(field_set:remote.NodesInfoRequest.limit)
}
inline ::uint32_t NodesInfoRequest::_internal_limit() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.limit_;
}
inline void NodesInfoRequest::_internal_set_limit(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.limit_ = value;
}

// -------------------------------------------------------------------

// AddPeerRequest

// string url = 1;
inline void AddPeerRequest::clear_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.url_.ClearToEmpty();
}
inline const std::string& AddPeerRequest::url() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:remote.AddPeerRequest.url)
  return _internal_url();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AddPeerRequest::set_url(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.url_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:remote.AddPeerRequest.url)
}
inline std::string* AddPeerRequest::mutable_url() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_url();
  // @@protoc_insertion_point(field_mutable:remote.AddPeerRequest.url)
  return _s;
}
inline const std::string& AddPeerRequest::_internal_url() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.url_.Get();
}
inline void AddPeerRequest::_internal_set_url(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.url_.Set(value, GetArena());
}
inline std::string* AddPeerRequest::_internal_mutable_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.url_.Mutable( GetArena());
}
inline std::string* AddPeerRequest::release_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:remote.AddPeerRequest.url)
  return _impl_.url_.Release();
}
inline void AddPeerRequest::set_allocated_url(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.url_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.url_.IsDefault()) {
          _impl_.url_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:remote.AddPeerRequest.url)
}

// -------------------------------------------------------------------

// NodesInfoReply

// repeated .types.NodeInfoReply nodes_info = 1;
inline int NodesInfoReply::_internal_nodes_info_size() const {
  return _internal_nodes_info().size();
}
inline int NodesInfoReply::nodes_info_size() const {
  return _internal_nodes_info_size();
}
inline ::types::NodeInfoReply* NodesInfoReply::mutable_nodes_info(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:remote.NodesInfoReply.nodes_info)
  return _internal_mutable_nodes_info()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::types::NodeInfoReply>* NodesInfoReply::mutable_nodes_info()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:remote.NodesInfoReply.nodes_info)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_nodes_info();
}
inline const ::types::NodeInfoReply& NodesInfoReply::nodes_info(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:remote.NodesInfoReply.nodes_info)
  return _internal_nodes_info().Get(index);
}
inline ::types::NodeInfoReply* NodesInfoReply::add_nodes_info() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::types::NodeInfoReply* _add = _internal_mutable_nodes_info()->Add();
  // @@protoc_insertion_point(field_add:remote.NodesInfoReply.nodes_info)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::types::NodeInfoReply>& NodesInfoReply::nodes_info() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:remote.NodesInfoReply.nodes_info)
  return _internal_nodes_info();
}
inline const ::google::protobuf::RepeatedPtrField<::types::NodeInfoReply>&
NodesInfoReply::_internal_nodes_info() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.nodes_info_;
}
inline ::google::protobuf::RepeatedPtrField<::types::NodeInfoReply>*
NodesInfoReply::_internal_mutable_nodes_info() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.nodes_info_;
}

// -------------------------------------------------------------------

// PeersReply

// repeated .types.PeerInfo peers = 1;
inline int PeersReply::_internal_peers_size() const {
  return _internal_peers().size();
}
inline int PeersReply::peers_size() const {
  return _internal_peers_size();
}
inline ::types::PeerInfo* PeersReply::mutable_peers(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:remote.PeersReply.peers)
  return _internal_mutable_peers()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::types::PeerInfo>* PeersReply::mutable_peers()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:remote.PeersReply.peers)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_peers();
}
inline const ::types::PeerInfo& PeersReply::peers(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:remote.PeersReply.peers)
  return _internal_peers().Get(index);
}
inline ::types::PeerInfo* PeersReply::add_peers() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::types::PeerInfo* _add = _internal_mutable_peers()->Add();
  // @@protoc_insertion_point(field_add:remote.PeersReply.peers)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::types::PeerInfo>& PeersReply::peers() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:remote.PeersReply.peers)
  return _internal_peers();
}
inline const ::google::protobuf::RepeatedPtrField<::types::PeerInfo>&
PeersReply::_internal_peers() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.peers_;
}
inline ::google::protobuf::RepeatedPtrField<::types::PeerInfo>*
PeersReply::_internal_mutable_peers() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.peers_;
}

// -------------------------------------------------------------------

// AddPeerReply

// bool success = 1;
inline void AddPeerReply::clear_success() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = false;
}
inline bool AddPeerReply::success() const {
  // @@protoc_insertion_point(field_get:remote.AddPeerReply.success)
  return _internal_success();
}
inline void AddPeerReply::set_success(bool value) {
  _internal_set_success(value);
  // @@protoc_insertion_point(field_set:remote.AddPeerReply.success)
}
inline bool AddPeerReply::_internal_success() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.success_;
}
inline void AddPeerReply::_internal_set_success(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = value;
}

// -------------------------------------------------------------------

// PendingBlockReply

// bytes block_rlp = 1;
inline void PendingBlockReply::clear_block_rlp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.block_rlp_.ClearToEmpty();
}
inline const std::string& PendingBlockReply::block_rlp() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:remote.PendingBlockReply.block_rlp)
  return _internal_block_rlp();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PendingBlockReply::set_block_rlp(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.block_rlp_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:remote.PendingBlockReply.block_rlp)
}
inline std::string* PendingBlockReply::mutable_block_rlp() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_block_rlp();
  // @@protoc_insertion_point(field_mutable:remote.PendingBlockReply.block_rlp)
  return _s;
}
inline const std::string& PendingBlockReply::_internal_block_rlp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.block_rlp_.Get();
}
inline void PendingBlockReply::_internal_set_block_rlp(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.block_rlp_.Set(value, GetArena());
}
inline std::string* PendingBlockReply::_internal_mutable_block_rlp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.block_rlp_.Mutable( GetArena());
}
inline std::string* PendingBlockReply::release_block_rlp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:remote.PendingBlockReply.block_rlp)
  return _impl_.block_rlp_.Release();
}
inline void PendingBlockReply::set_allocated_block_rlp(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.block_rlp_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.block_rlp_.IsDefault()) {
          _impl_.block_rlp_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:remote.PendingBlockReply.block_rlp)
}

// -------------------------------------------------------------------

// EngineGetPayloadBodiesByHashV1Request

// repeated .types.H256 hashes = 1;
inline int EngineGetPayloadBodiesByHashV1Request::_internal_hashes_size() const {
  return _internal_hashes().size();
}
inline int EngineGetPayloadBodiesByHashV1Request::hashes_size() const {
  return _internal_hashes_size();
}
inline ::types::H256* EngineGetPayloadBodiesByHashV1Request::mutable_hashes(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:remote.EngineGetPayloadBodiesByHashV1Request.hashes)
  return _internal_mutable_hashes()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::types::H256>* EngineGetPayloadBodiesByHashV1Request::mutable_hashes()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:remote.EngineGetPayloadBodiesByHashV1Request.hashes)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_hashes();
}
inline const ::types::H256& EngineGetPayloadBodiesByHashV1Request::hashes(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:remote.EngineGetPayloadBodiesByHashV1Request.hashes)
  return _internal_hashes().Get(index);
}
inline ::types::H256* EngineGetPayloadBodiesByHashV1Request::add_hashes() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::types::H256* _add = _internal_mutable_hashes()->Add();
  // @@protoc_insertion_point(field_add:remote.EngineGetPayloadBodiesByHashV1Request.hashes)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::types::H256>& EngineGetPayloadBodiesByHashV1Request::hashes() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:remote.EngineGetPayloadBodiesByHashV1Request.hashes)
  return _internal_hashes();
}
inline const ::google::protobuf::RepeatedPtrField<::types::H256>&
EngineGetPayloadBodiesByHashV1Request::_internal_hashes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.hashes_;
}
inline ::google::protobuf::RepeatedPtrField<::types::H256>*
EngineGetPayloadBodiesByHashV1Request::_internal_mutable_hashes() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.hashes_;
}

// -------------------------------------------------------------------

// EngineGetPayloadBodiesByRangeV1Request

// uint64 start = 1;
inline void EngineGetPayloadBodiesByRangeV1Request::clear_start() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.start_ = ::uint64_t{0u};
}
inline ::uint64_t EngineGetPayloadBodiesByRangeV1Request::start() const {
  // @@protoc_insertion_point(field_get:remote.EngineGetPayloadBodiesByRangeV1Request.start)
  return _internal_start();
}
inline void EngineGetPayloadBodiesByRangeV1Request::set_start(::uint64_t value) {
  _internal_set_start(value);
  // @@protoc_insertion_point(field_set:remote.EngineGetPayloadBodiesByRangeV1Request.start)
}
inline ::uint64_t EngineGetPayloadBodiesByRangeV1Request::_internal_start() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.start_;
}
inline void EngineGetPayloadBodiesByRangeV1Request::_internal_set_start(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.start_ = value;
}

// uint64 count = 2;
inline void EngineGetPayloadBodiesByRangeV1Request::clear_count() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.count_ = ::uint64_t{0u};
}
inline ::uint64_t EngineGetPayloadBodiesByRangeV1Request::count() const {
  // @@protoc_insertion_point(field_get:remote.EngineGetPayloadBodiesByRangeV1Request.count)
  return _internal_count();
}
inline void EngineGetPayloadBodiesByRangeV1Request::set_count(::uint64_t value) {
  _internal_set_count(value);
  // @@protoc_insertion_point(field_set:remote.EngineGetPayloadBodiesByRangeV1Request.count)
}
inline ::uint64_t EngineGetPayloadBodiesByRangeV1Request::_internal_count() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.count_;
}
inline void EngineGetPayloadBodiesByRangeV1Request::_internal_set_count(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.count_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace remote


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::remote::Event> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::remote::Event>() {
  return ::remote::Event_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_remote_2fethbackend_2eproto_2epb_2eh
