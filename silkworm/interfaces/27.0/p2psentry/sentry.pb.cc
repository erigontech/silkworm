// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: p2psentry/sentry.proto
// Protobuf C++ Version: 5.27.0

#include "p2psentry/sentry.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace sentry {
      template <typename>
PROTOBUF_CONSTEXPR SetStatusReply::SetStatusReply(::_pbi::ConstantInitialized) {}
struct SetStatusReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetStatusReplyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetStatusReplyDefaultTypeInternal() {}
  union {
    SetStatusReply _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetStatusReplyDefaultTypeInternal _SetStatusReply_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR PeerEventsRequest::PeerEventsRequest(::_pbi::ConstantInitialized) {}
struct PeerEventsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PeerEventsRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PeerEventsRequestDefaultTypeInternal() {}
  union {
    PeerEventsRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PeerEventsRequestDefaultTypeInternal _PeerEventsRequest_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR PeerCountRequest::PeerCountRequest(::_pbi::ConstantInitialized) {}
struct PeerCountRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PeerCountRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PeerCountRequestDefaultTypeInternal() {}
  union {
    PeerCountRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PeerCountRequestDefaultTypeInternal _PeerCountRequest_default_instance_;

inline constexpr PeerCountPerProtocol::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : count_{::uint64_t{0u}},
        protocol_{static_cast< ::sentry::Protocol >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PeerCountPerProtocol::PeerCountPerProtocol(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PeerCountPerProtocolDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PeerCountPerProtocolDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PeerCountPerProtocolDefaultTypeInternal() {}
  union {
    PeerCountPerProtocol _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PeerCountPerProtocolDefaultTypeInternal _PeerCountPerProtocol_default_instance_;

inline constexpr OutboundMessageData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : data_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        id_{static_cast< ::sentry::MessageId >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR OutboundMessageData::OutboundMessageData(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct OutboundMessageDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OutboundMessageDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OutboundMessageDataDefaultTypeInternal() {}
  union {
    OutboundMessageData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OutboundMessageDataDefaultTypeInternal _OutboundMessageData_default_instance_;

inline constexpr MessagesRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : ids_{},
        _ids_cached_byte_size_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR MessagesRequest::MessagesRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct MessagesRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MessagesRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MessagesRequestDefaultTypeInternal() {}
  union {
    MessagesRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MessagesRequestDefaultTypeInternal _MessagesRequest_default_instance_;

inline constexpr HandShakeReply::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : protocol_{static_cast< ::sentry::Protocol >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR HandShakeReply::HandShakeReply(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct HandShakeReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HandShakeReplyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~HandShakeReplyDefaultTypeInternal() {}
  union {
    HandShakeReply _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HandShakeReplyDefaultTypeInternal _HandShakeReply_default_instance_;

inline constexpr AddPeerRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : url_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR AddPeerRequest::AddPeerRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AddPeerRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AddPeerRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AddPeerRequestDefaultTypeInternal() {}
  union {
    AddPeerRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AddPeerRequestDefaultTypeInternal _AddPeerRequest_default_instance_;

inline constexpr AddPeerReply::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : success_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR AddPeerReply::AddPeerReply(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AddPeerReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AddPeerReplyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AddPeerReplyDefaultTypeInternal() {}
  union {
    AddPeerReply _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AddPeerReplyDefaultTypeInternal _AddPeerReply_default_instance_;

inline constexpr SendMessageToRandomPeersRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        data_{nullptr},
        max_peers_{::uint64_t{0u}} {}

template <typename>
PROTOBUF_CONSTEXPR SendMessageToRandomPeersRequest::SendMessageToRandomPeersRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SendMessageToRandomPeersRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SendMessageToRandomPeersRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SendMessageToRandomPeersRequestDefaultTypeInternal() {}
  union {
    SendMessageToRandomPeersRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SendMessageToRandomPeersRequestDefaultTypeInternal _SendMessageToRandomPeersRequest_default_instance_;

inline constexpr SendMessageByMinBlockRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        data_{nullptr},
        min_block_{::uint64_t{0u}},
        max_peers_{::uint64_t{0u}} {}

template <typename>
PROTOBUF_CONSTEXPR SendMessageByMinBlockRequest::SendMessageByMinBlockRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SendMessageByMinBlockRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SendMessageByMinBlockRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SendMessageByMinBlockRequestDefaultTypeInternal() {}
  union {
    SendMessageByMinBlockRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SendMessageByMinBlockRequestDefaultTypeInternal _SendMessageByMinBlockRequest_default_instance_;

inline constexpr PeersReply::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : peers_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PeersReply::PeersReply(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PeersReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PeersReplyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PeersReplyDefaultTypeInternal() {}
  union {
    PeersReply _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PeersReplyDefaultTypeInternal _PeersReply_default_instance_;

inline constexpr PeerCountReply::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : counts_per_protocol_{},
        count_{::uint64_t{0u}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PeerCountReply::PeerCountReply(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PeerCountReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PeerCountReplyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PeerCountReplyDefaultTypeInternal() {}
  union {
    PeerCountReply _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PeerCountReplyDefaultTypeInternal _PeerCountReply_default_instance_;

inline constexpr PeerByIdReply::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        peer_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR PeerByIdReply::PeerByIdReply(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PeerByIdReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PeerByIdReplyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PeerByIdReplyDefaultTypeInternal() {}
  union {
    PeerByIdReply _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PeerByIdReplyDefaultTypeInternal _PeerByIdReply_default_instance_;

inline constexpr Forks::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        height_forks_{},
        _height_forks_cached_byte_size_{0},
        time_forks_{},
        _time_forks_cached_byte_size_{0},
        genesis_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR Forks::Forks(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ForksDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ForksDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ForksDefaultTypeInternal() {}
  union {
    Forks _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ForksDefaultTypeInternal _Forks_default_instance_;

inline constexpr StatusData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        total_difficulty_{nullptr},
        best_hash_{nullptr},
        fork_data_{nullptr},
        network_id_{::uint64_t{0u}},
        max_block_height_{::uint64_t{0u}},
        max_block_time_{::uint64_t{0u}} {}

template <typename>
PROTOBUF_CONSTEXPR StatusData::StatusData(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct StatusDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StatusDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StatusDataDefaultTypeInternal() {}
  union {
    StatusData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StatusDataDefaultTypeInternal _StatusData_default_instance_;

inline constexpr SentPeers::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : peers_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SentPeers::SentPeers(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SentPeersDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SentPeersDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SentPeersDefaultTypeInternal() {}
  union {
    SentPeers _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SentPeersDefaultTypeInternal _SentPeers_default_instance_;

inline constexpr SendMessageByIdRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        data_{nullptr},
        peer_id_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SendMessageByIdRequest::SendMessageByIdRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SendMessageByIdRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SendMessageByIdRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SendMessageByIdRequestDefaultTypeInternal() {}
  union {
    SendMessageByIdRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SendMessageByIdRequestDefaultTypeInternal _SendMessageByIdRequest_default_instance_;

inline constexpr PenalizePeerRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        peer_id_{nullptr},
        penalty_{static_cast< ::sentry::PenaltyKind >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR PenalizePeerRequest::PenalizePeerRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PenalizePeerRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PenalizePeerRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PenalizePeerRequestDefaultTypeInternal() {}
  union {
    PenalizePeerRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PenalizePeerRequestDefaultTypeInternal _PenalizePeerRequest_default_instance_;

inline constexpr PeerMinBlockRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        peer_id_{nullptr},
        min_block_{::uint64_t{0u}} {}

template <typename>
PROTOBUF_CONSTEXPR PeerMinBlockRequest::PeerMinBlockRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PeerMinBlockRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PeerMinBlockRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PeerMinBlockRequestDefaultTypeInternal() {}
  union {
    PeerMinBlockRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PeerMinBlockRequestDefaultTypeInternal _PeerMinBlockRequest_default_instance_;

inline constexpr PeerEvent::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        peer_id_{nullptr},
        event_id_{static_cast< ::sentry::PeerEvent_PeerEventId >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR PeerEvent::PeerEvent(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PeerEventDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PeerEventDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PeerEventDefaultTypeInternal() {}
  union {
    PeerEvent _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PeerEventDefaultTypeInternal _PeerEvent_default_instance_;

inline constexpr PeerByIdRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        peer_id_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR PeerByIdRequest::PeerByIdRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PeerByIdRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PeerByIdRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PeerByIdRequestDefaultTypeInternal() {}
  union {
    PeerByIdRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PeerByIdRequestDefaultTypeInternal _PeerByIdRequest_default_instance_;

inline constexpr InboundMessage::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        data_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        peer_id_{nullptr},
        id_{static_cast< ::sentry::MessageId >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR InboundMessage::InboundMessage(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct InboundMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InboundMessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~InboundMessageDefaultTypeInternal() {}
  union {
    InboundMessage _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InboundMessageDefaultTypeInternal _InboundMessage_default_instance_;
}  // namespace sentry
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_p2psentry_2fsentry_2eproto[4];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_p2psentry_2fsentry_2eproto = nullptr;
const ::uint32_t
    TableStruct_p2psentry_2fsentry_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::sentry::OutboundMessageData, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::sentry::OutboundMessageData, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::sentry::OutboundMessageData, _impl_.data_),
        PROTOBUF_FIELD_OFFSET(::sentry::SendMessageByMinBlockRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::sentry::SendMessageByMinBlockRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::sentry::SendMessageByMinBlockRequest, _impl_.data_),
        PROTOBUF_FIELD_OFFSET(::sentry::SendMessageByMinBlockRequest, _impl_.min_block_),
        PROTOBUF_FIELD_OFFSET(::sentry::SendMessageByMinBlockRequest, _impl_.max_peers_),
        0,
        ~0u,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::sentry::SendMessageByIdRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::sentry::SendMessageByIdRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::sentry::SendMessageByIdRequest, _impl_.data_),
        PROTOBUF_FIELD_OFFSET(::sentry::SendMessageByIdRequest, _impl_.peer_id_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::sentry::SendMessageToRandomPeersRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::sentry::SendMessageToRandomPeersRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::sentry::SendMessageToRandomPeersRequest, _impl_.data_),
        PROTOBUF_FIELD_OFFSET(::sentry::SendMessageToRandomPeersRequest, _impl_.max_peers_),
        0,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::sentry::SentPeers, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::sentry::SentPeers, _impl_.peers_),
        PROTOBUF_FIELD_OFFSET(::sentry::PenalizePeerRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::sentry::PenalizePeerRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::sentry::PenalizePeerRequest, _impl_.peer_id_),
        PROTOBUF_FIELD_OFFSET(::sentry::PenalizePeerRequest, _impl_.penalty_),
        0,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::sentry::PeerMinBlockRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::sentry::PeerMinBlockRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::sentry::PeerMinBlockRequest, _impl_.peer_id_),
        PROTOBUF_FIELD_OFFSET(::sentry::PeerMinBlockRequest, _impl_.min_block_),
        0,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::sentry::AddPeerRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::sentry::AddPeerRequest, _impl_.url_),
        PROTOBUF_FIELD_OFFSET(::sentry::InboundMessage, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::sentry::InboundMessage, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::sentry::InboundMessage, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::sentry::InboundMessage, _impl_.data_),
        PROTOBUF_FIELD_OFFSET(::sentry::InboundMessage, _impl_.peer_id_),
        ~0u,
        ~0u,
        0,
        PROTOBUF_FIELD_OFFSET(::sentry::Forks, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::sentry::Forks, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::sentry::Forks, _impl_.genesis_),
        PROTOBUF_FIELD_OFFSET(::sentry::Forks, _impl_.height_forks_),
        PROTOBUF_FIELD_OFFSET(::sentry::Forks, _impl_.time_forks_),
        0,
        ~0u,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::sentry::StatusData, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::sentry::StatusData, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::sentry::StatusData, _impl_.network_id_),
        PROTOBUF_FIELD_OFFSET(::sentry::StatusData, _impl_.total_difficulty_),
        PROTOBUF_FIELD_OFFSET(::sentry::StatusData, _impl_.best_hash_),
        PROTOBUF_FIELD_OFFSET(::sentry::StatusData, _impl_.fork_data_),
        PROTOBUF_FIELD_OFFSET(::sentry::StatusData, _impl_.max_block_height_),
        PROTOBUF_FIELD_OFFSET(::sentry::StatusData, _impl_.max_block_time_),
        ~0u,
        0,
        1,
        2,
        ~0u,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::sentry::SetStatusReply, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::sentry::HandShakeReply, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::sentry::HandShakeReply, _impl_.protocol_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::sentry::MessagesRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::sentry::MessagesRequest, _impl_.ids_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::sentry::PeersReply, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::sentry::PeersReply, _impl_.peers_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::sentry::PeerCountRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::sentry::PeerCountPerProtocol, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::sentry::PeerCountPerProtocol, _impl_.protocol_),
        PROTOBUF_FIELD_OFFSET(::sentry::PeerCountPerProtocol, _impl_.count_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::sentry::PeerCountReply, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::sentry::PeerCountReply, _impl_.count_),
        PROTOBUF_FIELD_OFFSET(::sentry::PeerCountReply, _impl_.counts_per_protocol_),
        PROTOBUF_FIELD_OFFSET(::sentry::PeerByIdRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::sentry::PeerByIdRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::sentry::PeerByIdRequest, _impl_.peer_id_),
        0,
        PROTOBUF_FIELD_OFFSET(::sentry::PeerByIdReply, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::sentry::PeerByIdReply, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::sentry::PeerByIdReply, _impl_.peer_),
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::sentry::PeerEventsRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::sentry::PeerEvent, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::sentry::PeerEvent, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::sentry::PeerEvent, _impl_.peer_id_),
        PROTOBUF_FIELD_OFFSET(::sentry::PeerEvent, _impl_.event_id_),
        0,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::sentry::AddPeerReply, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::sentry::AddPeerReply, _impl_.success_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::sentry::OutboundMessageData)},
        {10, 21, -1, sizeof(::sentry::SendMessageByMinBlockRequest)},
        {24, 34, -1, sizeof(::sentry::SendMessageByIdRequest)},
        {36, 46, -1, sizeof(::sentry::SendMessageToRandomPeersRequest)},
        {48, -1, -1, sizeof(::sentry::SentPeers)},
        {57, 67, -1, sizeof(::sentry::PenalizePeerRequest)},
        {69, 79, -1, sizeof(::sentry::PeerMinBlockRequest)},
        {81, -1, -1, sizeof(::sentry::AddPeerRequest)},
        {90, 101, -1, sizeof(::sentry::InboundMessage)},
        {104, 115, -1, sizeof(::sentry::Forks)},
        {118, 132, -1, sizeof(::sentry::StatusData)},
        {138, -1, -1, sizeof(::sentry::SetStatusReply)},
        {146, -1, -1, sizeof(::sentry::HandShakeReply)},
        {155, -1, -1, sizeof(::sentry::MessagesRequest)},
        {164, -1, -1, sizeof(::sentry::PeersReply)},
        {173, -1, -1, sizeof(::sentry::PeerCountRequest)},
        {181, -1, -1, sizeof(::sentry::PeerCountPerProtocol)},
        {191, -1, -1, sizeof(::sentry::PeerCountReply)},
        {201, 210, -1, sizeof(::sentry::PeerByIdRequest)},
        {211, 220, -1, sizeof(::sentry::PeerByIdReply)},
        {221, -1, -1, sizeof(::sentry::PeerEventsRequest)},
        {229, 239, -1, sizeof(::sentry::PeerEvent)},
        {241, -1, -1, sizeof(::sentry::AddPeerReply)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::sentry::_OutboundMessageData_default_instance_._instance,
    &::sentry::_SendMessageByMinBlockRequest_default_instance_._instance,
    &::sentry::_SendMessageByIdRequest_default_instance_._instance,
    &::sentry::_SendMessageToRandomPeersRequest_default_instance_._instance,
    &::sentry::_SentPeers_default_instance_._instance,
    &::sentry::_PenalizePeerRequest_default_instance_._instance,
    &::sentry::_PeerMinBlockRequest_default_instance_._instance,
    &::sentry::_AddPeerRequest_default_instance_._instance,
    &::sentry::_InboundMessage_default_instance_._instance,
    &::sentry::_Forks_default_instance_._instance,
    &::sentry::_StatusData_default_instance_._instance,
    &::sentry::_SetStatusReply_default_instance_._instance,
    &::sentry::_HandShakeReply_default_instance_._instance,
    &::sentry::_MessagesRequest_default_instance_._instance,
    &::sentry::_PeersReply_default_instance_._instance,
    &::sentry::_PeerCountRequest_default_instance_._instance,
    &::sentry::_PeerCountPerProtocol_default_instance_._instance,
    &::sentry::_PeerCountReply_default_instance_._instance,
    &::sentry::_PeerByIdRequest_default_instance_._instance,
    &::sentry::_PeerByIdReply_default_instance_._instance,
    &::sentry::_PeerEventsRequest_default_instance_._instance,
    &::sentry::_PeerEvent_default_instance_._instance,
    &::sentry::_AddPeerReply_default_instance_._instance,
};
const char descriptor_table_protodef_p2psentry_2fsentry_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\026p2psentry/sentry.proto\022\006sentry\032\033google"
    "/protobuf/empty.proto\032\021types/types.proto"
    "\"B\n\023OutboundMessageData\022\035\n\002id\030\001 \001(\0162\021.se"
    "ntry.MessageId\022\014\n\004data\030\002 \001(\014\"o\n\034SendMess"
    "ageByMinBlockRequest\022)\n\004data\030\001 \001(\0132\033.sen"
    "try.OutboundMessageData\022\021\n\tmin_block\030\002 \001"
    "(\004\022\021\n\tmax_peers\030\003 \001(\004\"a\n\026SendMessageById"
    "Request\022)\n\004data\030\001 \001(\0132\033.sentry.OutboundM"
    "essageData\022\034\n\007peer_id\030\002 \001(\0132\013.types.H512"
    "\"_\n\037SendMessageToRandomPeersRequest\022)\n\004d"
    "ata\030\001 \001(\0132\033.sentry.OutboundMessageData\022\021"
    "\n\tmax_peers\030\002 \001(\004\"\'\n\tSentPeers\022\032\n\005peers\030"
    "\001 \003(\0132\013.types.H512\"Y\n\023PenalizePeerReques"
    "t\022\034\n\007peer_id\030\001 \001(\0132\013.types.H512\022$\n\007penal"
    "ty\030\002 \001(\0162\023.sentry.PenaltyKind\"F\n\023PeerMin"
    "BlockRequest\022\034\n\007peer_id\030\001 \001(\0132\013.types.H5"
    "12\022\021\n\tmin_block\030\002 \001(\004\"\035\n\016AddPeerRequest\022"
    "\013\n\003url\030\001 \001(\t\"[\n\016InboundMessage\022\035\n\002id\030\001 \001"
    "(\0162\021.sentry.MessageId\022\014\n\004data\030\002 \001(\014\022\034\n\007p"
    "eer_id\030\003 \001(\0132\013.types.H512\"O\n\005Forks\022\034\n\007ge"
    "nesis\030\001 \001(\0132\013.types.H256\022\024\n\014height_forks"
    "\030\002 \003(\004\022\022\n\ntime_forks\030\003 \003(\004\"\273\001\n\nStatusDat"
    "a\022\022\n\nnetwork_id\030\001 \001(\004\022%\n\020total_difficult"
    "y\030\002 \001(\0132\013.types.H256\022\036\n\tbest_hash\030\003 \001(\0132"
    "\013.types.H256\022 \n\tfork_data\030\004 \001(\0132\r.sentry"
    ".Forks\022\030\n\020max_block_height\030\005 \001(\004\022\026\n\016max_"
    "block_time\030\006 \001(\004\"\020\n\016SetStatusReply\"4\n\016Ha"
    "ndShakeReply\022\"\n\010protocol\030\001 \001(\0162\020.sentry."
    "Protocol\"1\n\017MessagesRequest\022\036\n\003ids\030\001 \003(\016"
    "2\021.sentry.MessageId\",\n\nPeersReply\022\036\n\005pee"
    "rs\030\001 \003(\0132\017.types.PeerInfo\"\022\n\020PeerCountRe"
    "quest\"I\n\024PeerCountPerProtocol\022\"\n\010protoco"
    "l\030\001 \001(\0162\020.sentry.Protocol\022\r\n\005count\030\002 \001(\004"
    "\"Z\n\016PeerCountReply\022\r\n\005count\030\001 \001(\004\0229\n\023cou"
    "nts_per_protocol\030\002 \003(\0132\034.sentry.PeerCoun"
    "tPerProtocol\"/\n\017PeerByIdRequest\022\034\n\007peer_"
    "id\030\001 \001(\0132\013.types.H512\"<\n\rPeerByIdReply\022\""
    "\n\004peer\030\001 \001(\0132\017.types.PeerInfoH\000\210\001\001B\007\n\005_p"
    "eer\"\023\n\021PeerEventsRequest\"\206\001\n\tPeerEvent\022\034"
    "\n\007peer_id\030\001 \001(\0132\013.types.H512\022/\n\010event_id"
    "\030\002 \001(\0162\035.sentry.PeerEvent.PeerEventId\"*\n"
    "\013PeerEventId\022\013\n\007Connect\020\000\022\016\n\nDisconnect\020"
    "\001\"\037\n\014AddPeerReply\022\017\n\007success\030\001 \001(\010*\200\006\n\tM"
    "essageId\022\r\n\tSTATUS_65\020\000\022\030\n\024GET_BLOCK_HEA"
    "DERS_65\020\001\022\024\n\020BLOCK_HEADERS_65\020\002\022\023\n\017BLOCK"
    "_HASHES_65\020\003\022\027\n\023GET_BLOCK_BODIES_65\020\004\022\023\n"
    "\017BLOCK_BODIES_65\020\005\022\024\n\020GET_NODE_DATA_65\020\006"
    "\022\020\n\014NODE_DATA_65\020\007\022\023\n\017GET_RECEIPTS_65\020\010\022"
    "\017\n\013RECEIPTS_65\020\t\022\027\n\023NEW_BLOCK_HASHES_65\020"
    "\n\022\020\n\014NEW_BLOCK_65\020\013\022\023\n\017TRANSACTIONS_65\020\014"
    "\022$\n NEW_POOLED_TRANSACTION_HASHES_65\020\r\022\036"
    "\n\032GET_POOLED_TRANSACTIONS_65\020\016\022\032\n\026POOLED"
    "_TRANSACTIONS_65\020\017\022\r\n\tSTATUS_66\020\021\022\027\n\023NEW"
    "_BLOCK_HASHES_66\020\022\022\020\n\014NEW_BLOCK_66\020\023\022\023\n\017"
    "TRANSACTIONS_66\020\024\022$\n NEW_POOLED_TRANSACT"
    "ION_HASHES_66\020\025\022\030\n\024GET_BLOCK_HEADERS_66\020"
    "\026\022\027\n\023GET_BLOCK_BODIES_66\020\027\022\024\n\020GET_NODE_D"
    "ATA_66\020\030\022\023\n\017GET_RECEIPTS_66\020\031\022\036\n\032GET_POO"
    "LED_TRANSACTIONS_66\020\032\022\024\n\020BLOCK_HEADERS_6"
    "6\020\033\022\023\n\017BLOCK_BODIES_66\020\034\022\020\n\014NODE_DATA_66"
    "\020\035\022\017\n\013RECEIPTS_66\020\036\022\032\n\026POOLED_TRANSACTIO"
    "NS_66\020\037\022$\n NEW_POOLED_TRANSACTION_HASHES"
    "_68\020 *\027\n\013PenaltyKind\022\010\n\004Kick\020\000*6\n\010Protoc"
    "ol\022\t\n\005ETH65\020\000\022\t\n\005ETH66\020\001\022\t\n\005ETH67\020\002\022\t\n\005E"
    "TH68\020\0032\334\007\n\006Sentry\0227\n\tSetStatus\022\022.sentry."
    "StatusData\032\026.sentry.SetStatusReply\022C\n\014Pe"
    "nalizePeer\022\033.sentry.PenalizePeerRequest\032"
    "\026.google.protobuf.Empty\022C\n\014PeerMinBlock\022"
    "\033.sentry.PeerMinBlockRequest\032\026.google.pr"
    "otobuf.Empty\022;\n\tHandShake\022\026.google.proto"
    "buf.Empty\032\026.sentry.HandShakeReply\022P\n\025Sen"
    "dMessageByMinBlock\022$.sentry.SendMessageB"
    "yMinBlockRequest\032\021.sentry.SentPeers\022D\n\017S"
    "endMessageById\022\036.sentry.SendMessageByIdR"
    "equest\032\021.sentry.SentPeers\022V\n\030SendMessage"
    "ToRandomPeers\022\'.sentry.SendMessageToRand"
    "omPeersRequest\032\021.sentry.SentPeers\022B\n\020Sen"
    "dMessageToAll\022\033.sentry.OutboundMessageDa"
    "ta\032\021.sentry.SentPeers\022=\n\010Messages\022\027.sent"
    "ry.MessagesRequest\032\026.sentry.InboundMessa"
    "ge0\001\0223\n\005Peers\022\026.google.protobuf.Empty\032\022."
    "sentry.PeersReply\022=\n\tPeerCount\022\030.sentry."
    "PeerCountRequest\032\026.sentry.PeerCountReply"
    "\022:\n\010PeerById\022\027.sentry.PeerByIdRequest\032\025."
    "sentry.PeerByIdReply\022<\n\nPeerEvents\022\031.sen"
    "try.PeerEventsRequest\032\021.sentry.PeerEvent"
    "0\001\0227\n\007AddPeer\022\026.sentry.AddPeerRequest\032\024."
    "sentry.AddPeerReply\0228\n\010NodeInfo\022\026.google"
    ".protobuf.Empty\032\024.types.NodeInfoReplyB\026Z"
    "\024./sentry;sentryprotob\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_p2psentry_2fsentry_2eproto_deps[2] =
    {
        &::descriptor_table_google_2fprotobuf_2fempty_2eproto,
        &::descriptor_table_types_2ftypes_2eproto,
};
static ::absl::once_flag descriptor_table_p2psentry_2fsentry_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_p2psentry_2fsentry_2eproto = {
    false,
    false,
    3589,
    descriptor_table_protodef_p2psentry_2fsentry_2eproto,
    "p2psentry/sentry.proto",
    &descriptor_table_p2psentry_2fsentry_2eproto_once,
    descriptor_table_p2psentry_2fsentry_2eproto_deps,
    2,
    23,
    schemas,
    file_default_instances,
    TableStruct_p2psentry_2fsentry_2eproto::offsets,
    file_level_enum_descriptors_p2psentry_2fsentry_2eproto,
    file_level_service_descriptors_p2psentry_2fsentry_2eproto,
};
namespace sentry {
const ::google::protobuf::EnumDescriptor* PeerEvent_PeerEventId_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_p2psentry_2fsentry_2eproto);
  return file_level_enum_descriptors_p2psentry_2fsentry_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t PeerEvent_PeerEventId_internal_data_[] = {
    131072u, 0u, };
bool PeerEvent_PeerEventId_IsValid(int value) {
  return 0 <= value && value <= 1;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr PeerEvent_PeerEventId PeerEvent::Connect;
constexpr PeerEvent_PeerEventId PeerEvent::Disconnect;
constexpr PeerEvent_PeerEventId PeerEvent::PeerEventId_MIN;
constexpr PeerEvent_PeerEventId PeerEvent::PeerEventId_MAX;
constexpr int PeerEvent::PeerEventId_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* MessageId_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_p2psentry_2fsentry_2eproto);
  return file_level_enum_descriptors_p2psentry_2fsentry_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t MessageId_internal_data_[] = {
    1048576u, 32u, 131070u, };
bool MessageId_IsValid(int value) {
  return 0 <= value && value <= 32 && ((8589869055u >> value) & 1) != 0;
}
const ::google::protobuf::EnumDescriptor* PenaltyKind_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_p2psentry_2fsentry_2eproto);
  return file_level_enum_descriptors_p2psentry_2fsentry_2eproto[2];
}
PROTOBUF_CONSTINIT const uint32_t PenaltyKind_internal_data_[] = {
    65536u, 0u, };
bool PenaltyKind_IsValid(int value) {
  return 0 <= value && value <= 0;
}
const ::google::protobuf::EnumDescriptor* Protocol_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_p2psentry_2fsentry_2eproto);
  return file_level_enum_descriptors_p2psentry_2fsentry_2eproto[3];
}
PROTOBUF_CONSTINIT const uint32_t Protocol_internal_data_[] = {
    262144u, 0u, };
bool Protocol_IsValid(int value) {
  return 0 <= value && value <= 3;
}
// ===================================================================

class OutboundMessageData::_Internal {
 public:
};

OutboundMessageData::OutboundMessageData(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sentry.OutboundMessageData)
}
inline PROTOBUF_NDEBUG_INLINE OutboundMessageData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::sentry::OutboundMessageData& from_msg)
      : data_(arena, from.data_),
        _cached_size_{0} {}

OutboundMessageData::OutboundMessageData(
    ::google::protobuf::Arena* arena,
    const OutboundMessageData& from)
    : ::google::protobuf::Message(arena) {
  OutboundMessageData* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.id_ = from._impl_.id_;

  // @@protoc_insertion_point(copy_constructor:sentry.OutboundMessageData)
}
inline PROTOBUF_NDEBUG_INLINE OutboundMessageData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : data_(arena),
        _cached_size_{0} {}

inline void OutboundMessageData::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.id_ = {};
}
OutboundMessageData::~OutboundMessageData() {
  // @@protoc_insertion_point(destructor:sentry.OutboundMessageData)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void OutboundMessageData::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.data_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
OutboundMessageData::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(OutboundMessageData, _impl_._cached_size_),
              false,
          },
          &OutboundMessageData::MergeImpl,
          &OutboundMessageData::kDescriptorMethods,
          &descriptor_table_p2psentry_2fsentry_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> OutboundMessageData::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_OutboundMessageData_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::sentry::OutboundMessageData>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bytes data = 2;
    {::_pbi::TcParser::FastBS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(OutboundMessageData, _impl_.data_)}},
    // .sentry.MessageId id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(OutboundMessageData, _impl_.id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(OutboundMessageData, _impl_.id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .sentry.MessageId id = 1;
    {PROTOBUF_FIELD_OFFSET(OutboundMessageData, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // bytes data = 2;
    {PROTOBUF_FIELD_OFFSET(OutboundMessageData, _impl_.data_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void OutboundMessageData::Clear() {
// @@protoc_insertion_point(message_clear_start:sentry.OutboundMessageData)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.data_.ClearToEmpty();
  _impl_.id_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* OutboundMessageData::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sentry.OutboundMessageData)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .sentry.MessageId id = 1;
  if (this->_internal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_id(), target);
  }

  // bytes data = 2;
  if (!this->_internal_data().empty()) {
    const std::string& _s = this->_internal_data();
    target = stream->WriteBytesMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sentry.OutboundMessageData)
  return target;
}

::size_t OutboundMessageData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sentry.OutboundMessageData)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // bytes data = 2;
  if (!this->_internal_data().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_data());
  }

  // .sentry.MessageId id = 1;
  if (this->_internal_id() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void OutboundMessageData::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<OutboundMessageData*>(&to_msg);
  auto& from = static_cast<const OutboundMessageData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:sentry.OutboundMessageData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_data().empty()) {
    _this->_internal_set_data(from._internal_data());
  }
  if (from._internal_id() != 0) {
    _this->_impl_.id_ = from._impl_.id_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void OutboundMessageData::CopyFrom(const OutboundMessageData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sentry.OutboundMessageData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void OutboundMessageData::InternalSwap(OutboundMessageData* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.data_, &other->_impl_.data_, arena);
  swap(_impl_.id_, other->_impl_.id_);
}

::google::protobuf::Metadata OutboundMessageData::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SendMessageByMinBlockRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<SendMessageByMinBlockRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SendMessageByMinBlockRequest, _impl_._has_bits_);
};

SendMessageByMinBlockRequest::SendMessageByMinBlockRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sentry.SendMessageByMinBlockRequest)
}
inline PROTOBUF_NDEBUG_INLINE SendMessageByMinBlockRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::sentry::SendMessageByMinBlockRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SendMessageByMinBlockRequest::SendMessageByMinBlockRequest(
    ::google::protobuf::Arena* arena,
    const SendMessageByMinBlockRequest& from)
    : ::google::protobuf::Message(arena) {
  SendMessageByMinBlockRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.data_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::sentry::OutboundMessageData>(
                              arena, *from._impl_.data_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, min_block_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, min_block_),
           offsetof(Impl_, max_peers_) -
               offsetof(Impl_, min_block_) +
               sizeof(Impl_::max_peers_));

  // @@protoc_insertion_point(copy_constructor:sentry.SendMessageByMinBlockRequest)
}
inline PROTOBUF_NDEBUG_INLINE SendMessageByMinBlockRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SendMessageByMinBlockRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, data_),
           0,
           offsetof(Impl_, max_peers_) -
               offsetof(Impl_, data_) +
               sizeof(Impl_::max_peers_));
}
SendMessageByMinBlockRequest::~SendMessageByMinBlockRequest() {
  // @@protoc_insertion_point(destructor:sentry.SendMessageByMinBlockRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SendMessageByMinBlockRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.data_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
SendMessageByMinBlockRequest::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(SendMessageByMinBlockRequest, _impl_._cached_size_),
              false,
          },
          &SendMessageByMinBlockRequest::MergeImpl,
          &SendMessageByMinBlockRequest::kDescriptorMethods,
          &descriptor_table_p2psentry_2fsentry_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 0, 2> SendMessageByMinBlockRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SendMessageByMinBlockRequest, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SendMessageByMinBlockRequest_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::sentry::SendMessageByMinBlockRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .sentry.OutboundMessageData data = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SendMessageByMinBlockRequest, _impl_.data_)}},
    // uint64 min_block = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(SendMessageByMinBlockRequest, _impl_.min_block_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(SendMessageByMinBlockRequest, _impl_.min_block_)}},
    // uint64 max_peers = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(SendMessageByMinBlockRequest, _impl_.max_peers_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(SendMessageByMinBlockRequest, _impl_.max_peers_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .sentry.OutboundMessageData data = 1;
    {PROTOBUF_FIELD_OFFSET(SendMessageByMinBlockRequest, _impl_.data_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint64 min_block = 2;
    {PROTOBUF_FIELD_OFFSET(SendMessageByMinBlockRequest, _impl_.min_block_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint64 max_peers = 3;
    {PROTOBUF_FIELD_OFFSET(SendMessageByMinBlockRequest, _impl_.max_peers_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }}, {{
    {::_pbi::TcParser::GetTable<::sentry::OutboundMessageData>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void SendMessageByMinBlockRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:sentry.SendMessageByMinBlockRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.data_ != nullptr);
    _impl_.data_->Clear();
  }
  ::memset(&_impl_.min_block_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.max_peers_) -
      reinterpret_cast<char*>(&_impl_.min_block_)) + sizeof(_impl_.max_peers_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* SendMessageByMinBlockRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sentry.SendMessageByMinBlockRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .sentry.OutboundMessageData data = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *_impl_.data_, _impl_.data_->GetCachedSize(), target, stream);
  }

  // uint64 min_block = 2;
  if (this->_internal_min_block() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        2, this->_internal_min_block(), target);
  }

  // uint64 max_peers = 3;
  if (this->_internal_max_peers() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        3, this->_internal_max_peers(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sentry.SendMessageByMinBlockRequest)
  return target;
}

::size_t SendMessageByMinBlockRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sentry.SendMessageByMinBlockRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // .sentry.OutboundMessageData data = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.data_);
  }

  // uint64 min_block = 2;
  if (this->_internal_min_block() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_min_block());
  }

  // uint64 max_peers = 3;
  if (this->_internal_max_peers() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_max_peers());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void SendMessageByMinBlockRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SendMessageByMinBlockRequest*>(&to_msg);
  auto& from = static_cast<const SendMessageByMinBlockRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:sentry.SendMessageByMinBlockRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.data_ != nullptr);
    if (_this->_impl_.data_ == nullptr) {
      _this->_impl_.data_ =
          ::google::protobuf::Message::CopyConstruct<::sentry::OutboundMessageData>(arena, *from._impl_.data_);
    } else {
      _this->_impl_.data_->MergeFrom(*from._impl_.data_);
    }
  }
  if (from._internal_min_block() != 0) {
    _this->_impl_.min_block_ = from._impl_.min_block_;
  }
  if (from._internal_max_peers() != 0) {
    _this->_impl_.max_peers_ = from._impl_.max_peers_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SendMessageByMinBlockRequest::CopyFrom(const SendMessageByMinBlockRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sentry.SendMessageByMinBlockRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SendMessageByMinBlockRequest::InternalSwap(SendMessageByMinBlockRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SendMessageByMinBlockRequest, _impl_.max_peers_)
      + sizeof(SendMessageByMinBlockRequest::_impl_.max_peers_)
      - PROTOBUF_FIELD_OFFSET(SendMessageByMinBlockRequest, _impl_.data_)>(
          reinterpret_cast<char*>(&_impl_.data_),
          reinterpret_cast<char*>(&other->_impl_.data_));
}

::google::protobuf::Metadata SendMessageByMinBlockRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SendMessageByIdRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<SendMessageByIdRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SendMessageByIdRequest, _impl_._has_bits_);
};

void SendMessageByIdRequest::clear_peer_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.peer_id_ != nullptr) _impl_.peer_id_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
SendMessageByIdRequest::SendMessageByIdRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sentry.SendMessageByIdRequest)
}
inline PROTOBUF_NDEBUG_INLINE SendMessageByIdRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::sentry::SendMessageByIdRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SendMessageByIdRequest::SendMessageByIdRequest(
    ::google::protobuf::Arena* arena,
    const SendMessageByIdRequest& from)
    : ::google::protobuf::Message(arena) {
  SendMessageByIdRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.data_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::sentry::OutboundMessageData>(
                              arena, *from._impl_.data_)
                        : nullptr;
  _impl_.peer_id_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::types::H512>(
                              arena, *from._impl_.peer_id_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:sentry.SendMessageByIdRequest)
}
inline PROTOBUF_NDEBUG_INLINE SendMessageByIdRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SendMessageByIdRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, data_),
           0,
           offsetof(Impl_, peer_id_) -
               offsetof(Impl_, data_) +
               sizeof(Impl_::peer_id_));
}
SendMessageByIdRequest::~SendMessageByIdRequest() {
  // @@protoc_insertion_point(destructor:sentry.SendMessageByIdRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SendMessageByIdRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.data_;
  delete _impl_.peer_id_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
SendMessageByIdRequest::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(SendMessageByIdRequest, _impl_._cached_size_),
              false,
          },
          &SendMessageByIdRequest::MergeImpl,
          &SendMessageByIdRequest::kDescriptorMethods,
          &descriptor_table_p2psentry_2fsentry_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> SendMessageByIdRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SendMessageByIdRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SendMessageByIdRequest_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::sentry::SendMessageByIdRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .types.H512 peer_id = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(SendMessageByIdRequest, _impl_.peer_id_)}},
    // .sentry.OutboundMessageData data = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SendMessageByIdRequest, _impl_.data_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .sentry.OutboundMessageData data = 1;
    {PROTOBUF_FIELD_OFFSET(SendMessageByIdRequest, _impl_.data_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .types.H512 peer_id = 2;
    {PROTOBUF_FIELD_OFFSET(SendMessageByIdRequest, _impl_.peer_id_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::sentry::OutboundMessageData>()},
    {::_pbi::TcParser::GetTable<::types::H512>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void SendMessageByIdRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:sentry.SendMessageByIdRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.data_ != nullptr);
      _impl_.data_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.peer_id_ != nullptr);
      _impl_.peer_id_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* SendMessageByIdRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sentry.SendMessageByIdRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .sentry.OutboundMessageData data = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *_impl_.data_, _impl_.data_->GetCachedSize(), target, stream);
  }

  // .types.H512 peer_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *_impl_.peer_id_, _impl_.peer_id_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sentry.SendMessageByIdRequest)
  return target;
}

::size_t SendMessageByIdRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sentry.SendMessageByIdRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .sentry.OutboundMessageData data = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.data_);
    }

    // .types.H512 peer_id = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.peer_id_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void SendMessageByIdRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SendMessageByIdRequest*>(&to_msg);
  auto& from = static_cast<const SendMessageByIdRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:sentry.SendMessageByIdRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.data_ != nullptr);
      if (_this->_impl_.data_ == nullptr) {
        _this->_impl_.data_ =
            ::google::protobuf::Message::CopyConstruct<::sentry::OutboundMessageData>(arena, *from._impl_.data_);
      } else {
        _this->_impl_.data_->MergeFrom(*from._impl_.data_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.peer_id_ != nullptr);
      if (_this->_impl_.peer_id_ == nullptr) {
        _this->_impl_.peer_id_ =
            ::google::protobuf::Message::CopyConstruct<::types::H512>(arena, *from._impl_.peer_id_);
      } else {
        _this->_impl_.peer_id_->MergeFrom(*from._impl_.peer_id_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SendMessageByIdRequest::CopyFrom(const SendMessageByIdRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sentry.SendMessageByIdRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SendMessageByIdRequest::InternalSwap(SendMessageByIdRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SendMessageByIdRequest, _impl_.peer_id_)
      + sizeof(SendMessageByIdRequest::_impl_.peer_id_)
      - PROTOBUF_FIELD_OFFSET(SendMessageByIdRequest, _impl_.data_)>(
          reinterpret_cast<char*>(&_impl_.data_),
          reinterpret_cast<char*>(&other->_impl_.data_));
}

::google::protobuf::Metadata SendMessageByIdRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SendMessageToRandomPeersRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<SendMessageToRandomPeersRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SendMessageToRandomPeersRequest, _impl_._has_bits_);
};

SendMessageToRandomPeersRequest::SendMessageToRandomPeersRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sentry.SendMessageToRandomPeersRequest)
}
inline PROTOBUF_NDEBUG_INLINE SendMessageToRandomPeersRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::sentry::SendMessageToRandomPeersRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SendMessageToRandomPeersRequest::SendMessageToRandomPeersRequest(
    ::google::protobuf::Arena* arena,
    const SendMessageToRandomPeersRequest& from)
    : ::google::protobuf::Message(arena) {
  SendMessageToRandomPeersRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.data_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::sentry::OutboundMessageData>(
                              arena, *from._impl_.data_)
                        : nullptr;
  _impl_.max_peers_ = from._impl_.max_peers_;

  // @@protoc_insertion_point(copy_constructor:sentry.SendMessageToRandomPeersRequest)
}
inline PROTOBUF_NDEBUG_INLINE SendMessageToRandomPeersRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SendMessageToRandomPeersRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, data_),
           0,
           offsetof(Impl_, max_peers_) -
               offsetof(Impl_, data_) +
               sizeof(Impl_::max_peers_));
}
SendMessageToRandomPeersRequest::~SendMessageToRandomPeersRequest() {
  // @@protoc_insertion_point(destructor:sentry.SendMessageToRandomPeersRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SendMessageToRandomPeersRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.data_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
SendMessageToRandomPeersRequest::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(SendMessageToRandomPeersRequest, _impl_._cached_size_),
              false,
          },
          &SendMessageToRandomPeersRequest::MergeImpl,
          &SendMessageToRandomPeersRequest::kDescriptorMethods,
          &descriptor_table_p2psentry_2fsentry_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> SendMessageToRandomPeersRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SendMessageToRandomPeersRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SendMessageToRandomPeersRequest_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::sentry::SendMessageToRandomPeersRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint64 max_peers = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(SendMessageToRandomPeersRequest, _impl_.max_peers_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(SendMessageToRandomPeersRequest, _impl_.max_peers_)}},
    // .sentry.OutboundMessageData data = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SendMessageToRandomPeersRequest, _impl_.data_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .sentry.OutboundMessageData data = 1;
    {PROTOBUF_FIELD_OFFSET(SendMessageToRandomPeersRequest, _impl_.data_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint64 max_peers = 2;
    {PROTOBUF_FIELD_OFFSET(SendMessageToRandomPeersRequest, _impl_.max_peers_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }}, {{
    {::_pbi::TcParser::GetTable<::sentry::OutboundMessageData>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void SendMessageToRandomPeersRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:sentry.SendMessageToRandomPeersRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.data_ != nullptr);
    _impl_.data_->Clear();
  }
  _impl_.max_peers_ = ::uint64_t{0u};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* SendMessageToRandomPeersRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sentry.SendMessageToRandomPeersRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .sentry.OutboundMessageData data = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *_impl_.data_, _impl_.data_->GetCachedSize(), target, stream);
  }

  // uint64 max_peers = 2;
  if (this->_internal_max_peers() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        2, this->_internal_max_peers(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sentry.SendMessageToRandomPeersRequest)
  return target;
}

::size_t SendMessageToRandomPeersRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sentry.SendMessageToRandomPeersRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // .sentry.OutboundMessageData data = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.data_);
  }

  // uint64 max_peers = 2;
  if (this->_internal_max_peers() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_max_peers());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void SendMessageToRandomPeersRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SendMessageToRandomPeersRequest*>(&to_msg);
  auto& from = static_cast<const SendMessageToRandomPeersRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:sentry.SendMessageToRandomPeersRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.data_ != nullptr);
    if (_this->_impl_.data_ == nullptr) {
      _this->_impl_.data_ =
          ::google::protobuf::Message::CopyConstruct<::sentry::OutboundMessageData>(arena, *from._impl_.data_);
    } else {
      _this->_impl_.data_->MergeFrom(*from._impl_.data_);
    }
  }
  if (from._internal_max_peers() != 0) {
    _this->_impl_.max_peers_ = from._impl_.max_peers_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SendMessageToRandomPeersRequest::CopyFrom(const SendMessageToRandomPeersRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sentry.SendMessageToRandomPeersRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SendMessageToRandomPeersRequest::InternalSwap(SendMessageToRandomPeersRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SendMessageToRandomPeersRequest, _impl_.max_peers_)
      + sizeof(SendMessageToRandomPeersRequest::_impl_.max_peers_)
      - PROTOBUF_FIELD_OFFSET(SendMessageToRandomPeersRequest, _impl_.data_)>(
          reinterpret_cast<char*>(&_impl_.data_),
          reinterpret_cast<char*>(&other->_impl_.data_));
}

::google::protobuf::Metadata SendMessageToRandomPeersRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SentPeers::_Internal {
 public:
};

void SentPeers::clear_peers() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.peers_.Clear();
}
SentPeers::SentPeers(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sentry.SentPeers)
}
inline PROTOBUF_NDEBUG_INLINE SentPeers::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::sentry::SentPeers& from_msg)
      : peers_{visibility, arena, from.peers_},
        _cached_size_{0} {}

SentPeers::SentPeers(
    ::google::protobuf::Arena* arena,
    const SentPeers& from)
    : ::google::protobuf::Message(arena) {
  SentPeers* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:sentry.SentPeers)
}
inline PROTOBUF_NDEBUG_INLINE SentPeers::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : peers_{visibility, arena},
        _cached_size_{0} {}

inline void SentPeers::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
SentPeers::~SentPeers() {
  // @@protoc_insertion_point(destructor:sentry.SentPeers)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SentPeers::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
SentPeers::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(SentPeers, _impl_._cached_size_),
              false,
          },
          &SentPeers::MergeImpl,
          &SentPeers::kDescriptorMethods,
          &descriptor_table_p2psentry_2fsentry_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> SentPeers::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SentPeers_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::sentry::SentPeers>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .types.H512 peers = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SentPeers, _impl_.peers_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .types.H512 peers = 1;
    {PROTOBUF_FIELD_OFFSET(SentPeers, _impl_.peers_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::types::H512>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void SentPeers::Clear() {
// @@protoc_insertion_point(message_clear_start:sentry.SentPeers)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.peers_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* SentPeers::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sentry.SentPeers)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .types.H512 peers = 1;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_peers_size());
       i < n; i++) {
    const auto& repfield = this->_internal_peers().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sentry.SentPeers)
  return target;
}

::size_t SentPeers::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sentry.SentPeers)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated .types.H512 peers = 1;
  total_size += 1UL * this->_internal_peers_size();
  for (const auto& msg : this->_internal_peers()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void SentPeers::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SentPeers*>(&to_msg);
  auto& from = static_cast<const SentPeers&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:sentry.SentPeers)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_peers()->MergeFrom(
      from._internal_peers());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SentPeers::CopyFrom(const SentPeers& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sentry.SentPeers)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SentPeers::InternalSwap(SentPeers* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.peers_.InternalSwap(&other->_impl_.peers_);
}

::google::protobuf::Metadata SentPeers::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PenalizePeerRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<PenalizePeerRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PenalizePeerRequest, _impl_._has_bits_);
};

void PenalizePeerRequest::clear_peer_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.peer_id_ != nullptr) _impl_.peer_id_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
PenalizePeerRequest::PenalizePeerRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sentry.PenalizePeerRequest)
}
inline PROTOBUF_NDEBUG_INLINE PenalizePeerRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::sentry::PenalizePeerRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

PenalizePeerRequest::PenalizePeerRequest(
    ::google::protobuf::Arena* arena,
    const PenalizePeerRequest& from)
    : ::google::protobuf::Message(arena) {
  PenalizePeerRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.peer_id_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::types::H512>(
                              arena, *from._impl_.peer_id_)
                        : nullptr;
  _impl_.penalty_ = from._impl_.penalty_;

  // @@protoc_insertion_point(copy_constructor:sentry.PenalizePeerRequest)
}
inline PROTOBUF_NDEBUG_INLINE PenalizePeerRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void PenalizePeerRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, peer_id_),
           0,
           offsetof(Impl_, penalty_) -
               offsetof(Impl_, peer_id_) +
               sizeof(Impl_::penalty_));
}
PenalizePeerRequest::~PenalizePeerRequest() {
  // @@protoc_insertion_point(destructor:sentry.PenalizePeerRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PenalizePeerRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.peer_id_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
PenalizePeerRequest::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(PenalizePeerRequest, _impl_._cached_size_),
              false,
          },
          &PenalizePeerRequest::MergeImpl,
          &PenalizePeerRequest::kDescriptorMethods,
          &descriptor_table_p2psentry_2fsentry_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> PenalizePeerRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PenalizePeerRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_PenalizePeerRequest_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::sentry::PenalizePeerRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .sentry.PenaltyKind penalty = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PenalizePeerRequest, _impl_.penalty_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(PenalizePeerRequest, _impl_.penalty_)}},
    // .types.H512 peer_id = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(PenalizePeerRequest, _impl_.peer_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .types.H512 peer_id = 1;
    {PROTOBUF_FIELD_OFFSET(PenalizePeerRequest, _impl_.peer_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .sentry.PenaltyKind penalty = 2;
    {PROTOBUF_FIELD_OFFSET(PenalizePeerRequest, _impl_.penalty_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }}, {{
    {::_pbi::TcParser::GetTable<::types::H512>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void PenalizePeerRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:sentry.PenalizePeerRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.peer_id_ != nullptr);
    _impl_.peer_id_->Clear();
  }
  _impl_.penalty_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* PenalizePeerRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sentry.PenalizePeerRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .types.H512 peer_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *_impl_.peer_id_, _impl_.peer_id_->GetCachedSize(), target, stream);
  }

  // .sentry.PenaltyKind penalty = 2;
  if (this->_internal_penalty() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_penalty(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sentry.PenalizePeerRequest)
  return target;
}

::size_t PenalizePeerRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sentry.PenalizePeerRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // .types.H512 peer_id = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.peer_id_);
  }

  // .sentry.PenaltyKind penalty = 2;
  if (this->_internal_penalty() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_penalty());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void PenalizePeerRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PenalizePeerRequest*>(&to_msg);
  auto& from = static_cast<const PenalizePeerRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:sentry.PenalizePeerRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.peer_id_ != nullptr);
    if (_this->_impl_.peer_id_ == nullptr) {
      _this->_impl_.peer_id_ =
          ::google::protobuf::Message::CopyConstruct<::types::H512>(arena, *from._impl_.peer_id_);
    } else {
      _this->_impl_.peer_id_->MergeFrom(*from._impl_.peer_id_);
    }
  }
  if (from._internal_penalty() != 0) {
    _this->_impl_.penalty_ = from._impl_.penalty_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PenalizePeerRequest::CopyFrom(const PenalizePeerRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sentry.PenalizePeerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PenalizePeerRequest::InternalSwap(PenalizePeerRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PenalizePeerRequest, _impl_.penalty_)
      + sizeof(PenalizePeerRequest::_impl_.penalty_)
      - PROTOBUF_FIELD_OFFSET(PenalizePeerRequest, _impl_.peer_id_)>(
          reinterpret_cast<char*>(&_impl_.peer_id_),
          reinterpret_cast<char*>(&other->_impl_.peer_id_));
}

::google::protobuf::Metadata PenalizePeerRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PeerMinBlockRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<PeerMinBlockRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PeerMinBlockRequest, _impl_._has_bits_);
};

void PeerMinBlockRequest::clear_peer_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.peer_id_ != nullptr) _impl_.peer_id_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
PeerMinBlockRequest::PeerMinBlockRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sentry.PeerMinBlockRequest)
}
inline PROTOBUF_NDEBUG_INLINE PeerMinBlockRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::sentry::PeerMinBlockRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

PeerMinBlockRequest::PeerMinBlockRequest(
    ::google::protobuf::Arena* arena,
    const PeerMinBlockRequest& from)
    : ::google::protobuf::Message(arena) {
  PeerMinBlockRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.peer_id_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::types::H512>(
                              arena, *from._impl_.peer_id_)
                        : nullptr;
  _impl_.min_block_ = from._impl_.min_block_;

  // @@protoc_insertion_point(copy_constructor:sentry.PeerMinBlockRequest)
}
inline PROTOBUF_NDEBUG_INLINE PeerMinBlockRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void PeerMinBlockRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, peer_id_),
           0,
           offsetof(Impl_, min_block_) -
               offsetof(Impl_, peer_id_) +
               sizeof(Impl_::min_block_));
}
PeerMinBlockRequest::~PeerMinBlockRequest() {
  // @@protoc_insertion_point(destructor:sentry.PeerMinBlockRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PeerMinBlockRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.peer_id_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
PeerMinBlockRequest::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(PeerMinBlockRequest, _impl_._cached_size_),
              false,
          },
          &PeerMinBlockRequest::MergeImpl,
          &PeerMinBlockRequest::kDescriptorMethods,
          &descriptor_table_p2psentry_2fsentry_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> PeerMinBlockRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PeerMinBlockRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_PeerMinBlockRequest_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::sentry::PeerMinBlockRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint64 min_block = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(PeerMinBlockRequest, _impl_.min_block_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(PeerMinBlockRequest, _impl_.min_block_)}},
    // .types.H512 peer_id = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(PeerMinBlockRequest, _impl_.peer_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .types.H512 peer_id = 1;
    {PROTOBUF_FIELD_OFFSET(PeerMinBlockRequest, _impl_.peer_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint64 min_block = 2;
    {PROTOBUF_FIELD_OFFSET(PeerMinBlockRequest, _impl_.min_block_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }}, {{
    {::_pbi::TcParser::GetTable<::types::H512>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void PeerMinBlockRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:sentry.PeerMinBlockRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.peer_id_ != nullptr);
    _impl_.peer_id_->Clear();
  }
  _impl_.min_block_ = ::uint64_t{0u};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* PeerMinBlockRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sentry.PeerMinBlockRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .types.H512 peer_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *_impl_.peer_id_, _impl_.peer_id_->GetCachedSize(), target, stream);
  }

  // uint64 min_block = 2;
  if (this->_internal_min_block() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        2, this->_internal_min_block(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sentry.PeerMinBlockRequest)
  return target;
}

::size_t PeerMinBlockRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sentry.PeerMinBlockRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // .types.H512 peer_id = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.peer_id_);
  }

  // uint64 min_block = 2;
  if (this->_internal_min_block() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_min_block());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void PeerMinBlockRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PeerMinBlockRequest*>(&to_msg);
  auto& from = static_cast<const PeerMinBlockRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:sentry.PeerMinBlockRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.peer_id_ != nullptr);
    if (_this->_impl_.peer_id_ == nullptr) {
      _this->_impl_.peer_id_ =
          ::google::protobuf::Message::CopyConstruct<::types::H512>(arena, *from._impl_.peer_id_);
    } else {
      _this->_impl_.peer_id_->MergeFrom(*from._impl_.peer_id_);
    }
  }
  if (from._internal_min_block() != 0) {
    _this->_impl_.min_block_ = from._impl_.min_block_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PeerMinBlockRequest::CopyFrom(const PeerMinBlockRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sentry.PeerMinBlockRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PeerMinBlockRequest::InternalSwap(PeerMinBlockRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PeerMinBlockRequest, _impl_.min_block_)
      + sizeof(PeerMinBlockRequest::_impl_.min_block_)
      - PROTOBUF_FIELD_OFFSET(PeerMinBlockRequest, _impl_.peer_id_)>(
          reinterpret_cast<char*>(&_impl_.peer_id_),
          reinterpret_cast<char*>(&other->_impl_.peer_id_));
}

::google::protobuf::Metadata PeerMinBlockRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class AddPeerRequest::_Internal {
 public:
};

AddPeerRequest::AddPeerRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sentry.AddPeerRequest)
}
inline PROTOBUF_NDEBUG_INLINE AddPeerRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::sentry::AddPeerRequest& from_msg)
      : url_(arena, from.url_),
        _cached_size_{0} {}

AddPeerRequest::AddPeerRequest(
    ::google::protobuf::Arena* arena,
    const AddPeerRequest& from)
    : ::google::protobuf::Message(arena) {
  AddPeerRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:sentry.AddPeerRequest)
}
inline PROTOBUF_NDEBUG_INLINE AddPeerRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : url_(arena),
        _cached_size_{0} {}

inline void AddPeerRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
AddPeerRequest::~AddPeerRequest() {
  // @@protoc_insertion_point(destructor:sentry.AddPeerRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AddPeerRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.url_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
AddPeerRequest::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(AddPeerRequest, _impl_._cached_size_),
              false,
          },
          &AddPeerRequest::MergeImpl,
          &AddPeerRequest::kDescriptorMethods,
          &descriptor_table_p2psentry_2fsentry_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 33, 2> AddPeerRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_AddPeerRequest_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::sentry::AddPeerRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string url = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(AddPeerRequest, _impl_.url_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string url = 1;
    {PROTOBUF_FIELD_OFFSET(AddPeerRequest, _impl_.url_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\25\3\0\0\0\0\0\0"
    "sentry.AddPeerRequest"
    "url"
  }},
};

PROTOBUF_NOINLINE void AddPeerRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:sentry.AddPeerRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.url_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* AddPeerRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sentry.AddPeerRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string url = 1;
  if (!this->_internal_url().empty()) {
    const std::string& _s = this->_internal_url();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "sentry.AddPeerRequest.url");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sentry.AddPeerRequest)
  return target;
}

::size_t AddPeerRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sentry.AddPeerRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string url = 1;
  if (!this->_internal_url().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_url());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void AddPeerRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AddPeerRequest*>(&to_msg);
  auto& from = static_cast<const AddPeerRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:sentry.AddPeerRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_url().empty()) {
    _this->_internal_set_url(from._internal_url());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AddPeerRequest::CopyFrom(const AddPeerRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sentry.AddPeerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AddPeerRequest::InternalSwap(AddPeerRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.url_, &other->_impl_.url_, arena);
}

::google::protobuf::Metadata AddPeerRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class InboundMessage::_Internal {
 public:
  using HasBits =
      decltype(std::declval<InboundMessage>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(InboundMessage, _impl_._has_bits_);
};

void InboundMessage::clear_peer_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.peer_id_ != nullptr) _impl_.peer_id_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
InboundMessage::InboundMessage(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sentry.InboundMessage)
}
inline PROTOBUF_NDEBUG_INLINE InboundMessage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::sentry::InboundMessage& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        data_(arena, from.data_) {}

InboundMessage::InboundMessage(
    ::google::protobuf::Arena* arena,
    const InboundMessage& from)
    : ::google::protobuf::Message(arena) {
  InboundMessage* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.peer_id_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::types::H512>(
                              arena, *from._impl_.peer_id_)
                        : nullptr;
  _impl_.id_ = from._impl_.id_;

  // @@protoc_insertion_point(copy_constructor:sentry.InboundMessage)
}
inline PROTOBUF_NDEBUG_INLINE InboundMessage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        data_(arena) {}

inline void InboundMessage::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, peer_id_),
           0,
           offsetof(Impl_, id_) -
               offsetof(Impl_, peer_id_) +
               sizeof(Impl_::id_));
}
InboundMessage::~InboundMessage() {
  // @@protoc_insertion_point(destructor:sentry.InboundMessage)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void InboundMessage::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.data_.Destroy();
  delete _impl_.peer_id_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
InboundMessage::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(InboundMessage, _impl_._cached_size_),
              false,
          },
          &InboundMessage::MergeImpl,
          &InboundMessage::kDescriptorMethods,
          &descriptor_table_p2psentry_2fsentry_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 0, 2> InboundMessage::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(InboundMessage, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_InboundMessage_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::sentry::InboundMessage>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .sentry.MessageId id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(InboundMessage, _impl_.id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(InboundMessage, _impl_.id_)}},
    // bytes data = 2;
    {::_pbi::TcParser::FastBS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(InboundMessage, _impl_.data_)}},
    // .types.H512 peer_id = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(InboundMessage, _impl_.peer_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .sentry.MessageId id = 1;
    {PROTOBUF_FIELD_OFFSET(InboundMessage, _impl_.id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // bytes data = 2;
    {PROTOBUF_FIELD_OFFSET(InboundMessage, _impl_.data_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // .types.H512 peer_id = 3;
    {PROTOBUF_FIELD_OFFSET(InboundMessage, _impl_.peer_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::types::H512>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void InboundMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:sentry.InboundMessage)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.data_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.peer_id_ != nullptr);
    _impl_.peer_id_->Clear();
  }
  _impl_.id_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* InboundMessage::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sentry.InboundMessage)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .sentry.MessageId id = 1;
  if (this->_internal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_id(), target);
  }

  // bytes data = 2;
  if (!this->_internal_data().empty()) {
    const std::string& _s = this->_internal_data();
    target = stream->WriteBytesMaybeAliased(2, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .types.H512 peer_id = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *_impl_.peer_id_, _impl_.peer_id_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sentry.InboundMessage)
  return target;
}

::size_t InboundMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sentry.InboundMessage)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // bytes data = 2;
  if (!this->_internal_data().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_data());
  }

  // .types.H512 peer_id = 3;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.peer_id_);
  }

  // .sentry.MessageId id = 1;
  if (this->_internal_id() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void InboundMessage::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<InboundMessage*>(&to_msg);
  auto& from = static_cast<const InboundMessage&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:sentry.InboundMessage)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_data().empty()) {
    _this->_internal_set_data(from._internal_data());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.peer_id_ != nullptr);
    if (_this->_impl_.peer_id_ == nullptr) {
      _this->_impl_.peer_id_ =
          ::google::protobuf::Message::CopyConstruct<::types::H512>(arena, *from._impl_.peer_id_);
    } else {
      _this->_impl_.peer_id_->MergeFrom(*from._impl_.peer_id_);
    }
  }
  if (from._internal_id() != 0) {
    _this->_impl_.id_ = from._impl_.id_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void InboundMessage::CopyFrom(const InboundMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sentry.InboundMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void InboundMessage::InternalSwap(InboundMessage* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.data_, &other->_impl_.data_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(InboundMessage, _impl_.id_)
      + sizeof(InboundMessage::_impl_.id_)
      - PROTOBUF_FIELD_OFFSET(InboundMessage, _impl_.peer_id_)>(
          reinterpret_cast<char*>(&_impl_.peer_id_),
          reinterpret_cast<char*>(&other->_impl_.peer_id_));
}

::google::protobuf::Metadata InboundMessage::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Forks::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Forks>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Forks, _impl_._has_bits_);
};

void Forks::clear_genesis() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.genesis_ != nullptr) _impl_.genesis_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
Forks::Forks(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sentry.Forks)
}
inline PROTOBUF_NDEBUG_INLINE Forks::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::sentry::Forks& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        height_forks_{visibility, arena, from.height_forks_},
        _height_forks_cached_byte_size_{0},
        time_forks_{visibility, arena, from.time_forks_},
        _time_forks_cached_byte_size_{0} {}

Forks::Forks(
    ::google::protobuf::Arena* arena,
    const Forks& from)
    : ::google::protobuf::Message(arena) {
  Forks* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.genesis_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::types::H256>(
                              arena, *from._impl_.genesis_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:sentry.Forks)
}
inline PROTOBUF_NDEBUG_INLINE Forks::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        height_forks_{visibility, arena},
        _height_forks_cached_byte_size_{0},
        time_forks_{visibility, arena},
        _time_forks_cached_byte_size_{0} {}

inline void Forks::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.genesis_ = {};
}
Forks::~Forks() {
  // @@protoc_insertion_point(destructor:sentry.Forks)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Forks::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.genesis_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Forks::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(Forks, _impl_._cached_size_),
              false,
          },
          &Forks::MergeImpl,
          &Forks::kDescriptorMethods,
          &descriptor_table_p2psentry_2fsentry_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 0, 2> Forks::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Forks, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Forks_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::sentry::Forks>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .types.H256 genesis = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Forks, _impl_.genesis_)}},
    // repeated uint64 height_forks = 2;
    {::_pbi::TcParser::FastV64P1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Forks, _impl_.height_forks_)}},
    // repeated uint64 time_forks = 3;
    {::_pbi::TcParser::FastV64P1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Forks, _impl_.time_forks_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .types.H256 genesis = 1;
    {PROTOBUF_FIELD_OFFSET(Forks, _impl_.genesis_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated uint64 height_forks = 2;
    {PROTOBUF_FIELD_OFFSET(Forks, _impl_.height_forks_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedUInt64)},
    // repeated uint64 time_forks = 3;
    {PROTOBUF_FIELD_OFFSET(Forks, _impl_.time_forks_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedUInt64)},
  }}, {{
    {::_pbi::TcParser::GetTable<::types::H256>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Forks::Clear() {
// @@protoc_insertion_point(message_clear_start:sentry.Forks)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.height_forks_.Clear();
  _impl_.time_forks_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.genesis_ != nullptr);
    _impl_.genesis_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* Forks::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sentry.Forks)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .types.H256 genesis = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *_impl_.genesis_, _impl_.genesis_->GetCachedSize(), target, stream);
  }

  // repeated uint64 height_forks = 2;
  {
    int byte_size = _impl_._height_forks_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteUInt64Packed(
          2, _internal_height_forks(), byte_size, target);
    }
  }

  // repeated uint64 time_forks = 3;
  {
    int byte_size = _impl_._time_forks_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteUInt64Packed(
          3, _internal_time_forks(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sentry.Forks)
  return target;
}

::size_t Forks::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sentry.Forks)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated uint64 height_forks = 2;
  {
    std::size_t data_size = ::_pbi::WireFormatLite::UInt64Size(
        this->_internal_height_forks())
    ;
    _impl_._height_forks_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated uint64 time_forks = 3;
  {
    std::size_t data_size = ::_pbi::WireFormatLite::UInt64Size(
        this->_internal_time_forks())
    ;
    _impl_._time_forks_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // .types.H256 genesis = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.genesis_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Forks::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Forks*>(&to_msg);
  auto& from = static_cast<const Forks&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:sentry.Forks)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_height_forks()->MergeFrom(from._internal_height_forks());
  _this->_internal_mutable_time_forks()->MergeFrom(from._internal_time_forks());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.genesis_ != nullptr);
    if (_this->_impl_.genesis_ == nullptr) {
      _this->_impl_.genesis_ =
          ::google::protobuf::Message::CopyConstruct<::types::H256>(arena, *from._impl_.genesis_);
    } else {
      _this->_impl_.genesis_->MergeFrom(*from._impl_.genesis_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Forks::CopyFrom(const Forks& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sentry.Forks)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Forks::InternalSwap(Forks* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.height_forks_.InternalSwap(&other->_impl_.height_forks_);
  _impl_.time_forks_.InternalSwap(&other->_impl_.time_forks_);
  swap(_impl_.genesis_, other->_impl_.genesis_);
}

::google::protobuf::Metadata Forks::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class StatusData::_Internal {
 public:
  using HasBits =
      decltype(std::declval<StatusData>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(StatusData, _impl_._has_bits_);
};

void StatusData::clear_total_difficulty() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.total_difficulty_ != nullptr) _impl_.total_difficulty_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void StatusData::clear_best_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.best_hash_ != nullptr) _impl_.best_hash_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
StatusData::StatusData(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sentry.StatusData)
}
inline PROTOBUF_NDEBUG_INLINE StatusData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::sentry::StatusData& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

StatusData::StatusData(
    ::google::protobuf::Arena* arena,
    const StatusData& from)
    : ::google::protobuf::Message(arena) {
  StatusData* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.total_difficulty_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::types::H256>(
                              arena, *from._impl_.total_difficulty_)
                        : nullptr;
  _impl_.best_hash_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::types::H256>(
                              arena, *from._impl_.best_hash_)
                        : nullptr;
  _impl_.fork_data_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::sentry::Forks>(
                              arena, *from._impl_.fork_data_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, network_id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, network_id_),
           offsetof(Impl_, max_block_time_) -
               offsetof(Impl_, network_id_) +
               sizeof(Impl_::max_block_time_));

  // @@protoc_insertion_point(copy_constructor:sentry.StatusData)
}
inline PROTOBUF_NDEBUG_INLINE StatusData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void StatusData::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, total_difficulty_),
           0,
           offsetof(Impl_, max_block_time_) -
               offsetof(Impl_, total_difficulty_) +
               sizeof(Impl_::max_block_time_));
}
StatusData::~StatusData() {
  // @@protoc_insertion_point(destructor:sentry.StatusData)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void StatusData::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.total_difficulty_;
  delete _impl_.best_hash_;
  delete _impl_.fork_data_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
StatusData::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(StatusData, _impl_._cached_size_),
              false,
          },
          &StatusData::MergeImpl,
          &StatusData::kDescriptorMethods,
          &descriptor_table_p2psentry_2fsentry_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 3, 0, 2> StatusData::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(StatusData, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_StatusData_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::sentry::StatusData>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint64 network_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(StatusData, _impl_.network_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(StatusData, _impl_.network_id_)}},
    // .types.H256 total_difficulty = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(StatusData, _impl_.total_difficulty_)}},
    // .types.H256 best_hash = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 1, PROTOBUF_FIELD_OFFSET(StatusData, _impl_.best_hash_)}},
    // .sentry.Forks fork_data = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 2, 2, PROTOBUF_FIELD_OFFSET(StatusData, _impl_.fork_data_)}},
    // uint64 max_block_height = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(StatusData, _impl_.max_block_height_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(StatusData, _impl_.max_block_height_)}},
    // uint64 max_block_time = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(StatusData, _impl_.max_block_time_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(StatusData, _impl_.max_block_time_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 network_id = 1;
    {PROTOBUF_FIELD_OFFSET(StatusData, _impl_.network_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // .types.H256 total_difficulty = 2;
    {PROTOBUF_FIELD_OFFSET(StatusData, _impl_.total_difficulty_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .types.H256 best_hash = 3;
    {PROTOBUF_FIELD_OFFSET(StatusData, _impl_.best_hash_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .sentry.Forks fork_data = 4;
    {PROTOBUF_FIELD_OFFSET(StatusData, _impl_.fork_data_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint64 max_block_height = 5;
    {PROTOBUF_FIELD_OFFSET(StatusData, _impl_.max_block_height_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint64 max_block_time = 6;
    {PROTOBUF_FIELD_OFFSET(StatusData, _impl_.max_block_time_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }}, {{
    {::_pbi::TcParser::GetTable<::types::H256>()},
    {::_pbi::TcParser::GetTable<::types::H256>()},
    {::_pbi::TcParser::GetTable<::sentry::Forks>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void StatusData::Clear() {
// @@protoc_insertion_point(message_clear_start:sentry.StatusData)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.total_difficulty_ != nullptr);
      _impl_.total_difficulty_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.best_hash_ != nullptr);
      _impl_.best_hash_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.fork_data_ != nullptr);
      _impl_.fork_data_->Clear();
    }
  }
  ::memset(&_impl_.network_id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.max_block_time_) -
      reinterpret_cast<char*>(&_impl_.network_id_)) + sizeof(_impl_.max_block_time_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* StatusData::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sentry.StatusData)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint64 network_id = 1;
  if (this->_internal_network_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this->_internal_network_id(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .types.H256 total_difficulty = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *_impl_.total_difficulty_, _impl_.total_difficulty_->GetCachedSize(), target, stream);
  }

  // .types.H256 best_hash = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *_impl_.best_hash_, _impl_.best_hash_->GetCachedSize(), target, stream);
  }

  // .sentry.Forks fork_data = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *_impl_.fork_data_, _impl_.fork_data_->GetCachedSize(), target, stream);
  }

  // uint64 max_block_height = 5;
  if (this->_internal_max_block_height() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        5, this->_internal_max_block_height(), target);
  }

  // uint64 max_block_time = 6;
  if (this->_internal_max_block_time() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        6, this->_internal_max_block_time(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sentry.StatusData)
  return target;
}

::size_t StatusData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sentry.StatusData)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // .types.H256 total_difficulty = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.total_difficulty_);
    }

    // .types.H256 best_hash = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.best_hash_);
    }

    // .sentry.Forks fork_data = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.fork_data_);
    }

  }
  // uint64 network_id = 1;
  if (this->_internal_network_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_network_id());
  }

  // uint64 max_block_height = 5;
  if (this->_internal_max_block_height() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_max_block_height());
  }

  // uint64 max_block_time = 6;
  if (this->_internal_max_block_time() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_max_block_time());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void StatusData::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<StatusData*>(&to_msg);
  auto& from = static_cast<const StatusData&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:sentry.StatusData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.total_difficulty_ != nullptr);
      if (_this->_impl_.total_difficulty_ == nullptr) {
        _this->_impl_.total_difficulty_ =
            ::google::protobuf::Message::CopyConstruct<::types::H256>(arena, *from._impl_.total_difficulty_);
      } else {
        _this->_impl_.total_difficulty_->MergeFrom(*from._impl_.total_difficulty_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.best_hash_ != nullptr);
      if (_this->_impl_.best_hash_ == nullptr) {
        _this->_impl_.best_hash_ =
            ::google::protobuf::Message::CopyConstruct<::types::H256>(arena, *from._impl_.best_hash_);
      } else {
        _this->_impl_.best_hash_->MergeFrom(*from._impl_.best_hash_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.fork_data_ != nullptr);
      if (_this->_impl_.fork_data_ == nullptr) {
        _this->_impl_.fork_data_ =
            ::google::protobuf::Message::CopyConstruct<::sentry::Forks>(arena, *from._impl_.fork_data_);
      } else {
        _this->_impl_.fork_data_->MergeFrom(*from._impl_.fork_data_);
      }
    }
  }
  if (from._internal_network_id() != 0) {
    _this->_impl_.network_id_ = from._impl_.network_id_;
  }
  if (from._internal_max_block_height() != 0) {
    _this->_impl_.max_block_height_ = from._impl_.max_block_height_;
  }
  if (from._internal_max_block_time() != 0) {
    _this->_impl_.max_block_time_ = from._impl_.max_block_time_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void StatusData::CopyFrom(const StatusData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sentry.StatusData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void StatusData::InternalSwap(StatusData* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(StatusData, _impl_.max_block_time_)
      + sizeof(StatusData::_impl_.max_block_time_)
      - PROTOBUF_FIELD_OFFSET(StatusData, _impl_.total_difficulty_)>(
          reinterpret_cast<char*>(&_impl_.total_difficulty_),
          reinterpret_cast<char*>(&other->_impl_.total_difficulty_));
}

::google::protobuf::Metadata StatusData::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SetStatusReply::_Internal {
 public:
};

SetStatusReply::SetStatusReply(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:sentry.SetStatusReply)
}
SetStatusReply::SetStatusReply(
    ::google::protobuf::Arena* arena,
    const SetStatusReply& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  SetStatusReply* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:sentry.SetStatusReply)
}

const ::google::protobuf::MessageLite::ClassData*
SetStatusReply::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(SetStatusReply, _impl_._cached_size_),
              false,
          },
          &SetStatusReply::MergeImpl,
          &SetStatusReply::kDescriptorMethods,
          &descriptor_table_p2psentry_2fsentry_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> SetStatusReply::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SetStatusReply_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::sentry::SetStatusReply>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};









::google::protobuf::Metadata SetStatusReply::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class HandShakeReply::_Internal {
 public:
};

HandShakeReply::HandShakeReply(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sentry.HandShakeReply)
}
HandShakeReply::HandShakeReply(
    ::google::protobuf::Arena* arena, const HandShakeReply& from)
    : HandShakeReply(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE HandShakeReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void HandShakeReply::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.protocol_ = {};
}
HandShakeReply::~HandShakeReply() {
  // @@protoc_insertion_point(destructor:sentry.HandShakeReply)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void HandShakeReply::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
HandShakeReply::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(HandShakeReply, _impl_._cached_size_),
              false,
          },
          &HandShakeReply::MergeImpl,
          &HandShakeReply::kDescriptorMethods,
          &descriptor_table_p2psentry_2fsentry_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> HandShakeReply::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_HandShakeReply_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::sentry::HandShakeReply>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .sentry.Protocol protocol = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(HandShakeReply, _impl_.protocol_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(HandShakeReply, _impl_.protocol_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .sentry.Protocol protocol = 1;
    {PROTOBUF_FIELD_OFFSET(HandShakeReply, _impl_.protocol_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void HandShakeReply::Clear() {
// @@protoc_insertion_point(message_clear_start:sentry.HandShakeReply)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.protocol_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* HandShakeReply::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sentry.HandShakeReply)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .sentry.Protocol protocol = 1;
  if (this->_internal_protocol() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_protocol(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sentry.HandShakeReply)
  return target;
}

::size_t HandShakeReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sentry.HandShakeReply)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .sentry.Protocol protocol = 1;
  if (this->_internal_protocol() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_protocol());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void HandShakeReply::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<HandShakeReply*>(&to_msg);
  auto& from = static_cast<const HandShakeReply&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:sentry.HandShakeReply)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_protocol() != 0) {
    _this->_impl_.protocol_ = from._impl_.protocol_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void HandShakeReply::CopyFrom(const HandShakeReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sentry.HandShakeReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void HandShakeReply::InternalSwap(HandShakeReply* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.protocol_, other->_impl_.protocol_);
}

::google::protobuf::Metadata HandShakeReply::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class MessagesRequest::_Internal {
 public:
};

MessagesRequest::MessagesRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sentry.MessagesRequest)
}
inline PROTOBUF_NDEBUG_INLINE MessagesRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::sentry::MessagesRequest& from_msg)
      : ids_{visibility, arena, from.ids_},
        _ids_cached_byte_size_{0},
        _cached_size_{0} {}

MessagesRequest::MessagesRequest(
    ::google::protobuf::Arena* arena,
    const MessagesRequest& from)
    : ::google::protobuf::Message(arena) {
  MessagesRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:sentry.MessagesRequest)
}
inline PROTOBUF_NDEBUG_INLINE MessagesRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : ids_{visibility, arena},
        _ids_cached_byte_size_{0},
        _cached_size_{0} {}

inline void MessagesRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
MessagesRequest::~MessagesRequest() {
  // @@protoc_insertion_point(destructor:sentry.MessagesRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void MessagesRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
MessagesRequest::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(MessagesRequest, _impl_._cached_size_),
              false,
          },
          &MessagesRequest::MergeImpl,
          &MessagesRequest::kDescriptorMethods,
          &descriptor_table_p2psentry_2fsentry_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> MessagesRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_MessagesRequest_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::sentry::MessagesRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .sentry.MessageId ids = 1;
    {::_pbi::TcParser::FastV32P1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(MessagesRequest, _impl_.ids_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .sentry.MessageId ids = 1;
    {PROTOBUF_FIELD_OFFSET(MessagesRequest, _impl_.ids_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void MessagesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:sentry.MessagesRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ids_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* MessagesRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sentry.MessagesRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .sentry.MessageId ids = 1;
  {
    std::size_t byte_size = _impl_._ids_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(1, _internal_ids(),
                                       byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sentry.MessagesRequest)
  return target;
}

::size_t MessagesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sentry.MessagesRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated .sentry.MessageId ids = 1;
  {
    std::size_t data_size = 0;
    auto count = static_cast<std::size_t>(this->_internal_ids_size());

    for (std::size_t i = 0; i < count; ++i) {
      data_size += ::_pbi::WireFormatLite::EnumSize(
          this->_internal_ids().Get(static_cast<int>(i)));
    }
    total_size += data_size;
    if (data_size > 0) {
      total_size += 1;
      total_size += ::_pbi::WireFormatLite::Int32Size(
          static_cast<int32_t>(data_size));
    }
    _impl_._ids_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void MessagesRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MessagesRequest*>(&to_msg);
  auto& from = static_cast<const MessagesRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:sentry.MessagesRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_ids()->MergeFrom(from._internal_ids());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MessagesRequest::CopyFrom(const MessagesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sentry.MessagesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MessagesRequest::InternalSwap(MessagesRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.ids_.InternalSwap(&other->_impl_.ids_);
}

::google::protobuf::Metadata MessagesRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PeersReply::_Internal {
 public:
};

void PeersReply::clear_peers() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.peers_.Clear();
}
PeersReply::PeersReply(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sentry.PeersReply)
}
inline PROTOBUF_NDEBUG_INLINE PeersReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::sentry::PeersReply& from_msg)
      : peers_{visibility, arena, from.peers_},
        _cached_size_{0} {}

PeersReply::PeersReply(
    ::google::protobuf::Arena* arena,
    const PeersReply& from)
    : ::google::protobuf::Message(arena) {
  PeersReply* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:sentry.PeersReply)
}
inline PROTOBUF_NDEBUG_INLINE PeersReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : peers_{visibility, arena},
        _cached_size_{0} {}

inline void PeersReply::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
PeersReply::~PeersReply() {
  // @@protoc_insertion_point(destructor:sentry.PeersReply)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PeersReply::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
PeersReply::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(PeersReply, _impl_._cached_size_),
              false,
          },
          &PeersReply::MergeImpl,
          &PeersReply::kDescriptorMethods,
          &descriptor_table_p2psentry_2fsentry_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> PeersReply::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_PeersReply_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::sentry::PeersReply>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .types.PeerInfo peers = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PeersReply, _impl_.peers_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .types.PeerInfo peers = 1;
    {PROTOBUF_FIELD_OFFSET(PeersReply, _impl_.peers_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::types::PeerInfo>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void PeersReply::Clear() {
// @@protoc_insertion_point(message_clear_start:sentry.PeersReply)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.peers_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* PeersReply::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sentry.PeersReply)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .types.PeerInfo peers = 1;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_peers_size());
       i < n; i++) {
    const auto& repfield = this->_internal_peers().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sentry.PeersReply)
  return target;
}

::size_t PeersReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sentry.PeersReply)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated .types.PeerInfo peers = 1;
  total_size += 1UL * this->_internal_peers_size();
  for (const auto& msg : this->_internal_peers()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void PeersReply::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PeersReply*>(&to_msg);
  auto& from = static_cast<const PeersReply&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:sentry.PeersReply)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_peers()->MergeFrom(
      from._internal_peers());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PeersReply::CopyFrom(const PeersReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sentry.PeersReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PeersReply::InternalSwap(PeersReply* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.peers_.InternalSwap(&other->_impl_.peers_);
}

::google::protobuf::Metadata PeersReply::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PeerCountRequest::_Internal {
 public:
};

PeerCountRequest::PeerCountRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:sentry.PeerCountRequest)
}
PeerCountRequest::PeerCountRequest(
    ::google::protobuf::Arena* arena,
    const PeerCountRequest& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  PeerCountRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:sentry.PeerCountRequest)
}

const ::google::protobuf::MessageLite::ClassData*
PeerCountRequest::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(PeerCountRequest, _impl_._cached_size_),
              false,
          },
          &PeerCountRequest::MergeImpl,
          &PeerCountRequest::kDescriptorMethods,
          &descriptor_table_p2psentry_2fsentry_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> PeerCountRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_PeerCountRequest_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::sentry::PeerCountRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};









::google::protobuf::Metadata PeerCountRequest::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PeerCountPerProtocol::_Internal {
 public:
};

PeerCountPerProtocol::PeerCountPerProtocol(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sentry.PeerCountPerProtocol)
}
PeerCountPerProtocol::PeerCountPerProtocol(
    ::google::protobuf::Arena* arena, const PeerCountPerProtocol& from)
    : PeerCountPerProtocol(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE PeerCountPerProtocol::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void PeerCountPerProtocol::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, count_),
           0,
           offsetof(Impl_, protocol_) -
               offsetof(Impl_, count_) +
               sizeof(Impl_::protocol_));
}
PeerCountPerProtocol::~PeerCountPerProtocol() {
  // @@protoc_insertion_point(destructor:sentry.PeerCountPerProtocol)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PeerCountPerProtocol::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
PeerCountPerProtocol::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(PeerCountPerProtocol, _impl_._cached_size_),
              false,
          },
          &PeerCountPerProtocol::MergeImpl,
          &PeerCountPerProtocol::kDescriptorMethods,
          &descriptor_table_p2psentry_2fsentry_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> PeerCountPerProtocol::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_PeerCountPerProtocol_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::sentry::PeerCountPerProtocol>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint64 count = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(PeerCountPerProtocol, _impl_.count_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(PeerCountPerProtocol, _impl_.count_)}},
    // .sentry.Protocol protocol = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PeerCountPerProtocol, _impl_.protocol_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(PeerCountPerProtocol, _impl_.protocol_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .sentry.Protocol protocol = 1;
    {PROTOBUF_FIELD_OFFSET(PeerCountPerProtocol, _impl_.protocol_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // uint64 count = 2;
    {PROTOBUF_FIELD_OFFSET(PeerCountPerProtocol, _impl_.count_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void PeerCountPerProtocol::Clear() {
// @@protoc_insertion_point(message_clear_start:sentry.PeerCountPerProtocol)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.count_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.protocol_) -
      reinterpret_cast<char*>(&_impl_.count_)) + sizeof(_impl_.protocol_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* PeerCountPerProtocol::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sentry.PeerCountPerProtocol)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .sentry.Protocol protocol = 1;
  if (this->_internal_protocol() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_protocol(), target);
  }

  // uint64 count = 2;
  if (this->_internal_count() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        2, this->_internal_count(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sentry.PeerCountPerProtocol)
  return target;
}

::size_t PeerCountPerProtocol::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sentry.PeerCountPerProtocol)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // uint64 count = 2;
  if (this->_internal_count() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_count());
  }

  // .sentry.Protocol protocol = 1;
  if (this->_internal_protocol() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_protocol());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void PeerCountPerProtocol::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PeerCountPerProtocol*>(&to_msg);
  auto& from = static_cast<const PeerCountPerProtocol&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:sentry.PeerCountPerProtocol)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_count() != 0) {
    _this->_impl_.count_ = from._impl_.count_;
  }
  if (from._internal_protocol() != 0) {
    _this->_impl_.protocol_ = from._impl_.protocol_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PeerCountPerProtocol::CopyFrom(const PeerCountPerProtocol& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sentry.PeerCountPerProtocol)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PeerCountPerProtocol::InternalSwap(PeerCountPerProtocol* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PeerCountPerProtocol, _impl_.protocol_)
      + sizeof(PeerCountPerProtocol::_impl_.protocol_)
      - PROTOBUF_FIELD_OFFSET(PeerCountPerProtocol, _impl_.count_)>(
          reinterpret_cast<char*>(&_impl_.count_),
          reinterpret_cast<char*>(&other->_impl_.count_));
}

::google::protobuf::Metadata PeerCountPerProtocol::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PeerCountReply::_Internal {
 public:
};

PeerCountReply::PeerCountReply(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sentry.PeerCountReply)
}
inline PROTOBUF_NDEBUG_INLINE PeerCountReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::sentry::PeerCountReply& from_msg)
      : counts_per_protocol_{visibility, arena, from.counts_per_protocol_},
        _cached_size_{0} {}

PeerCountReply::PeerCountReply(
    ::google::protobuf::Arena* arena,
    const PeerCountReply& from)
    : ::google::protobuf::Message(arena) {
  PeerCountReply* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.count_ = from._impl_.count_;

  // @@protoc_insertion_point(copy_constructor:sentry.PeerCountReply)
}
inline PROTOBUF_NDEBUG_INLINE PeerCountReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : counts_per_protocol_{visibility, arena},
        _cached_size_{0} {}

inline void PeerCountReply::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.count_ = {};
}
PeerCountReply::~PeerCountReply() {
  // @@protoc_insertion_point(destructor:sentry.PeerCountReply)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PeerCountReply::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
PeerCountReply::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(PeerCountReply, _impl_._cached_size_),
              false,
          },
          &PeerCountReply::MergeImpl,
          &PeerCountReply::kDescriptorMethods,
          &descriptor_table_p2psentry_2fsentry_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> PeerCountReply::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_PeerCountReply_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::sentry::PeerCountReply>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .sentry.PeerCountPerProtocol counts_per_protocol = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(PeerCountReply, _impl_.counts_per_protocol_)}},
    // uint64 count = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(PeerCountReply, _impl_.count_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(PeerCountReply, _impl_.count_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 count = 1;
    {PROTOBUF_FIELD_OFFSET(PeerCountReply, _impl_.count_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // repeated .sentry.PeerCountPerProtocol counts_per_protocol = 2;
    {PROTOBUF_FIELD_OFFSET(PeerCountReply, _impl_.counts_per_protocol_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::sentry::PeerCountPerProtocol>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void PeerCountReply::Clear() {
// @@protoc_insertion_point(message_clear_start:sentry.PeerCountReply)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.counts_per_protocol_.Clear();
  _impl_.count_ = ::uint64_t{0u};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* PeerCountReply::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sentry.PeerCountReply)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint64 count = 1;
  if (this->_internal_count() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this->_internal_count(), target);
  }

  // repeated .sentry.PeerCountPerProtocol counts_per_protocol = 2;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_counts_per_protocol_size());
       i < n; i++) {
    const auto& repfield = this->_internal_counts_per_protocol().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            2, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sentry.PeerCountReply)
  return target;
}

::size_t PeerCountReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sentry.PeerCountReply)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated .sentry.PeerCountPerProtocol counts_per_protocol = 2;
  total_size += 1UL * this->_internal_counts_per_protocol_size();
  for (const auto& msg : this->_internal_counts_per_protocol()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // uint64 count = 1;
  if (this->_internal_count() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_count());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void PeerCountReply::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PeerCountReply*>(&to_msg);
  auto& from = static_cast<const PeerCountReply&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:sentry.PeerCountReply)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_counts_per_protocol()->MergeFrom(
      from._internal_counts_per_protocol());
  if (from._internal_count() != 0) {
    _this->_impl_.count_ = from._impl_.count_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PeerCountReply::CopyFrom(const PeerCountReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sentry.PeerCountReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PeerCountReply::InternalSwap(PeerCountReply* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.counts_per_protocol_.InternalSwap(&other->_impl_.counts_per_protocol_);
        swap(_impl_.count_, other->_impl_.count_);
}

::google::protobuf::Metadata PeerCountReply::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PeerByIdRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<PeerByIdRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PeerByIdRequest, _impl_._has_bits_);
};

void PeerByIdRequest::clear_peer_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.peer_id_ != nullptr) _impl_.peer_id_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
PeerByIdRequest::PeerByIdRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sentry.PeerByIdRequest)
}
inline PROTOBUF_NDEBUG_INLINE PeerByIdRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::sentry::PeerByIdRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

PeerByIdRequest::PeerByIdRequest(
    ::google::protobuf::Arena* arena,
    const PeerByIdRequest& from)
    : ::google::protobuf::Message(arena) {
  PeerByIdRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.peer_id_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::types::H512>(
                              arena, *from._impl_.peer_id_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:sentry.PeerByIdRequest)
}
inline PROTOBUF_NDEBUG_INLINE PeerByIdRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void PeerByIdRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.peer_id_ = {};
}
PeerByIdRequest::~PeerByIdRequest() {
  // @@protoc_insertion_point(destructor:sentry.PeerByIdRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PeerByIdRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.peer_id_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
PeerByIdRequest::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(PeerByIdRequest, _impl_._cached_size_),
              false,
          },
          &PeerByIdRequest::MergeImpl,
          &PeerByIdRequest::kDescriptorMethods,
          &descriptor_table_p2psentry_2fsentry_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> PeerByIdRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PeerByIdRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_PeerByIdRequest_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::sentry::PeerByIdRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .types.H512 peer_id = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(PeerByIdRequest, _impl_.peer_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .types.H512 peer_id = 1;
    {PROTOBUF_FIELD_OFFSET(PeerByIdRequest, _impl_.peer_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::types::H512>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void PeerByIdRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:sentry.PeerByIdRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.peer_id_ != nullptr);
    _impl_.peer_id_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* PeerByIdRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sentry.PeerByIdRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .types.H512 peer_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *_impl_.peer_id_, _impl_.peer_id_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sentry.PeerByIdRequest)
  return target;
}

::size_t PeerByIdRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sentry.PeerByIdRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .types.H512 peer_id = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.peer_id_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void PeerByIdRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PeerByIdRequest*>(&to_msg);
  auto& from = static_cast<const PeerByIdRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:sentry.PeerByIdRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.peer_id_ != nullptr);
    if (_this->_impl_.peer_id_ == nullptr) {
      _this->_impl_.peer_id_ =
          ::google::protobuf::Message::CopyConstruct<::types::H512>(arena, *from._impl_.peer_id_);
    } else {
      _this->_impl_.peer_id_->MergeFrom(*from._impl_.peer_id_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PeerByIdRequest::CopyFrom(const PeerByIdRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sentry.PeerByIdRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PeerByIdRequest::InternalSwap(PeerByIdRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.peer_id_, other->_impl_.peer_id_);
}

::google::protobuf::Metadata PeerByIdRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PeerByIdReply::_Internal {
 public:
  using HasBits =
      decltype(std::declval<PeerByIdReply>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PeerByIdReply, _impl_._has_bits_);
};

void PeerByIdReply::clear_peer() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.peer_ != nullptr) _impl_.peer_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
PeerByIdReply::PeerByIdReply(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sentry.PeerByIdReply)
}
inline PROTOBUF_NDEBUG_INLINE PeerByIdReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::sentry::PeerByIdReply& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

PeerByIdReply::PeerByIdReply(
    ::google::protobuf::Arena* arena,
    const PeerByIdReply& from)
    : ::google::protobuf::Message(arena) {
  PeerByIdReply* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.peer_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::types::PeerInfo>(
                              arena, *from._impl_.peer_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:sentry.PeerByIdReply)
}
inline PROTOBUF_NDEBUG_INLINE PeerByIdReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void PeerByIdReply::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.peer_ = {};
}
PeerByIdReply::~PeerByIdReply() {
  // @@protoc_insertion_point(destructor:sentry.PeerByIdReply)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PeerByIdReply::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.peer_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
PeerByIdReply::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(PeerByIdReply, _impl_._cached_size_),
              false,
          },
          &PeerByIdReply::MergeImpl,
          &PeerByIdReply::kDescriptorMethods,
          &descriptor_table_p2psentry_2fsentry_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> PeerByIdReply::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PeerByIdReply, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_PeerByIdReply_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::sentry::PeerByIdReply>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional .types.PeerInfo peer = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(PeerByIdReply, _impl_.peer_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .types.PeerInfo peer = 1;
    {PROTOBUF_FIELD_OFFSET(PeerByIdReply, _impl_.peer_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::types::PeerInfo>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void PeerByIdReply::Clear() {
// @@protoc_insertion_point(message_clear_start:sentry.PeerByIdReply)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.peer_ != nullptr);
    _impl_.peer_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* PeerByIdReply::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sentry.PeerByIdReply)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .types.PeerInfo peer = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *_impl_.peer_, _impl_.peer_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sentry.PeerByIdReply)
  return target;
}

::size_t PeerByIdReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sentry.PeerByIdReply)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .types.PeerInfo peer = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.peer_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void PeerByIdReply::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PeerByIdReply*>(&to_msg);
  auto& from = static_cast<const PeerByIdReply&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:sentry.PeerByIdReply)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.peer_ != nullptr);
    if (_this->_impl_.peer_ == nullptr) {
      _this->_impl_.peer_ =
          ::google::protobuf::Message::CopyConstruct<::types::PeerInfo>(arena, *from._impl_.peer_);
    } else {
      _this->_impl_.peer_->MergeFrom(*from._impl_.peer_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PeerByIdReply::CopyFrom(const PeerByIdReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sentry.PeerByIdReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PeerByIdReply::InternalSwap(PeerByIdReply* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.peer_, other->_impl_.peer_);
}

::google::protobuf::Metadata PeerByIdReply::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PeerEventsRequest::_Internal {
 public:
};

PeerEventsRequest::PeerEventsRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:sentry.PeerEventsRequest)
}
PeerEventsRequest::PeerEventsRequest(
    ::google::protobuf::Arena* arena,
    const PeerEventsRequest& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  PeerEventsRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:sentry.PeerEventsRequest)
}

const ::google::protobuf::MessageLite::ClassData*
PeerEventsRequest::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(PeerEventsRequest, _impl_._cached_size_),
              false,
          },
          &PeerEventsRequest::MergeImpl,
          &PeerEventsRequest::kDescriptorMethods,
          &descriptor_table_p2psentry_2fsentry_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> PeerEventsRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_PeerEventsRequest_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::sentry::PeerEventsRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};









::google::protobuf::Metadata PeerEventsRequest::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PeerEvent::_Internal {
 public:
  using HasBits =
      decltype(std::declval<PeerEvent>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PeerEvent, _impl_._has_bits_);
};

void PeerEvent::clear_peer_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.peer_id_ != nullptr) _impl_.peer_id_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
PeerEvent::PeerEvent(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sentry.PeerEvent)
}
inline PROTOBUF_NDEBUG_INLINE PeerEvent::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::sentry::PeerEvent& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

PeerEvent::PeerEvent(
    ::google::protobuf::Arena* arena,
    const PeerEvent& from)
    : ::google::protobuf::Message(arena) {
  PeerEvent* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.peer_id_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::types::H512>(
                              arena, *from._impl_.peer_id_)
                        : nullptr;
  _impl_.event_id_ = from._impl_.event_id_;

  // @@protoc_insertion_point(copy_constructor:sentry.PeerEvent)
}
inline PROTOBUF_NDEBUG_INLINE PeerEvent::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void PeerEvent::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, peer_id_),
           0,
           offsetof(Impl_, event_id_) -
               offsetof(Impl_, peer_id_) +
               sizeof(Impl_::event_id_));
}
PeerEvent::~PeerEvent() {
  // @@protoc_insertion_point(destructor:sentry.PeerEvent)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PeerEvent::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.peer_id_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
PeerEvent::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(PeerEvent, _impl_._cached_size_),
              false,
          },
          &PeerEvent::MergeImpl,
          &PeerEvent::kDescriptorMethods,
          &descriptor_table_p2psentry_2fsentry_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> PeerEvent::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PeerEvent, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_PeerEvent_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::sentry::PeerEvent>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .sentry.PeerEvent.PeerEventId event_id = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PeerEvent, _impl_.event_id_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(PeerEvent, _impl_.event_id_)}},
    // .types.H512 peer_id = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(PeerEvent, _impl_.peer_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .types.H512 peer_id = 1;
    {PROTOBUF_FIELD_OFFSET(PeerEvent, _impl_.peer_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .sentry.PeerEvent.PeerEventId event_id = 2;
    {PROTOBUF_FIELD_OFFSET(PeerEvent, _impl_.event_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }}, {{
    {::_pbi::TcParser::GetTable<::types::H512>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void PeerEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:sentry.PeerEvent)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.peer_id_ != nullptr);
    _impl_.peer_id_->Clear();
  }
  _impl_.event_id_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* PeerEvent::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sentry.PeerEvent)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .types.H512 peer_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *_impl_.peer_id_, _impl_.peer_id_->GetCachedSize(), target, stream);
  }

  // .sentry.PeerEvent.PeerEventId event_id = 2;
  if (this->_internal_event_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_event_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sentry.PeerEvent)
  return target;
}

::size_t PeerEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sentry.PeerEvent)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // .types.H512 peer_id = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.peer_id_);
  }

  // .sentry.PeerEvent.PeerEventId event_id = 2;
  if (this->_internal_event_id() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_event_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void PeerEvent::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PeerEvent*>(&to_msg);
  auto& from = static_cast<const PeerEvent&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:sentry.PeerEvent)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.peer_id_ != nullptr);
    if (_this->_impl_.peer_id_ == nullptr) {
      _this->_impl_.peer_id_ =
          ::google::protobuf::Message::CopyConstruct<::types::H512>(arena, *from._impl_.peer_id_);
    } else {
      _this->_impl_.peer_id_->MergeFrom(*from._impl_.peer_id_);
    }
  }
  if (from._internal_event_id() != 0) {
    _this->_impl_.event_id_ = from._impl_.event_id_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PeerEvent::CopyFrom(const PeerEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sentry.PeerEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PeerEvent::InternalSwap(PeerEvent* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PeerEvent, _impl_.event_id_)
      + sizeof(PeerEvent::_impl_.event_id_)
      - PROTOBUF_FIELD_OFFSET(PeerEvent, _impl_.peer_id_)>(
          reinterpret_cast<char*>(&_impl_.peer_id_),
          reinterpret_cast<char*>(&other->_impl_.peer_id_));
}

::google::protobuf::Metadata PeerEvent::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class AddPeerReply::_Internal {
 public:
};

AddPeerReply::AddPeerReply(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sentry.AddPeerReply)
}
AddPeerReply::AddPeerReply(
    ::google::protobuf::Arena* arena, const AddPeerReply& from)
    : AddPeerReply(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE AddPeerReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void AddPeerReply::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.success_ = {};
}
AddPeerReply::~AddPeerReply() {
  // @@protoc_insertion_point(destructor:sentry.AddPeerReply)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AddPeerReply::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
AddPeerReply::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(AddPeerReply, _impl_._cached_size_),
              false,
          },
          &AddPeerReply::MergeImpl,
          &AddPeerReply::kDescriptorMethods,
          &descriptor_table_p2psentry_2fsentry_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> AddPeerReply::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_AddPeerReply_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::sentry::AddPeerReply>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bool success = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(AddPeerReply, _impl_.success_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(AddPeerReply, _impl_.success_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool success = 1;
    {PROTOBUF_FIELD_OFFSET(AddPeerReply, _impl_.success_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void AddPeerReply::Clear() {
// @@protoc_insertion_point(message_clear_start:sentry.AddPeerReply)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.success_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* AddPeerReply::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sentry.AddPeerReply)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bool success = 1;
  if (this->_internal_success() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1, this->_internal_success(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sentry.AddPeerReply)
  return target;
}

::size_t AddPeerReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sentry.AddPeerReply)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool success = 1;
  if (this->_internal_success() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void AddPeerReply::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AddPeerReply*>(&to_msg);
  auto& from = static_cast<const AddPeerReply&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:sentry.AddPeerReply)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_success() != 0) {
    _this->_impl_.success_ = from._impl_.success_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AddPeerReply::CopyFrom(const AddPeerReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sentry.AddPeerReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AddPeerReply::InternalSwap(AddPeerReply* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.success_, other->_impl_.success_);
}

::google::protobuf::Metadata AddPeerReply::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace sentry
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_p2psentry_2fsentry_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
