#   Copyright 2020-2021 The Silkworm Authors
#
#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.

version: 2.1

commands:
  build:
    steps:
      - run:
          name: "Install GMP"
          command: |
            sudo apt-get update
            sudo apt-get install -y libgmp3-dev
      - restore_cache:
          name: "Restore Hunter cache"
          key: &hunter-cache-key hunter-{{ .Environment.CIRCLE_JOB }}-{{checksum ".circleci/config.yml"}}-{{checksum "cmake/toolchain.cmake"}}-{{checksum "cmake/Hunter/config.cmake"}}-{{checksum "cmake/Hunter/core_packages.cmake"}}-{{checksum "cmake/Hunter/extra_packages.cmake"}}
      - run:
          name: "Cmake"
          working_directory: ~/build
          command: cmake ../project -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DSILKWORM_CLANG_COVERAGE=$CLANG_COVERAGE
      - save_cache:
          name: "Save Hunter cache"
          key: *hunter-cache-key
          paths:
            - ~/.hunter
      - run:
          name: "Build"
          command: cmake --build ~/build -j

  test:
    steps:
      - run:
          name: "Core unit tests"
          working_directory: ~/build
          command: cmd/core_test
      - run:
          name: "DB unit tests"
          working_directory: ~/build
          command: cmd/db_test
      - run:
          name: "Ethereum consensus tests"
          working_directory: ~/build
          command: cmd/consensus

jobs:
  linux-gcc-7:
    environment:
      BUILD_TYPE: Debug
      CLANG_COVERAGE: OFF
    machine:
      image: ubuntu-2004:202010-01
    steps:
      - run:
          name: "Switch to GCC 7"
          command: |
            sudo apt update
            sudo apt -y install gcc-7 g++-7
            sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-7 50
            sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-7 50
            gcc --version
            g++ --version
      - checkout
      - build
      - test

  linux-clang-coverage:
    environment:
      BUILD_TYPE: Debug
      CLANG_COVERAGE: ON
    docker:
      - image: ethereum/cpp-build-env:14-clang-10
    steps:
      - checkout
      - build
      - run:
          name: "Core unit tests"
          working_directory: ~/build
          command: |
            cmd/core_test
            mv default.profraw core_test.profraw
      - run:
          name: "DB unit tests"
          working_directory: ~/build
          command: |
            cmd/db_test
            mv default.profraw db_test.profraw
      - run:
          name: "Ethereum consensus tests"
          working_directory: ~/build
          command: |
            cmd/consensus
            mv default.profraw consensus.profraw
      - run:
          name: "Coverage"
          working_directory: ~/build
          command: |
            llvm-profdata merge *.profraw -o profdata
            llvm-cov export -instr-profile profdata -format=lcov cmd/db_test -object cmd/consensus > silkworm.lcov
      - run:
          name: "Upload to Codecov"
          command: |
            sudo pip3 install --upgrade --quiet --no-cache-dir codecov

            counter=1
            until codecov --required --file ~/build/silkworm.lcov -X gcov || [ $counter = 5 ]; do
              counter=$((counter+1))
              sleep 1
              echo "Try #$counter..."
            done

  linux-wasm-build:
    machine:
      image: ubuntu-2004:202010-01
    steps:
      - checkout
      - run:
          name: "Install WASI SDK"
          working_directory: ~/tmp1
          command: |
            wget https://github.com/WebAssembly/wasi-sdk/releases/download/wasi-sdk-12/wasi-sdk-12.0-linux.tar.gz
            tar xvf wasi-sdk-12.0-linux.tar.gz
            sudo mv wasi-sdk-12.0 /opt/wasi-sdk
      - run:
          name: "Install texinfo"
          command: |
            sudo apt-get update
            sudo apt-get install -y texinfo
      - run:
          name: "Install Wasmer"
          working_directory: ~/tmp2
          command: curl https://get.wasmer.io -sSfL | sh
      - run:
          name: "Build GMP"
          working_directory: ~/tmp3
          command: |
            git clone https://github.com/torquem-ch/gmp-wasm
            cd gmp-wasm
            ./configure --prefix $HOME/opt-wasm CC=/opt/wasi-sdk/bin/clang --host=none AR=llvm-ar RANLIB=llvm-ranlib --enable-cxx CXX=/opt/wasi-sdk/bin/clang++ ABI=longlong
            make -j
            make install
      - run:
          name: "Cmake"
          working_directory: ~/build
          command: |
            cmake ../project -DCMAKE_TOOLCHAIN_FILE=$HOME/project/cmake/wasi.cmake -DSILKWORM_CORE_ONLY=ON -DSILKWORM_WASM_API=ON -DGMP_INCLUDE_DIR=$HOME/opt-wasm/include -DGMP_LIBRARY=$HOME/opt-wasm/lib/libgmp.a -DCMAKE_BUILD_TYPE=Release
      - run:
          name: "Build"
          command: cmake --build ~/build -j
      - run:
          name: "Core unit tests"
          working_directory: ~/build
          command: wasmer cmd/core_test

workflows:
  version: 2
  silkworm:
    jobs:
      - linux-gcc-7
      - linux-clang-coverage
      - linux-wasm-build
