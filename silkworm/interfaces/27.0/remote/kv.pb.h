// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: remote/kv.proto
// Protobuf C++ Version: 5.27.0

#ifndef GOOGLE_PROTOBUF_INCLUDED_remote_2fkv_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_remote_2fkv_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5027000
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "google/protobuf/empty.pb.h"
#include "types/types.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_remote_2fkv_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_remote_2fkv_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_remote_2fkv_2eproto;
namespace remote {
class AccountChange;
struct AccountChangeDefaultTypeInternal;
extern AccountChangeDefaultTypeInternal _AccountChange_default_instance_;
class Cursor;
struct CursorDefaultTypeInternal;
extern CursorDefaultTypeInternal _Cursor_default_instance_;
class GetLatestReply;
struct GetLatestReplyDefaultTypeInternal;
extern GetLatestReplyDefaultTypeInternal _GetLatestReply_default_instance_;
class GetLatestReq;
struct GetLatestReqDefaultTypeInternal;
extern GetLatestReqDefaultTypeInternal _GetLatestReq_default_instance_;
class HistoryRangeReq;
struct HistoryRangeReqDefaultTypeInternal;
extern HistoryRangeReqDefaultTypeInternal _HistoryRangeReq_default_instance_;
class HistorySeekReply;
struct HistorySeekReplyDefaultTypeInternal;
extern HistorySeekReplyDefaultTypeInternal _HistorySeekReply_default_instance_;
class HistorySeekReq;
struct HistorySeekReqDefaultTypeInternal;
extern HistorySeekReqDefaultTypeInternal _HistorySeekReq_default_instance_;
class IndexPagination;
struct IndexPaginationDefaultTypeInternal;
extern IndexPaginationDefaultTypeInternal _IndexPagination_default_instance_;
class IndexRangeReply;
struct IndexRangeReplyDefaultTypeInternal;
extern IndexRangeReplyDefaultTypeInternal _IndexRangeReply_default_instance_;
class IndexRangeReq;
struct IndexRangeReqDefaultTypeInternal;
extern IndexRangeReqDefaultTypeInternal _IndexRangeReq_default_instance_;
class Pair;
struct PairDefaultTypeInternal;
extern PairDefaultTypeInternal _Pair_default_instance_;
class Pairs;
struct PairsDefaultTypeInternal;
extern PairsDefaultTypeInternal _Pairs_default_instance_;
class PairsPagination;
struct PairsPaginationDefaultTypeInternal;
extern PairsPaginationDefaultTypeInternal _PairsPagination_default_instance_;
class RangeAsOfReq;
struct RangeAsOfReqDefaultTypeInternal;
extern RangeAsOfReqDefaultTypeInternal _RangeAsOfReq_default_instance_;
class RangeReq;
struct RangeReqDefaultTypeInternal;
extern RangeReqDefaultTypeInternal _RangeReq_default_instance_;
class SnapshotsReply;
struct SnapshotsReplyDefaultTypeInternal;
extern SnapshotsReplyDefaultTypeInternal _SnapshotsReply_default_instance_;
class SnapshotsRequest;
struct SnapshotsRequestDefaultTypeInternal;
extern SnapshotsRequestDefaultTypeInternal _SnapshotsRequest_default_instance_;
class StateChange;
struct StateChangeDefaultTypeInternal;
extern StateChangeDefaultTypeInternal _StateChange_default_instance_;
class StateChangeBatch;
struct StateChangeBatchDefaultTypeInternal;
extern StateChangeBatchDefaultTypeInternal _StateChangeBatch_default_instance_;
class StateChangeRequest;
struct StateChangeRequestDefaultTypeInternal;
extern StateChangeRequestDefaultTypeInternal _StateChangeRequest_default_instance_;
class StorageChange;
struct StorageChangeDefaultTypeInternal;
extern StorageChangeDefaultTypeInternal _StorageChange_default_instance_;
}  // namespace remote
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace remote {
enum Op : int {
  FIRST = 0,
  FIRST_DUP = 1,
  SEEK = 2,
  SEEK_BOTH = 3,
  CURRENT = 4,
  LAST = 6,
  LAST_DUP = 7,
  NEXT = 8,
  NEXT_DUP = 9,
  NEXT_NO_DUP = 11,
  PREV = 12,
  PREV_DUP = 13,
  PREV_NO_DUP = 14,
  SEEK_EXACT = 15,
  SEEK_BOTH_EXACT = 16,
  OPEN = 30,
  CLOSE = 31,
  OPEN_DUP_SORT = 32,
  Op_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  Op_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool Op_IsValid(int value);
extern const uint32_t Op_internal_data_[];
constexpr Op Op_MIN = static_cast<Op>(0);
constexpr Op Op_MAX = static_cast<Op>(32);
constexpr int Op_ARRAYSIZE = 32 + 1;
const ::google::protobuf::EnumDescriptor*
Op_descriptor();
template <typename T>
const std::string& Op_Name(T value) {
  static_assert(std::is_same<T, Op>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to Op_Name().");
  return Op_Name(static_cast<Op>(value));
}
template <>
inline const std::string& Op_Name(Op value) {
  return ::google::protobuf::internal::NameOfDenseEnum<Op_descriptor,
                                                 0, 32>(
      static_cast<int>(value));
}
inline bool Op_Parse(absl::string_view name, Op* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Op>(
      Op_descriptor(), name, value);
}
enum Action : int {
  STORAGE = 0,
  UPSERT = 1,
  CODE = 2,
  UPSERT_CODE = 3,
  REMOVE = 4,
  Action_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  Action_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool Action_IsValid(int value);
extern const uint32_t Action_internal_data_[];
constexpr Action Action_MIN = static_cast<Action>(0);
constexpr Action Action_MAX = static_cast<Action>(4);
constexpr int Action_ARRAYSIZE = 4 + 1;
const ::google::protobuf::EnumDescriptor*
Action_descriptor();
template <typename T>
const std::string& Action_Name(T value) {
  static_assert(std::is_same<T, Action>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to Action_Name().");
  return Action_Name(static_cast<Action>(value));
}
template <>
inline const std::string& Action_Name(Action value) {
  return ::google::protobuf::internal::NameOfDenseEnum<Action_descriptor,
                                                 0, 4>(
      static_cast<int>(value));
}
inline bool Action_Parse(absl::string_view name, Action* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Action>(
      Action_descriptor(), name, value);
}
enum Direction : int {
  FORWARD = 0,
  UNWIND = 1,
  Direction_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  Direction_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool Direction_IsValid(int value);
extern const uint32_t Direction_internal_data_[];
constexpr Direction Direction_MIN = static_cast<Direction>(0);
constexpr Direction Direction_MAX = static_cast<Direction>(1);
constexpr int Direction_ARRAYSIZE = 1 + 1;
const ::google::protobuf::EnumDescriptor*
Direction_descriptor();
template <typename T>
const std::string& Direction_Name(T value) {
  static_assert(std::is_same<T, Direction>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to Direction_Name().");
  return Direction_Name(static_cast<Direction>(value));
}
template <>
inline const std::string& Direction_Name(Direction value) {
  return ::google::protobuf::internal::NameOfDenseEnum<Direction_descriptor,
                                                 0, 1>(
      static_cast<int>(value));
}
inline bool Direction_Parse(absl::string_view name, Direction* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Direction>(
      Direction_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class StateChangeRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:remote.StateChangeRequest) */ {
 public:
  inline StateChangeRequest() : StateChangeRequest(nullptr) {}
  ~StateChangeRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR StateChangeRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline StateChangeRequest(const StateChangeRequest& from) : StateChangeRequest(nullptr, from) {}
  inline StateChangeRequest(StateChangeRequest&& from) noexcept
      : StateChangeRequest(nullptr, std::move(from)) {}
  inline StateChangeRequest& operator=(const StateChangeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline StateChangeRequest& operator=(StateChangeRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StateChangeRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const StateChangeRequest* internal_default_instance() {
    return reinterpret_cast<const StateChangeRequest*>(
        &_StateChangeRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(StateChangeRequest& a, StateChangeRequest& b) { a.Swap(&b); }
  inline void Swap(StateChangeRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StateChangeRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StateChangeRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<StateChangeRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const StateChangeRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const StateChangeRequest& from) { StateChangeRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(StateChangeRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "remote.StateChangeRequest"; }

 protected:
  explicit StateChangeRequest(::google::protobuf::Arena* arena);
  StateChangeRequest(::google::protobuf::Arena* arena, const StateChangeRequest& from);
  StateChangeRequest(::google::protobuf::Arena* arena, StateChangeRequest&& from) noexcept
      : StateChangeRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kWithStorageFieldNumber = 1,
    kWithTransactionsFieldNumber = 2,
  };
  // bool with_storage = 1;
  void clear_with_storage() ;
  bool with_storage() const;
  void set_with_storage(bool value);

  private:
  bool _internal_with_storage() const;
  void _internal_set_with_storage(bool value);

  public:
  // bool with_transactions = 2;
  void clear_with_transactions() ;
  bool with_transactions() const;
  void set_with_transactions(bool value);

  private:
  bool _internal_with_transactions() const;
  void _internal_set_with_transactions(bool value);

  public:
  // @@protoc_insertion_point(class_scope:remote.StateChangeRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_StateChangeRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const StateChangeRequest& from_msg);
    bool with_storage_;
    bool with_transactions_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_remote_2fkv_2eproto;
};
// -------------------------------------------------------------------

class SnapshotsRequest final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:remote.SnapshotsRequest) */ {
 public:
  inline SnapshotsRequest() : SnapshotsRequest(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SnapshotsRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline SnapshotsRequest(const SnapshotsRequest& from) : SnapshotsRequest(nullptr, from) {}
  inline SnapshotsRequest(SnapshotsRequest&& from) noexcept
      : SnapshotsRequest(nullptr, std::move(from)) {}
  inline SnapshotsRequest& operator=(const SnapshotsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SnapshotsRequest& operator=(SnapshotsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SnapshotsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SnapshotsRequest* internal_default_instance() {
    return reinterpret_cast<const SnapshotsRequest*>(
        &_SnapshotsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(SnapshotsRequest& a, SnapshotsRequest& b) { a.Swap(&b); }
  inline void Swap(SnapshotsRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SnapshotsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SnapshotsRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<SnapshotsRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const SnapshotsRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const SnapshotsRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "remote.SnapshotsRequest"; }

 protected:
  explicit SnapshotsRequest(::google::protobuf::Arena* arena);
  SnapshotsRequest(::google::protobuf::Arena* arena, const SnapshotsRequest& from);
  SnapshotsRequest(::google::protobuf::Arena* arena, SnapshotsRequest&& from) noexcept
      : SnapshotsRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ZeroFieldsBase::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:remote.SnapshotsRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SnapshotsRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SnapshotsRequest& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_remote_2fkv_2eproto;
};
// -------------------------------------------------------------------

class SnapshotsReply final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:remote.SnapshotsReply) */ {
 public:
  inline SnapshotsReply() : SnapshotsReply(nullptr) {}
  ~SnapshotsReply() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SnapshotsReply(
      ::google::protobuf::internal::ConstantInitialized);

  inline SnapshotsReply(const SnapshotsReply& from) : SnapshotsReply(nullptr, from) {}
  inline SnapshotsReply(SnapshotsReply&& from) noexcept
      : SnapshotsReply(nullptr, std::move(from)) {}
  inline SnapshotsReply& operator=(const SnapshotsReply& from) {
    CopyFrom(from);
    return *this;
  }
  inline SnapshotsReply& operator=(SnapshotsReply&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SnapshotsReply& default_instance() {
    return *internal_default_instance();
  }
  static inline const SnapshotsReply* internal_default_instance() {
    return reinterpret_cast<const SnapshotsReply*>(
        &_SnapshotsReply_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(SnapshotsReply& a, SnapshotsReply& b) { a.Swap(&b); }
  inline void Swap(SnapshotsReply* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SnapshotsReply* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SnapshotsReply* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<SnapshotsReply>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SnapshotsReply& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SnapshotsReply& from) { SnapshotsReply::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SnapshotsReply* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "remote.SnapshotsReply"; }

 protected:
  explicit SnapshotsReply(::google::protobuf::Arena* arena);
  SnapshotsReply(::google::protobuf::Arena* arena, const SnapshotsReply& from);
  SnapshotsReply(::google::protobuf::Arena* arena, SnapshotsReply&& from) noexcept
      : SnapshotsReply(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kBlocksFilesFieldNumber = 1,
    kHistoryFilesFieldNumber = 2,
  };
  // repeated string blocks_files = 1;
  int blocks_files_size() const;
  private:
  int _internal_blocks_files_size() const;

  public:
  void clear_blocks_files() ;
  const std::string& blocks_files(int index) const;
  std::string* mutable_blocks_files(int index);
  void set_blocks_files(int index, const std::string& value);
  void set_blocks_files(int index, std::string&& value);
  void set_blocks_files(int index, const char* value);
  void set_blocks_files(int index, const char* value, std::size_t size);
  void set_blocks_files(int index, absl::string_view value);
  std::string* add_blocks_files();
  void add_blocks_files(const std::string& value);
  void add_blocks_files(std::string&& value);
  void add_blocks_files(const char* value);
  void add_blocks_files(const char* value, std::size_t size);
  void add_blocks_files(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& blocks_files() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_blocks_files();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_blocks_files() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_blocks_files();

  public:
  // repeated string history_files = 2;
  int history_files_size() const;
  private:
  int _internal_history_files_size() const;

  public:
  void clear_history_files() ;
  const std::string& history_files(int index) const;
  std::string* mutable_history_files(int index);
  void set_history_files(int index, const std::string& value);
  void set_history_files(int index, std::string&& value);
  void set_history_files(int index, const char* value);
  void set_history_files(int index, const char* value, std::size_t size);
  void set_history_files(int index, absl::string_view value);
  std::string* add_history_files();
  void add_history_files(const std::string& value);
  void add_history_files(std::string&& value);
  void add_history_files(const char* value);
  void add_history_files(const char* value, std::size_t size);
  void add_history_files(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& history_files() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_history_files();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_history_files() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_history_files();

  public:
  // @@protoc_insertion_point(class_scope:remote.SnapshotsReply)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      55, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SnapshotsReply_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SnapshotsReply& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> blocks_files_;
    ::google::protobuf::RepeatedPtrField<std::string> history_files_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_remote_2fkv_2eproto;
};
// -------------------------------------------------------------------

class RangeReq final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:remote.RangeReq) */ {
 public:
  inline RangeReq() : RangeReq(nullptr) {}
  ~RangeReq() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RangeReq(
      ::google::protobuf::internal::ConstantInitialized);

  inline RangeReq(const RangeReq& from) : RangeReq(nullptr, from) {}
  inline RangeReq(RangeReq&& from) noexcept
      : RangeReq(nullptr, std::move(from)) {}
  inline RangeReq& operator=(const RangeReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline RangeReq& operator=(RangeReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RangeReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const RangeReq* internal_default_instance() {
    return reinterpret_cast<const RangeReq*>(
        &_RangeReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(RangeReq& a, RangeReq& b) { a.Swap(&b); }
  inline void Swap(RangeReq* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RangeReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RangeReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<RangeReq>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RangeReq& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const RangeReq& from) { RangeReq::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(RangeReq* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "remote.RangeReq"; }

 protected:
  explicit RangeReq(::google::protobuf::Arena* arena);
  RangeReq(::google::protobuf::Arena* arena, const RangeReq& from);
  RangeReq(::google::protobuf::Arena* arena, RangeReq&& from) noexcept
      : RangeReq(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTableFieldNumber = 2,
    kFromPrefixFieldNumber = 3,
    kToPrefixFieldNumber = 4,
    kPageTokenFieldNumber = 8,
    kTxIdFieldNumber = 1,
    kLimitFieldNumber = 6,
    kOrderAscendFieldNumber = 5,
    kPageSizeFieldNumber = 7,
  };
  // string table = 2;
  void clear_table() ;
  const std::string& table() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_table(Arg_&& arg, Args_... args);
  std::string* mutable_table();
  PROTOBUF_NODISCARD std::string* release_table();
  void set_allocated_table(std::string* value);

  private:
  const std::string& _internal_table() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_table(
      const std::string& value);
  std::string* _internal_mutable_table();

  public:
  // bytes from_prefix = 3;
  void clear_from_prefix() ;
  const std::string& from_prefix() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_from_prefix(Arg_&& arg, Args_... args);
  std::string* mutable_from_prefix();
  PROTOBUF_NODISCARD std::string* release_from_prefix();
  void set_allocated_from_prefix(std::string* value);

  private:
  const std::string& _internal_from_prefix() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_from_prefix(
      const std::string& value);
  std::string* _internal_mutable_from_prefix();

  public:
  // bytes to_prefix = 4;
  void clear_to_prefix() ;
  const std::string& to_prefix() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_to_prefix(Arg_&& arg, Args_... args);
  std::string* mutable_to_prefix();
  PROTOBUF_NODISCARD std::string* release_to_prefix();
  void set_allocated_to_prefix(std::string* value);

  private:
  const std::string& _internal_to_prefix() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_to_prefix(
      const std::string& value);
  std::string* _internal_mutable_to_prefix();

  public:
  // string page_token = 8;
  void clear_page_token() ;
  const std::string& page_token() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_page_token(Arg_&& arg, Args_... args);
  std::string* mutable_page_token();
  PROTOBUF_NODISCARD std::string* release_page_token();
  void set_allocated_page_token(std::string* value);

  private:
  const std::string& _internal_page_token() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_page_token(
      const std::string& value);
  std::string* _internal_mutable_page_token();

  public:
  // uint64 tx_id = 1;
  void clear_tx_id() ;
  ::uint64_t tx_id() const;
  void set_tx_id(::uint64_t value);

  private:
  ::uint64_t _internal_tx_id() const;
  void _internal_set_tx_id(::uint64_t value);

  public:
  // sint64 limit = 6;
  void clear_limit() ;
  ::int64_t limit() const;
  void set_limit(::int64_t value);

  private:
  ::int64_t _internal_limit() const;
  void _internal_set_limit(::int64_t value);

  public:
  // bool order_ascend = 5;
  void clear_order_ascend() ;
  bool order_ascend() const;
  void set_order_ascend(bool value);

  private:
  bool _internal_order_ascend() const;
  void _internal_set_order_ascend(bool value);

  public:
  // int32 page_size = 7;
  void clear_page_size() ;
  ::int32_t page_size() const;
  void set_page_size(::int32_t value);

  private:
  ::int32_t _internal_page_size() const;
  void _internal_set_page_size(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:remote.RangeReq)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 8, 0,
      47, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_RangeReq_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const RangeReq& from_msg);
    ::google::protobuf::internal::ArenaStringPtr table_;
    ::google::protobuf::internal::ArenaStringPtr from_prefix_;
    ::google::protobuf::internal::ArenaStringPtr to_prefix_;
    ::google::protobuf::internal::ArenaStringPtr page_token_;
    ::uint64_t tx_id_;
    ::int64_t limit_;
    bool order_ascend_;
    ::int32_t page_size_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_remote_2fkv_2eproto;
};
// -------------------------------------------------------------------

class RangeAsOfReq final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:remote.RangeAsOfReq) */ {
 public:
  inline RangeAsOfReq() : RangeAsOfReq(nullptr) {}
  ~RangeAsOfReq() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RangeAsOfReq(
      ::google::protobuf::internal::ConstantInitialized);

  inline RangeAsOfReq(const RangeAsOfReq& from) : RangeAsOfReq(nullptr, from) {}
  inline RangeAsOfReq(RangeAsOfReq&& from) noexcept
      : RangeAsOfReq(nullptr, std::move(from)) {}
  inline RangeAsOfReq& operator=(const RangeAsOfReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline RangeAsOfReq& operator=(RangeAsOfReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RangeAsOfReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const RangeAsOfReq* internal_default_instance() {
    return reinterpret_cast<const RangeAsOfReq*>(
        &_RangeAsOfReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 17;
  friend void swap(RangeAsOfReq& a, RangeAsOfReq& b) { a.Swap(&b); }
  inline void Swap(RangeAsOfReq* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RangeAsOfReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RangeAsOfReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<RangeAsOfReq>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RangeAsOfReq& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const RangeAsOfReq& from) { RangeAsOfReq::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(RangeAsOfReq* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "remote.RangeAsOfReq"; }

 protected:
  explicit RangeAsOfReq(::google::protobuf::Arena* arena);
  RangeAsOfReq(::google::protobuf::Arena* arena, const RangeAsOfReq& from);
  RangeAsOfReq(::google::protobuf::Arena* arena, RangeAsOfReq&& from) noexcept
      : RangeAsOfReq(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTableFieldNumber = 2,
    kFromKeyFieldNumber = 3,
    kToKeyFieldNumber = 4,
    kPageTokenFieldNumber = 10,
    kTxIdFieldNumber = 1,
    kTsFieldNumber = 5,
    kLatestFieldNumber = 6,
    kOrderAscendFieldNumber = 7,
    kPageSizeFieldNumber = 9,
    kLimitFieldNumber = 8,
  };
  // string table = 2;
  void clear_table() ;
  const std::string& table() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_table(Arg_&& arg, Args_... args);
  std::string* mutable_table();
  PROTOBUF_NODISCARD std::string* release_table();
  void set_allocated_table(std::string* value);

  private:
  const std::string& _internal_table() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_table(
      const std::string& value);
  std::string* _internal_mutable_table();

  public:
  // bytes from_key = 3;
  void clear_from_key() ;
  const std::string& from_key() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_from_key(Arg_&& arg, Args_... args);
  std::string* mutable_from_key();
  PROTOBUF_NODISCARD std::string* release_from_key();
  void set_allocated_from_key(std::string* value);

  private:
  const std::string& _internal_from_key() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_from_key(
      const std::string& value);
  std::string* _internal_mutable_from_key();

  public:
  // bytes to_key = 4;
  void clear_to_key() ;
  const std::string& to_key() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_to_key(Arg_&& arg, Args_... args);
  std::string* mutable_to_key();
  PROTOBUF_NODISCARD std::string* release_to_key();
  void set_allocated_to_key(std::string* value);

  private:
  const std::string& _internal_to_key() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_to_key(
      const std::string& value);
  std::string* _internal_mutable_to_key();

  public:
  // string page_token = 10;
  void clear_page_token() ;
  const std::string& page_token() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_page_token(Arg_&& arg, Args_... args);
  std::string* mutable_page_token();
  PROTOBUF_NODISCARD std::string* release_page_token();
  void set_allocated_page_token(std::string* value);

  private:
  const std::string& _internal_page_token() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_page_token(
      const std::string& value);
  std::string* _internal_mutable_page_token();

  public:
  // uint64 tx_id = 1;
  void clear_tx_id() ;
  ::uint64_t tx_id() const;
  void set_tx_id(::uint64_t value);

  private:
  ::uint64_t _internal_tx_id() const;
  void _internal_set_tx_id(::uint64_t value);

  public:
  // uint64 ts = 5;
  void clear_ts() ;
  ::uint64_t ts() const;
  void set_ts(::uint64_t value);

  private:
  ::uint64_t _internal_ts() const;
  void _internal_set_ts(::uint64_t value);

  public:
  // bool latest = 6;
  void clear_latest() ;
  bool latest() const;
  void set_latest(bool value);

  private:
  bool _internal_latest() const;
  void _internal_set_latest(bool value);

  public:
  // bool order_ascend = 7;
  void clear_order_ascend() ;
  bool order_ascend() const;
  void set_order_ascend(bool value);

  private:
  bool _internal_order_ascend() const;
  void _internal_set_order_ascend(bool value);

  public:
  // int32 page_size = 9;
  void clear_page_size() ;
  ::int32_t page_size() const;
  void set_page_size(::int32_t value);

  private:
  ::int32_t _internal_page_size() const;
  void _internal_set_page_size(::int32_t value);

  public:
  // sint64 limit = 8;
  void clear_limit() ;
  ::int64_t limit() const;
  void set_limit(::int64_t value);

  private:
  ::int64_t _internal_limit() const;
  void _internal_set_limit(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:remote.RangeAsOfReq)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 10, 0,
      51, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_RangeAsOfReq_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const RangeAsOfReq& from_msg);
    ::google::protobuf::internal::ArenaStringPtr table_;
    ::google::protobuf::internal::ArenaStringPtr from_key_;
    ::google::protobuf::internal::ArenaStringPtr to_key_;
    ::google::protobuf::internal::ArenaStringPtr page_token_;
    ::uint64_t tx_id_;
    ::uint64_t ts_;
    bool latest_;
    bool order_ascend_;
    ::int32_t page_size_;
    ::int64_t limit_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_remote_2fkv_2eproto;
};
// -------------------------------------------------------------------

class PairsPagination final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:remote.PairsPagination) */ {
 public:
  inline PairsPagination() : PairsPagination(nullptr) {}
  ~PairsPagination() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PairsPagination(
      ::google::protobuf::internal::ConstantInitialized);

  inline PairsPagination(const PairsPagination& from) : PairsPagination(nullptr, from) {}
  inline PairsPagination(PairsPagination&& from) noexcept
      : PairsPagination(nullptr, std::move(from)) {}
  inline PairsPagination& operator=(const PairsPagination& from) {
    CopyFrom(from);
    return *this;
  }
  inline PairsPagination& operator=(PairsPagination&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PairsPagination& default_instance() {
    return *internal_default_instance();
  }
  static inline const PairsPagination* internal_default_instance() {
    return reinterpret_cast<const PairsPagination*>(
        &_PairsPagination_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 19;
  friend void swap(PairsPagination& a, PairsPagination& b) { a.Swap(&b); }
  inline void Swap(PairsPagination* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PairsPagination* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PairsPagination* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<PairsPagination>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PairsPagination& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PairsPagination& from) { PairsPagination::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(PairsPagination* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "remote.PairsPagination"; }

 protected:
  explicit PairsPagination(::google::protobuf::Arena* arena);
  PairsPagination(::google::protobuf::Arena* arena, const PairsPagination& from);
  PairsPagination(::google::protobuf::Arena* arena, PairsPagination&& from) noexcept
      : PairsPagination(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNextKeyFieldNumber = 1,
    kLimitFieldNumber = 2,
  };
  // bytes next_key = 1;
  void clear_next_key() ;
  const std::string& next_key() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_next_key(Arg_&& arg, Args_... args);
  std::string* mutable_next_key();
  PROTOBUF_NODISCARD std::string* release_next_key();
  void set_allocated_next_key(std::string* value);

  private:
  const std::string& _internal_next_key() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_next_key(
      const std::string& value);
  std::string* _internal_mutable_next_key();

  public:
  // sint64 limit = 2;
  void clear_limit() ;
  ::int64_t limit() const;
  void set_limit(::int64_t value);

  private:
  ::int64_t _internal_limit() const;
  void _internal_set_limit(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:remote.PairsPagination)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_PairsPagination_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PairsPagination& from_msg);
    ::google::protobuf::internal::ArenaStringPtr next_key_;
    ::int64_t limit_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_remote_2fkv_2eproto;
};
// -------------------------------------------------------------------

class Pairs final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:remote.Pairs) */ {
 public:
  inline Pairs() : Pairs(nullptr) {}
  ~Pairs() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Pairs(
      ::google::protobuf::internal::ConstantInitialized);

  inline Pairs(const Pairs& from) : Pairs(nullptr, from) {}
  inline Pairs(Pairs&& from) noexcept
      : Pairs(nullptr, std::move(from)) {}
  inline Pairs& operator=(const Pairs& from) {
    CopyFrom(from);
    return *this;
  }
  inline Pairs& operator=(Pairs&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Pairs& default_instance() {
    return *internal_default_instance();
  }
  static inline const Pairs* internal_default_instance() {
    return reinterpret_cast<const Pairs*>(
        &_Pairs_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 18;
  friend void swap(Pairs& a, Pairs& b) { a.Swap(&b); }
  inline void Swap(Pairs* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Pairs* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Pairs* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Pairs>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Pairs& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Pairs& from) { Pairs::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Pairs* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "remote.Pairs"; }

 protected:
  explicit Pairs(::google::protobuf::Arena* arena);
  Pairs(::google::protobuf::Arena* arena, const Pairs& from);
  Pairs(::google::protobuf::Arena* arena, Pairs&& from) noexcept
      : Pairs(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kKeysFieldNumber = 1,
    kValuesFieldNumber = 2,
    kNextPageTokenFieldNumber = 3,
  };
  // repeated bytes keys = 1;
  int keys_size() const;
  private:
  int _internal_keys_size() const;

  public:
  void clear_keys() ;
  const std::string& keys(int index) const;
  std::string* mutable_keys(int index);
  void set_keys(int index, const std::string& value);
  void set_keys(int index, std::string&& value);
  void set_keys(int index, const char* value);
  void set_keys(int index, const void* value, std::size_t size);
  void set_keys(int index, absl::string_view value);
  std::string* add_keys();
  void add_keys(const std::string& value);
  void add_keys(std::string&& value);
  void add_keys(const char* value);
  void add_keys(const void* value, std::size_t size);
  void add_keys(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& keys() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_keys();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_keys() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_keys();

  public:
  // repeated bytes values = 2;
  int values_size() const;
  private:
  int _internal_values_size() const;

  public:
  void clear_values() ;
  const std::string& values(int index) const;
  std::string* mutable_values(int index);
  void set_values(int index, const std::string& value);
  void set_values(int index, std::string&& value);
  void set_values(int index, const char* value);
  void set_values(int index, const void* value, std::size_t size);
  void set_values(int index, absl::string_view value);
  std::string* add_values();
  void add_values(const std::string& value);
  void add_values(std::string&& value);
  void add_values(const char* value);
  void add_values(const void* value, std::size_t size);
  void add_values(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& values() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_values();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_values() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_values();

  public:
  // string next_page_token = 3;
  void clear_next_page_token() ;
  const std::string& next_page_token() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_next_page_token(Arg_&& arg, Args_... args);
  std::string* mutable_next_page_token();
  PROTOBUF_NODISCARD std::string* release_next_page_token();
  void set_allocated_next_page_token(std::string* value);

  private:
  const std::string& _internal_next_page_token() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_next_page_token(
      const std::string& value);
  std::string* _internal_mutable_next_page_token();

  public:
  // @@protoc_insertion_point(class_scope:remote.Pairs)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      36, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Pairs_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Pairs& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> keys_;
    ::google::protobuf::RepeatedPtrField<std::string> values_;
    ::google::protobuf::internal::ArenaStringPtr next_page_token_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_remote_2fkv_2eproto;
};
// -------------------------------------------------------------------

class Pair final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:remote.Pair) */ {
 public:
  inline Pair() : Pair(nullptr) {}
  ~Pair() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Pair(
      ::google::protobuf::internal::ConstantInitialized);

  inline Pair(const Pair& from) : Pair(nullptr, from) {}
  inline Pair(Pair&& from) noexcept
      : Pair(nullptr, std::move(from)) {}
  inline Pair& operator=(const Pair& from) {
    CopyFrom(from);
    return *this;
  }
  inline Pair& operator=(Pair&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Pair& default_instance() {
    return *internal_default_instance();
  }
  static inline const Pair* internal_default_instance() {
    return reinterpret_cast<const Pair*>(
        &_Pair_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(Pair& a, Pair& b) { a.Swap(&b); }
  inline void Swap(Pair* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Pair* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Pair* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Pair>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Pair& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Pair& from) { Pair::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Pair* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "remote.Pair"; }

 protected:
  explicit Pair(::google::protobuf::Arena* arena);
  Pair(::google::protobuf::Arena* arena, const Pair& from);
  Pair(::google::protobuf::Arena* arena, Pair&& from) noexcept
      : Pair(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kKFieldNumber = 1,
    kVFieldNumber = 2,
    kViewIdFieldNumber = 4,
    kTxIdFieldNumber = 5,
    kCursorIdFieldNumber = 3,
  };
  // bytes k = 1;
  void clear_k() ;
  const std::string& k() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_k(Arg_&& arg, Args_... args);
  std::string* mutable_k();
  PROTOBUF_NODISCARD std::string* release_k();
  void set_allocated_k(std::string* value);

  private:
  const std::string& _internal_k() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_k(
      const std::string& value);
  std::string* _internal_mutable_k();

  public:
  // bytes v = 2;
  void clear_v() ;
  const std::string& v() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_v(Arg_&& arg, Args_... args);
  std::string* mutable_v();
  PROTOBUF_NODISCARD std::string* release_v();
  void set_allocated_v(std::string* value);

  private:
  const std::string& _internal_v() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_v(
      const std::string& value);
  std::string* _internal_mutable_v();

  public:
  // uint64 view_id = 4;
  void clear_view_id() ;
  ::uint64_t view_id() const;
  void set_view_id(::uint64_t value);

  private:
  ::uint64_t _internal_view_id() const;
  void _internal_set_view_id(::uint64_t value);

  public:
  // uint64 tx_id = 5;
  void clear_tx_id() ;
  ::uint64_t tx_id() const;
  void set_tx_id(::uint64_t value);

  private:
  ::uint64_t _internal_tx_id() const;
  void _internal_set_tx_id(::uint64_t value);

  public:
  // uint32 cursor_id = 3;
  void clear_cursor_id() ;
  ::uint32_t cursor_id() const;
  void set_cursor_id(::uint32_t value);

  private:
  ::uint32_t _internal_cursor_id() const;
  void _internal_set_cursor_id(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:remote.Pair)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Pair_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Pair& from_msg);
    ::google::protobuf::internal::ArenaStringPtr k_;
    ::google::protobuf::internal::ArenaStringPtr v_;
    ::uint64_t view_id_;
    ::uint64_t tx_id_;
    ::uint32_t cursor_id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_remote_2fkv_2eproto;
};
// -------------------------------------------------------------------

class IndexRangeReq final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:remote.IndexRangeReq) */ {
 public:
  inline IndexRangeReq() : IndexRangeReq(nullptr) {}
  ~IndexRangeReq() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR IndexRangeReq(
      ::google::protobuf::internal::ConstantInitialized);

  inline IndexRangeReq(const IndexRangeReq& from) : IndexRangeReq(nullptr, from) {}
  inline IndexRangeReq(IndexRangeReq&& from) noexcept
      : IndexRangeReq(nullptr, std::move(from)) {}
  inline IndexRangeReq& operator=(const IndexRangeReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline IndexRangeReq& operator=(IndexRangeReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const IndexRangeReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const IndexRangeReq* internal_default_instance() {
    return reinterpret_cast<const IndexRangeReq*>(
        &_IndexRangeReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 14;
  friend void swap(IndexRangeReq& a, IndexRangeReq& b) { a.Swap(&b); }
  inline void Swap(IndexRangeReq* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(IndexRangeReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  IndexRangeReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<IndexRangeReq>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const IndexRangeReq& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const IndexRangeReq& from) { IndexRangeReq::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(IndexRangeReq* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "remote.IndexRangeReq"; }

 protected:
  explicit IndexRangeReq(::google::protobuf::Arena* arena);
  IndexRangeReq(::google::protobuf::Arena* arena, const IndexRangeReq& from);
  IndexRangeReq(::google::protobuf::Arena* arena, IndexRangeReq&& from) noexcept
      : IndexRangeReq(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTableFieldNumber = 2,
    kKFieldNumber = 3,
    kPageTokenFieldNumber = 9,
    kTxIdFieldNumber = 1,
    kFromTsFieldNumber = 4,
    kToTsFieldNumber = 5,
    kLimitFieldNumber = 7,
    kOrderAscendFieldNumber = 6,
    kPageSizeFieldNumber = 8,
  };
  // string table = 2;
  void clear_table() ;
  const std::string& table() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_table(Arg_&& arg, Args_... args);
  std::string* mutable_table();
  PROTOBUF_NODISCARD std::string* release_table();
  void set_allocated_table(std::string* value);

  private:
  const std::string& _internal_table() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_table(
      const std::string& value);
  std::string* _internal_mutable_table();

  public:
  // bytes k = 3;
  void clear_k() ;
  const std::string& k() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_k(Arg_&& arg, Args_... args);
  std::string* mutable_k();
  PROTOBUF_NODISCARD std::string* release_k();
  void set_allocated_k(std::string* value);

  private:
  const std::string& _internal_k() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_k(
      const std::string& value);
  std::string* _internal_mutable_k();

  public:
  // string page_token = 9;
  void clear_page_token() ;
  const std::string& page_token() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_page_token(Arg_&& arg, Args_... args);
  std::string* mutable_page_token();
  PROTOBUF_NODISCARD std::string* release_page_token();
  void set_allocated_page_token(std::string* value);

  private:
  const std::string& _internal_page_token() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_page_token(
      const std::string& value);
  std::string* _internal_mutable_page_token();

  public:
  // uint64 tx_id = 1;
  void clear_tx_id() ;
  ::uint64_t tx_id() const;
  void set_tx_id(::uint64_t value);

  private:
  ::uint64_t _internal_tx_id() const;
  void _internal_set_tx_id(::uint64_t value);

  public:
  // sint64 from_ts = 4;
  void clear_from_ts() ;
  ::int64_t from_ts() const;
  void set_from_ts(::int64_t value);

  private:
  ::int64_t _internal_from_ts() const;
  void _internal_set_from_ts(::int64_t value);

  public:
  // sint64 to_ts = 5;
  void clear_to_ts() ;
  ::int64_t to_ts() const;
  void set_to_ts(::int64_t value);

  private:
  ::int64_t _internal_to_ts() const;
  void _internal_set_to_ts(::int64_t value);

  public:
  // sint64 limit = 7;
  void clear_limit() ;
  ::int64_t limit() const;
  void set_limit(::int64_t value);

  private:
  ::int64_t _internal_limit() const;
  void _internal_set_limit(::int64_t value);

  public:
  // bool order_ascend = 6;
  void clear_order_ascend() ;
  bool order_ascend() const;
  void set_order_ascend(bool value);

  private:
  bool _internal_order_ascend() const;
  void _internal_set_order_ascend(bool value);

  public:
  // int32 page_size = 8;
  void clear_page_size() ;
  ::int32_t page_size() const;
  void set_page_size(::int32_t value);

  private:
  ::int32_t _internal_page_size() const;
  void _internal_set_page_size(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:remote.IndexRangeReq)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 9, 0,
      52, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_IndexRangeReq_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const IndexRangeReq& from_msg);
    ::google::protobuf::internal::ArenaStringPtr table_;
    ::google::protobuf::internal::ArenaStringPtr k_;
    ::google::protobuf::internal::ArenaStringPtr page_token_;
    ::uint64_t tx_id_;
    ::int64_t from_ts_;
    ::int64_t to_ts_;
    ::int64_t limit_;
    bool order_ascend_;
    ::int32_t page_size_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_remote_2fkv_2eproto;
};
// -------------------------------------------------------------------

class IndexRangeReply final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:remote.IndexRangeReply) */ {
 public:
  inline IndexRangeReply() : IndexRangeReply(nullptr) {}
  ~IndexRangeReply() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR IndexRangeReply(
      ::google::protobuf::internal::ConstantInitialized);

  inline IndexRangeReply(const IndexRangeReply& from) : IndexRangeReply(nullptr, from) {}
  inline IndexRangeReply(IndexRangeReply&& from) noexcept
      : IndexRangeReply(nullptr, std::move(from)) {}
  inline IndexRangeReply& operator=(const IndexRangeReply& from) {
    CopyFrom(from);
    return *this;
  }
  inline IndexRangeReply& operator=(IndexRangeReply&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const IndexRangeReply& default_instance() {
    return *internal_default_instance();
  }
  static inline const IndexRangeReply* internal_default_instance() {
    return reinterpret_cast<const IndexRangeReply*>(
        &_IndexRangeReply_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 15;
  friend void swap(IndexRangeReply& a, IndexRangeReply& b) { a.Swap(&b); }
  inline void Swap(IndexRangeReply* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(IndexRangeReply* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  IndexRangeReply* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<IndexRangeReply>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const IndexRangeReply& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const IndexRangeReply& from) { IndexRangeReply::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(IndexRangeReply* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "remote.IndexRangeReply"; }

 protected:
  explicit IndexRangeReply(::google::protobuf::Arena* arena);
  IndexRangeReply(::google::protobuf::Arena* arena, const IndexRangeReply& from);
  IndexRangeReply(::google::protobuf::Arena* arena, IndexRangeReply&& from) noexcept
      : IndexRangeReply(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTimestampsFieldNumber = 1,
    kNextPageTokenFieldNumber = 2,
  };
  // repeated uint64 timestamps = 1;
  int timestamps_size() const;
  private:
  int _internal_timestamps_size() const;

  public:
  void clear_timestamps() ;
  ::uint64_t timestamps(int index) const;
  void set_timestamps(int index, ::uint64_t value);
  void add_timestamps(::uint64_t value);
  const ::google::protobuf::RepeatedField<::uint64_t>& timestamps() const;
  ::google::protobuf::RepeatedField<::uint64_t>* mutable_timestamps();

  private:
  const ::google::protobuf::RepeatedField<::uint64_t>& _internal_timestamps() const;
  ::google::protobuf::RepeatedField<::uint64_t>* _internal_mutable_timestamps();

  public:
  // string next_page_token = 2;
  void clear_next_page_token() ;
  const std::string& next_page_token() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_next_page_token(Arg_&& arg, Args_... args);
  std::string* mutable_next_page_token();
  PROTOBUF_NODISCARD std::string* release_next_page_token();
  void set_allocated_next_page_token(std::string* value);

  private:
  const std::string& _internal_next_page_token() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_next_page_token(
      const std::string& value);
  std::string* _internal_mutable_next_page_token();

  public:
  // @@protoc_insertion_point(class_scope:remote.IndexRangeReply)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      46, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_IndexRangeReply_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const IndexRangeReply& from_msg);
    ::google::protobuf::RepeatedField<::uint64_t> timestamps_;
    mutable ::google::protobuf::internal::CachedSize _timestamps_cached_byte_size_;
    ::google::protobuf::internal::ArenaStringPtr next_page_token_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_remote_2fkv_2eproto;
};
// -------------------------------------------------------------------

class IndexPagination final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:remote.IndexPagination) */ {
 public:
  inline IndexPagination() : IndexPagination(nullptr) {}
  ~IndexPagination() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR IndexPagination(
      ::google::protobuf::internal::ConstantInitialized);

  inline IndexPagination(const IndexPagination& from) : IndexPagination(nullptr, from) {}
  inline IndexPagination(IndexPagination&& from) noexcept
      : IndexPagination(nullptr, std::move(from)) {}
  inline IndexPagination& operator=(const IndexPagination& from) {
    CopyFrom(from);
    return *this;
  }
  inline IndexPagination& operator=(IndexPagination&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const IndexPagination& default_instance() {
    return *internal_default_instance();
  }
  static inline const IndexPagination* internal_default_instance() {
    return reinterpret_cast<const IndexPagination*>(
        &_IndexPagination_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 20;
  friend void swap(IndexPagination& a, IndexPagination& b) { a.Swap(&b); }
  inline void Swap(IndexPagination* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(IndexPagination* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  IndexPagination* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<IndexPagination>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const IndexPagination& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const IndexPagination& from) { IndexPagination::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(IndexPagination* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "remote.IndexPagination"; }

 protected:
  explicit IndexPagination(::google::protobuf::Arena* arena);
  IndexPagination(::google::protobuf::Arena* arena, const IndexPagination& from);
  IndexPagination(::google::protobuf::Arena* arena, IndexPagination&& from) noexcept
      : IndexPagination(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNextTimeStampFieldNumber = 1,
    kLimitFieldNumber = 2,
  };
  // sint64 next_time_stamp = 1;
  void clear_next_time_stamp() ;
  ::int64_t next_time_stamp() const;
  void set_next_time_stamp(::int64_t value);

  private:
  ::int64_t _internal_next_time_stamp() const;
  void _internal_set_next_time_stamp(::int64_t value);

  public:
  // sint64 limit = 2;
  void clear_limit() ;
  ::int64_t limit() const;
  void set_limit(::int64_t value);

  private:
  ::int64_t _internal_limit() const;
  void _internal_set_limit(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:remote.IndexPagination)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_IndexPagination_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const IndexPagination& from_msg);
    ::int64_t next_time_stamp_;
    ::int64_t limit_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_remote_2fkv_2eproto;
};
// -------------------------------------------------------------------

class HistorySeekReq final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:remote.HistorySeekReq) */ {
 public:
  inline HistorySeekReq() : HistorySeekReq(nullptr) {}
  ~HistorySeekReq() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR HistorySeekReq(
      ::google::protobuf::internal::ConstantInitialized);

  inline HistorySeekReq(const HistorySeekReq& from) : HistorySeekReq(nullptr, from) {}
  inline HistorySeekReq(HistorySeekReq&& from) noexcept
      : HistorySeekReq(nullptr, std::move(from)) {}
  inline HistorySeekReq& operator=(const HistorySeekReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline HistorySeekReq& operator=(HistorySeekReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const HistorySeekReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const HistorySeekReq* internal_default_instance() {
    return reinterpret_cast<const HistorySeekReq*>(
        &_HistorySeekReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 12;
  friend void swap(HistorySeekReq& a, HistorySeekReq& b) { a.Swap(&b); }
  inline void Swap(HistorySeekReq* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(HistorySeekReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  HistorySeekReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<HistorySeekReq>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const HistorySeekReq& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const HistorySeekReq& from) { HistorySeekReq::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(HistorySeekReq* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "remote.HistorySeekReq"; }

 protected:
  explicit HistorySeekReq(::google::protobuf::Arena* arena);
  HistorySeekReq(::google::protobuf::Arena* arena, const HistorySeekReq& from);
  HistorySeekReq(::google::protobuf::Arena* arena, HistorySeekReq&& from) noexcept
      : HistorySeekReq(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTableFieldNumber = 2,
    kKFieldNumber = 3,
    kTxIdFieldNumber = 1,
    kTsFieldNumber = 4,
  };
  // string table = 2;
  void clear_table() ;
  const std::string& table() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_table(Arg_&& arg, Args_... args);
  std::string* mutable_table();
  PROTOBUF_NODISCARD std::string* release_table();
  void set_allocated_table(std::string* value);

  private:
  const std::string& _internal_table() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_table(
      const std::string& value);
  std::string* _internal_mutable_table();

  public:
  // bytes k = 3;
  void clear_k() ;
  const std::string& k() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_k(Arg_&& arg, Args_... args);
  std::string* mutable_k();
  PROTOBUF_NODISCARD std::string* release_k();
  void set_allocated_k(std::string* value);

  private:
  const std::string& _internal_k() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_k(
      const std::string& value);
  std::string* _internal_mutable_k();

  public:
  // uint64 tx_id = 1;
  void clear_tx_id() ;
  ::uint64_t tx_id() const;
  void set_tx_id(::uint64_t value);

  private:
  ::uint64_t _internal_tx_id() const;
  void _internal_set_tx_id(::uint64_t value);

  public:
  // uint64 ts = 4;
  void clear_ts() ;
  ::uint64_t ts() const;
  void set_ts(::uint64_t value);

  private:
  ::uint64_t _internal_ts() const;
  void _internal_set_ts(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:remote.HistorySeekReq)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      35, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_HistorySeekReq_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const HistorySeekReq& from_msg);
    ::google::protobuf::internal::ArenaStringPtr table_;
    ::google::protobuf::internal::ArenaStringPtr k_;
    ::uint64_t tx_id_;
    ::uint64_t ts_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_remote_2fkv_2eproto;
};
// -------------------------------------------------------------------

class HistorySeekReply final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:remote.HistorySeekReply) */ {
 public:
  inline HistorySeekReply() : HistorySeekReply(nullptr) {}
  ~HistorySeekReply() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR HistorySeekReply(
      ::google::protobuf::internal::ConstantInitialized);

  inline HistorySeekReply(const HistorySeekReply& from) : HistorySeekReply(nullptr, from) {}
  inline HistorySeekReply(HistorySeekReply&& from) noexcept
      : HistorySeekReply(nullptr, std::move(from)) {}
  inline HistorySeekReply& operator=(const HistorySeekReply& from) {
    CopyFrom(from);
    return *this;
  }
  inline HistorySeekReply& operator=(HistorySeekReply&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const HistorySeekReply& default_instance() {
    return *internal_default_instance();
  }
  static inline const HistorySeekReply* internal_default_instance() {
    return reinterpret_cast<const HistorySeekReply*>(
        &_HistorySeekReply_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 13;
  friend void swap(HistorySeekReply& a, HistorySeekReply& b) { a.Swap(&b); }
  inline void Swap(HistorySeekReply* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(HistorySeekReply* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  HistorySeekReply* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<HistorySeekReply>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const HistorySeekReply& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const HistorySeekReply& from) { HistorySeekReply::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(HistorySeekReply* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "remote.HistorySeekReply"; }

 protected:
  explicit HistorySeekReply(::google::protobuf::Arena* arena);
  HistorySeekReply(::google::protobuf::Arena* arena, const HistorySeekReply& from);
  HistorySeekReply(::google::protobuf::Arena* arena, HistorySeekReply&& from) noexcept
      : HistorySeekReply(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kVFieldNumber = 1,
    kOkFieldNumber = 2,
  };
  // bytes v = 1;
  void clear_v() ;
  const std::string& v() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_v(Arg_&& arg, Args_... args);
  std::string* mutable_v();
  PROTOBUF_NODISCARD std::string* release_v();
  void set_allocated_v(std::string* value);

  private:
  const std::string& _internal_v() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_v(
      const std::string& value);
  std::string* _internal_mutable_v();

  public:
  // bool ok = 2;
  void clear_ok() ;
  bool ok() const;
  void set_ok(bool value);

  private:
  bool _internal_ok() const;
  void _internal_set_ok(bool value);

  public:
  // @@protoc_insertion_point(class_scope:remote.HistorySeekReply)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_HistorySeekReply_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const HistorySeekReply& from_msg);
    ::google::protobuf::internal::ArenaStringPtr v_;
    bool ok_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_remote_2fkv_2eproto;
};
// -------------------------------------------------------------------

class HistoryRangeReq final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:remote.HistoryRangeReq) */ {
 public:
  inline HistoryRangeReq() : HistoryRangeReq(nullptr) {}
  ~HistoryRangeReq() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR HistoryRangeReq(
      ::google::protobuf::internal::ConstantInitialized);

  inline HistoryRangeReq(const HistoryRangeReq& from) : HistoryRangeReq(nullptr, from) {}
  inline HistoryRangeReq(HistoryRangeReq&& from) noexcept
      : HistoryRangeReq(nullptr, std::move(from)) {}
  inline HistoryRangeReq& operator=(const HistoryRangeReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline HistoryRangeReq& operator=(HistoryRangeReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const HistoryRangeReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const HistoryRangeReq* internal_default_instance() {
    return reinterpret_cast<const HistoryRangeReq*>(
        &_HistoryRangeReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 16;
  friend void swap(HistoryRangeReq& a, HistoryRangeReq& b) { a.Swap(&b); }
  inline void Swap(HistoryRangeReq* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(HistoryRangeReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  HistoryRangeReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<HistoryRangeReq>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const HistoryRangeReq& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const HistoryRangeReq& from) { HistoryRangeReq::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(HistoryRangeReq* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "remote.HistoryRangeReq"; }

 protected:
  explicit HistoryRangeReq(::google::protobuf::Arena* arena);
  HistoryRangeReq(::google::protobuf::Arena* arena, const HistoryRangeReq& from);
  HistoryRangeReq(::google::protobuf::Arena* arena, HistoryRangeReq&& from) noexcept
      : HistoryRangeReq(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTableFieldNumber = 2,
    kPageTokenFieldNumber = 9,
    kTxIdFieldNumber = 1,
    kFromTsFieldNumber = 4,
    kToTsFieldNumber = 5,
    kLimitFieldNumber = 7,
    kOrderAscendFieldNumber = 6,
    kPageSizeFieldNumber = 8,
  };
  // string table = 2;
  void clear_table() ;
  const std::string& table() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_table(Arg_&& arg, Args_... args);
  std::string* mutable_table();
  PROTOBUF_NODISCARD std::string* release_table();
  void set_allocated_table(std::string* value);

  private:
  const std::string& _internal_table() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_table(
      const std::string& value);
  std::string* _internal_mutable_table();

  public:
  // string page_token = 9;
  void clear_page_token() ;
  const std::string& page_token() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_page_token(Arg_&& arg, Args_... args);
  std::string* mutable_page_token();
  PROTOBUF_NODISCARD std::string* release_page_token();
  void set_allocated_page_token(std::string* value);

  private:
  const std::string& _internal_page_token() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_page_token(
      const std::string& value);
  std::string* _internal_mutable_page_token();

  public:
  // uint64 tx_id = 1;
  void clear_tx_id() ;
  ::uint64_t tx_id() const;
  void set_tx_id(::uint64_t value);

  private:
  ::uint64_t _internal_tx_id() const;
  void _internal_set_tx_id(::uint64_t value);

  public:
  // sint64 from_ts = 4;
  void clear_from_ts() ;
  ::int64_t from_ts() const;
  void set_from_ts(::int64_t value);

  private:
  ::int64_t _internal_from_ts() const;
  void _internal_set_from_ts(::int64_t value);

  public:
  // sint64 to_ts = 5;
  void clear_to_ts() ;
  ::int64_t to_ts() const;
  void set_to_ts(::int64_t value);

  private:
  ::int64_t _internal_to_ts() const;
  void _internal_set_to_ts(::int64_t value);

  public:
  // sint64 limit = 7;
  void clear_limit() ;
  ::int64_t limit() const;
  void set_limit(::int64_t value);

  private:
  ::int64_t _internal_limit() const;
  void _internal_set_limit(::int64_t value);

  public:
  // bool order_ascend = 6;
  void clear_order_ascend() ;
  bool order_ascend() const;
  void set_order_ascend(bool value);

  private:
  bool _internal_order_ascend() const;
  void _internal_set_order_ascend(bool value);

  public:
  // int32 page_size = 8;
  void clear_page_size() ;
  ::int32_t page_size() const;
  void set_page_size(::int32_t value);

  private:
  ::int32_t _internal_page_size() const;
  void _internal_set_page_size(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:remote.HistoryRangeReq)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 8, 0,
      54, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_HistoryRangeReq_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const HistoryRangeReq& from_msg);
    ::google::protobuf::internal::ArenaStringPtr table_;
    ::google::protobuf::internal::ArenaStringPtr page_token_;
    ::uint64_t tx_id_;
    ::int64_t from_ts_;
    ::int64_t to_ts_;
    ::int64_t limit_;
    bool order_ascend_;
    ::int32_t page_size_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_remote_2fkv_2eproto;
};
// -------------------------------------------------------------------

class GetLatestReq final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:remote.GetLatestReq) */ {
 public:
  inline GetLatestReq() : GetLatestReq(nullptr) {}
  ~GetLatestReq() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetLatestReq(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetLatestReq(const GetLatestReq& from) : GetLatestReq(nullptr, from) {}
  inline GetLatestReq(GetLatestReq&& from) noexcept
      : GetLatestReq(nullptr, std::move(from)) {}
  inline GetLatestReq& operator=(const GetLatestReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetLatestReq& operator=(GetLatestReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetLatestReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetLatestReq* internal_default_instance() {
    return reinterpret_cast<const GetLatestReq*>(
        &_GetLatestReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 10;
  friend void swap(GetLatestReq& a, GetLatestReq& b) { a.Swap(&b); }
  inline void Swap(GetLatestReq* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetLatestReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetLatestReq* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<GetLatestReq>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetLatestReq& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetLatestReq& from) { GetLatestReq::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetLatestReq* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "remote.GetLatestReq"; }

 protected:
  explicit GetLatestReq(::google::protobuf::Arena* arena);
  GetLatestReq(::google::protobuf::Arena* arena, const GetLatestReq& from);
  GetLatestReq(::google::protobuf::Arena* arena, GetLatestReq&& from) noexcept
      : GetLatestReq(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTableFieldNumber = 2,
    kKFieldNumber = 3,
    kK2FieldNumber = 5,
    kTxIdFieldNumber = 1,
    kTsFieldNumber = 4,
    kLatestFieldNumber = 6,
  };
  // string table = 2;
  void clear_table() ;
  const std::string& table() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_table(Arg_&& arg, Args_... args);
  std::string* mutable_table();
  PROTOBUF_NODISCARD std::string* release_table();
  void set_allocated_table(std::string* value);

  private:
  const std::string& _internal_table() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_table(
      const std::string& value);
  std::string* _internal_mutable_table();

  public:
  // bytes k = 3;
  void clear_k() ;
  const std::string& k() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_k(Arg_&& arg, Args_... args);
  std::string* mutable_k();
  PROTOBUF_NODISCARD std::string* release_k();
  void set_allocated_k(std::string* value);

  private:
  const std::string& _internal_k() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_k(
      const std::string& value);
  std::string* _internal_mutable_k();

  public:
  // bytes k2 = 5;
  void clear_k2() ;
  const std::string& k2() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_k2(Arg_&& arg, Args_... args);
  std::string* mutable_k2();
  PROTOBUF_NODISCARD std::string* release_k2();
  void set_allocated_k2(std::string* value);

  private:
  const std::string& _internal_k2() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_k2(
      const std::string& value);
  std::string* _internal_mutable_k2();

  public:
  // uint64 tx_id = 1;
  void clear_tx_id() ;
  ::uint64_t tx_id() const;
  void set_tx_id(::uint64_t value);

  private:
  ::uint64_t _internal_tx_id() const;
  void _internal_set_tx_id(::uint64_t value);

  public:
  // uint64 ts = 4;
  void clear_ts() ;
  ::uint64_t ts() const;
  void set_ts(::uint64_t value);

  private:
  ::uint64_t _internal_ts() const;
  void _internal_set_ts(::uint64_t value);

  public:
  // bool latest = 6;
  void clear_latest() ;
  bool latest() const;
  void set_latest(bool value);

  private:
  bool _internal_latest() const;
  void _internal_set_latest(bool value);

  public:
  // @@protoc_insertion_point(class_scope:remote.GetLatestReq)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 0,
      33, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_GetLatestReq_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetLatestReq& from_msg);
    ::google::protobuf::internal::ArenaStringPtr table_;
    ::google::protobuf::internal::ArenaStringPtr k_;
    ::google::protobuf::internal::ArenaStringPtr k2_;
    ::uint64_t tx_id_;
    ::uint64_t ts_;
    bool latest_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_remote_2fkv_2eproto;
};
// -------------------------------------------------------------------

class GetLatestReply final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:remote.GetLatestReply) */ {
 public:
  inline GetLatestReply() : GetLatestReply(nullptr) {}
  ~GetLatestReply() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetLatestReply(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetLatestReply(const GetLatestReply& from) : GetLatestReply(nullptr, from) {}
  inline GetLatestReply(GetLatestReply&& from) noexcept
      : GetLatestReply(nullptr, std::move(from)) {}
  inline GetLatestReply& operator=(const GetLatestReply& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetLatestReply& operator=(GetLatestReply&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetLatestReply& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetLatestReply* internal_default_instance() {
    return reinterpret_cast<const GetLatestReply*>(
        &_GetLatestReply_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 11;
  friend void swap(GetLatestReply& a, GetLatestReply& b) { a.Swap(&b); }
  inline void Swap(GetLatestReply* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetLatestReply* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetLatestReply* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<GetLatestReply>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetLatestReply& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetLatestReply& from) { GetLatestReply::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetLatestReply* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "remote.GetLatestReply"; }

 protected:
  explicit GetLatestReply(::google::protobuf::Arena* arena);
  GetLatestReply(::google::protobuf::Arena* arena, const GetLatestReply& from);
  GetLatestReply(::google::protobuf::Arena* arena, GetLatestReply&& from) noexcept
      : GetLatestReply(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kVFieldNumber = 1,
    kOkFieldNumber = 2,
  };
  // bytes v = 1;
  void clear_v() ;
  const std::string& v() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_v(Arg_&& arg, Args_... args);
  std::string* mutable_v();
  PROTOBUF_NODISCARD std::string* release_v();
  void set_allocated_v(std::string* value);

  private:
  const std::string& _internal_v() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_v(
      const std::string& value);
  std::string* _internal_mutable_v();

  public:
  // bool ok = 2;
  void clear_ok() ;
  bool ok() const;
  void set_ok(bool value);

  private:
  bool _internal_ok() const;
  void _internal_set_ok(bool value);

  public:
  // @@protoc_insertion_point(class_scope:remote.GetLatestReply)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_GetLatestReply_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetLatestReply& from_msg);
    ::google::protobuf::internal::ArenaStringPtr v_;
    bool ok_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_remote_2fkv_2eproto;
};
// -------------------------------------------------------------------

class Cursor final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:remote.Cursor) */ {
 public:
  inline Cursor() : Cursor(nullptr) {}
  ~Cursor() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Cursor(
      ::google::protobuf::internal::ConstantInitialized);

  inline Cursor(const Cursor& from) : Cursor(nullptr, from) {}
  inline Cursor(Cursor&& from) noexcept
      : Cursor(nullptr, std::move(from)) {}
  inline Cursor& operator=(const Cursor& from) {
    CopyFrom(from);
    return *this;
  }
  inline Cursor& operator=(Cursor&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Cursor& default_instance() {
    return *internal_default_instance();
  }
  static inline const Cursor* internal_default_instance() {
    return reinterpret_cast<const Cursor*>(
        &_Cursor_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(Cursor& a, Cursor& b) { a.Swap(&b); }
  inline void Swap(Cursor* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Cursor* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Cursor* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Cursor>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Cursor& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Cursor& from) { Cursor::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Cursor* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "remote.Cursor"; }

 protected:
  explicit Cursor(::google::protobuf::Arena* arena);
  Cursor(::google::protobuf::Arena* arena, const Cursor& from);
  Cursor(::google::protobuf::Arena* arena, Cursor&& from) noexcept
      : Cursor(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kBucketNameFieldNumber = 2,
    kKFieldNumber = 4,
    kVFieldNumber = 5,
    kOpFieldNumber = 1,
    kCursorFieldNumber = 3,
  };
  // string bucket_name = 2;
  void clear_bucket_name() ;
  const std::string& bucket_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_bucket_name(Arg_&& arg, Args_... args);
  std::string* mutable_bucket_name();
  PROTOBUF_NODISCARD std::string* release_bucket_name();
  void set_allocated_bucket_name(std::string* value);

  private:
  const std::string& _internal_bucket_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_bucket_name(
      const std::string& value);
  std::string* _internal_mutable_bucket_name();

  public:
  // bytes k = 4;
  void clear_k() ;
  const std::string& k() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_k(Arg_&& arg, Args_... args);
  std::string* mutable_k();
  PROTOBUF_NODISCARD std::string* release_k();
  void set_allocated_k(std::string* value);

  private:
  const std::string& _internal_k() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_k(
      const std::string& value);
  std::string* _internal_mutable_k();

  public:
  // bytes v = 5;
  void clear_v() ;
  const std::string& v() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_v(Arg_&& arg, Args_... args);
  std::string* mutable_v();
  PROTOBUF_NODISCARD std::string* release_v();
  void set_allocated_v(std::string* value);

  private:
  const std::string& _internal_v() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_v(
      const std::string& value);
  std::string* _internal_mutable_v();

  public:
  // .remote.Op op = 1;
  void clear_op() ;
  ::remote::Op op() const;
  void set_op(::remote::Op value);

  private:
  ::remote::Op _internal_op() const;
  void _internal_set_op(::remote::Op value);

  public:
  // uint32 cursor = 3;
  void clear_cursor() ;
  ::uint32_t cursor() const;
  void set_cursor(::uint32_t value);

  private:
  ::uint32_t _internal_cursor() const;
  void _internal_set_cursor(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:remote.Cursor)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 0,
      33, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Cursor_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Cursor& from_msg);
    ::google::protobuf::internal::ArenaStringPtr bucket_name_;
    ::google::protobuf::internal::ArenaStringPtr k_;
    ::google::protobuf::internal::ArenaStringPtr v_;
    int op_;
    ::uint32_t cursor_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_remote_2fkv_2eproto;
};
// -------------------------------------------------------------------

class StorageChange final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:remote.StorageChange) */ {
 public:
  inline StorageChange() : StorageChange(nullptr) {}
  ~StorageChange() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR StorageChange(
      ::google::protobuf::internal::ConstantInitialized);

  inline StorageChange(const StorageChange& from) : StorageChange(nullptr, from) {}
  inline StorageChange(StorageChange&& from) noexcept
      : StorageChange(nullptr, std::move(from)) {}
  inline StorageChange& operator=(const StorageChange& from) {
    CopyFrom(from);
    return *this;
  }
  inline StorageChange& operator=(StorageChange&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StorageChange& default_instance() {
    return *internal_default_instance();
  }
  static inline const StorageChange* internal_default_instance() {
    return reinterpret_cast<const StorageChange*>(
        &_StorageChange_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(StorageChange& a, StorageChange& b) { a.Swap(&b); }
  inline void Swap(StorageChange* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StorageChange* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StorageChange* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<StorageChange>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const StorageChange& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const StorageChange& from) { StorageChange::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(StorageChange* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "remote.StorageChange"; }

 protected:
  explicit StorageChange(::google::protobuf::Arena* arena);
  StorageChange(::google::protobuf::Arena* arena, const StorageChange& from);
  StorageChange(::google::protobuf::Arena* arena, StorageChange&& from) noexcept
      : StorageChange(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDataFieldNumber = 2,
    kLocationFieldNumber = 1,
  };
  // bytes data = 2;
  void clear_data() ;
  const std::string& data() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_data(Arg_&& arg, Args_... args);
  std::string* mutable_data();
  PROTOBUF_NODISCARD std::string* release_data();
  void set_allocated_data(std::string* value);

  private:
  const std::string& _internal_data() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_data(
      const std::string& value);
  std::string* _internal_mutable_data();

  public:
  // .types.H256 location = 1;
  bool has_location() const;
  void clear_location() ;
  const ::types::H256& location() const;
  PROTOBUF_NODISCARD ::types::H256* release_location();
  ::types::H256* mutable_location();
  void set_allocated_location(::types::H256* value);
  void unsafe_arena_set_allocated_location(::types::H256* value);
  ::types::H256* unsafe_arena_release_location();

  private:
  const ::types::H256& _internal_location() const;
  ::types::H256* _internal_mutable_location();

  public:
  // @@protoc_insertion_point(class_scope:remote.StorageChange)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_StorageChange_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const StorageChange& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr data_;
    ::types::H256* location_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_remote_2fkv_2eproto;
};
// -------------------------------------------------------------------

class AccountChange final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:remote.AccountChange) */ {
 public:
  inline AccountChange() : AccountChange(nullptr) {}
  ~AccountChange() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AccountChange(
      ::google::protobuf::internal::ConstantInitialized);

  inline AccountChange(const AccountChange& from) : AccountChange(nullptr, from) {}
  inline AccountChange(AccountChange&& from) noexcept
      : AccountChange(nullptr, std::move(from)) {}
  inline AccountChange& operator=(const AccountChange& from) {
    CopyFrom(from);
    return *this;
  }
  inline AccountChange& operator=(AccountChange&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AccountChange& default_instance() {
    return *internal_default_instance();
  }
  static inline const AccountChange* internal_default_instance() {
    return reinterpret_cast<const AccountChange*>(
        &_AccountChange_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(AccountChange& a, AccountChange& b) { a.Swap(&b); }
  inline void Swap(AccountChange* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AccountChange* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AccountChange* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<AccountChange>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AccountChange& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AccountChange& from) { AccountChange::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(AccountChange* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "remote.AccountChange"; }

 protected:
  explicit AccountChange(::google::protobuf::Arena* arena);
  AccountChange(::google::protobuf::Arena* arena, const AccountChange& from);
  AccountChange(::google::protobuf::Arena* arena, AccountChange&& from) noexcept
      : AccountChange(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kStorageChangesFieldNumber = 6,
    kDataFieldNumber = 4,
    kCodeFieldNumber = 5,
    kAddressFieldNumber = 1,
    kIncarnationFieldNumber = 2,
    kActionFieldNumber = 3,
  };
  // repeated .remote.StorageChange storage_changes = 6;
  int storage_changes_size() const;
  private:
  int _internal_storage_changes_size() const;

  public:
  void clear_storage_changes() ;
  ::remote::StorageChange* mutable_storage_changes(int index);
  ::google::protobuf::RepeatedPtrField<::remote::StorageChange>* mutable_storage_changes();

  private:
  const ::google::protobuf::RepeatedPtrField<::remote::StorageChange>& _internal_storage_changes() const;
  ::google::protobuf::RepeatedPtrField<::remote::StorageChange>* _internal_mutable_storage_changes();
  public:
  const ::remote::StorageChange& storage_changes(int index) const;
  ::remote::StorageChange* add_storage_changes();
  const ::google::protobuf::RepeatedPtrField<::remote::StorageChange>& storage_changes() const;
  // bytes data = 4;
  void clear_data() ;
  const std::string& data() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_data(Arg_&& arg, Args_... args);
  std::string* mutable_data();
  PROTOBUF_NODISCARD std::string* release_data();
  void set_allocated_data(std::string* value);

  private:
  const std::string& _internal_data() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_data(
      const std::string& value);
  std::string* _internal_mutable_data();

  public:
  // bytes code = 5;
  void clear_code() ;
  const std::string& code() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_code(Arg_&& arg, Args_... args);
  std::string* mutable_code();
  PROTOBUF_NODISCARD std::string* release_code();
  void set_allocated_code(std::string* value);

  private:
  const std::string& _internal_code() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_code(
      const std::string& value);
  std::string* _internal_mutable_code();

  public:
  // .types.H160 address = 1;
  bool has_address() const;
  void clear_address() ;
  const ::types::H160& address() const;
  PROTOBUF_NODISCARD ::types::H160* release_address();
  ::types::H160* mutable_address();
  void set_allocated_address(::types::H160* value);
  void unsafe_arena_set_allocated_address(::types::H160* value);
  ::types::H160* unsafe_arena_release_address();

  private:
  const ::types::H160& _internal_address() const;
  ::types::H160* _internal_mutable_address();

  public:
  // uint64 incarnation = 2;
  void clear_incarnation() ;
  ::uint64_t incarnation() const;
  void set_incarnation(::uint64_t value);

  private:
  ::uint64_t _internal_incarnation() const;
  void _internal_set_incarnation(::uint64_t value);

  public:
  // .remote.Action action = 3;
  void clear_action() ;
  ::remote::Action action() const;
  void set_action(::remote::Action value);

  private:
  ::remote::Action _internal_action() const;
  void _internal_set_action(::remote::Action value);

  public:
  // @@protoc_insertion_point(class_scope:remote.AccountChange)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 2,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_AccountChange_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const AccountChange& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::remote::StorageChange > storage_changes_;
    ::google::protobuf::internal::ArenaStringPtr data_;
    ::google::protobuf::internal::ArenaStringPtr code_;
    ::types::H160* address_;
    ::uint64_t incarnation_;
    int action_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_remote_2fkv_2eproto;
};
// -------------------------------------------------------------------

class StateChange final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:remote.StateChange) */ {
 public:
  inline StateChange() : StateChange(nullptr) {}
  ~StateChange() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR StateChange(
      ::google::protobuf::internal::ConstantInitialized);

  inline StateChange(const StateChange& from) : StateChange(nullptr, from) {}
  inline StateChange(StateChange&& from) noexcept
      : StateChange(nullptr, std::move(from)) {}
  inline StateChange& operator=(const StateChange& from) {
    CopyFrom(from);
    return *this;
  }
  inline StateChange& operator=(StateChange&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StateChange& default_instance() {
    return *internal_default_instance();
  }
  static inline const StateChange* internal_default_instance() {
    return reinterpret_cast<const StateChange*>(
        &_StateChange_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(StateChange& a, StateChange& b) { a.Swap(&b); }
  inline void Swap(StateChange* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StateChange* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StateChange* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<StateChange>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const StateChange& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const StateChange& from) { StateChange::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(StateChange* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "remote.StateChange"; }

 protected:
  explicit StateChange(::google::protobuf::Arena* arena);
  StateChange(::google::protobuf::Arena* arena, const StateChange& from);
  StateChange(::google::protobuf::Arena* arena, StateChange&& from) noexcept
      : StateChange(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kChangesFieldNumber = 4,
    kTxsFieldNumber = 5,
    kBlockHashFieldNumber = 3,
    kBlockHeightFieldNumber = 2,
    kDirectionFieldNumber = 1,
  };
  // repeated .remote.AccountChange changes = 4;
  int changes_size() const;
  private:
  int _internal_changes_size() const;

  public:
  void clear_changes() ;
  ::remote::AccountChange* mutable_changes(int index);
  ::google::protobuf::RepeatedPtrField<::remote::AccountChange>* mutable_changes();

  private:
  const ::google::protobuf::RepeatedPtrField<::remote::AccountChange>& _internal_changes() const;
  ::google::protobuf::RepeatedPtrField<::remote::AccountChange>* _internal_mutable_changes();
  public:
  const ::remote::AccountChange& changes(int index) const;
  ::remote::AccountChange* add_changes();
  const ::google::protobuf::RepeatedPtrField<::remote::AccountChange>& changes() const;
  // repeated bytes txs = 5;
  int txs_size() const;
  private:
  int _internal_txs_size() const;

  public:
  void clear_txs() ;
  const std::string& txs(int index) const;
  std::string* mutable_txs(int index);
  void set_txs(int index, const std::string& value);
  void set_txs(int index, std::string&& value);
  void set_txs(int index, const char* value);
  void set_txs(int index, const void* value, std::size_t size);
  void set_txs(int index, absl::string_view value);
  std::string* add_txs();
  void add_txs(const std::string& value);
  void add_txs(std::string&& value);
  void add_txs(const char* value);
  void add_txs(const void* value, std::size_t size);
  void add_txs(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& txs() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_txs();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_txs() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_txs();

  public:
  // .types.H256 block_hash = 3;
  bool has_block_hash() const;
  void clear_block_hash() ;
  const ::types::H256& block_hash() const;
  PROTOBUF_NODISCARD ::types::H256* release_block_hash();
  ::types::H256* mutable_block_hash();
  void set_allocated_block_hash(::types::H256* value);
  void unsafe_arena_set_allocated_block_hash(::types::H256* value);
  ::types::H256* unsafe_arena_release_block_hash();

  private:
  const ::types::H256& _internal_block_hash() const;
  ::types::H256* _internal_mutable_block_hash();

  public:
  // uint64 block_height = 2;
  void clear_block_height() ;
  ::uint64_t block_height() const;
  void set_block_height(::uint64_t value);

  private:
  ::uint64_t _internal_block_height() const;
  void _internal_set_block_height(::uint64_t value);

  public:
  // .remote.Direction direction = 1;
  void clear_direction() ;
  ::remote::Direction direction() const;
  void set_direction(::remote::Direction value);

  private:
  ::remote::Direction _internal_direction() const;
  void _internal_set_direction(::remote::Direction value);

  public:
  // @@protoc_insertion_point(class_scope:remote.StateChange)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 2,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_StateChange_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const StateChange& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::remote::AccountChange > changes_;
    ::google::protobuf::RepeatedPtrField<std::string> txs_;
    ::types::H256* block_hash_;
    ::uint64_t block_height_;
    int direction_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_remote_2fkv_2eproto;
};
// -------------------------------------------------------------------

class StateChangeBatch final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:remote.StateChangeBatch) */ {
 public:
  inline StateChangeBatch() : StateChangeBatch(nullptr) {}
  ~StateChangeBatch() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR StateChangeBatch(
      ::google::protobuf::internal::ConstantInitialized);

  inline StateChangeBatch(const StateChangeBatch& from) : StateChangeBatch(nullptr, from) {}
  inline StateChangeBatch(StateChangeBatch&& from) noexcept
      : StateChangeBatch(nullptr, std::move(from)) {}
  inline StateChangeBatch& operator=(const StateChangeBatch& from) {
    CopyFrom(from);
    return *this;
  }
  inline StateChangeBatch& operator=(StateChangeBatch&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StateChangeBatch& default_instance() {
    return *internal_default_instance();
  }
  static inline const StateChangeBatch* internal_default_instance() {
    return reinterpret_cast<const StateChangeBatch*>(
        &_StateChangeBatch_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(StateChangeBatch& a, StateChangeBatch& b) { a.Swap(&b); }
  inline void Swap(StateChangeBatch* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StateChangeBatch* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StateChangeBatch* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<StateChangeBatch>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const StateChangeBatch& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const StateChangeBatch& from) { StateChangeBatch::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(StateChangeBatch* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "remote.StateChangeBatch"; }

 protected:
  explicit StateChangeBatch(::google::protobuf::Arena* arena);
  StateChangeBatch(::google::protobuf::Arena* arena, const StateChangeBatch& from);
  StateChangeBatch(::google::protobuf::Arena* arena, StateChangeBatch&& from) noexcept
      : StateChangeBatch(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kChangeBatchFieldNumber = 2,
    kStateVersionIdFieldNumber = 1,
    kPendingBlockBaseFeeFieldNumber = 3,
    kBlockGasLimitFieldNumber = 4,
    kFinalizedBlockFieldNumber = 5,
    kPendingBlobFeePerGasFieldNumber = 6,
  };
  // repeated .remote.StateChange change_batch = 2;
  int change_batch_size() const;
  private:
  int _internal_change_batch_size() const;

  public:
  void clear_change_batch() ;
  ::remote::StateChange* mutable_change_batch(int index);
  ::google::protobuf::RepeatedPtrField<::remote::StateChange>* mutable_change_batch();

  private:
  const ::google::protobuf::RepeatedPtrField<::remote::StateChange>& _internal_change_batch() const;
  ::google::protobuf::RepeatedPtrField<::remote::StateChange>* _internal_mutable_change_batch();
  public:
  const ::remote::StateChange& change_batch(int index) const;
  ::remote::StateChange* add_change_batch();
  const ::google::protobuf::RepeatedPtrField<::remote::StateChange>& change_batch() const;
  // uint64 state_version_id = 1;
  void clear_state_version_id() ;
  ::uint64_t state_version_id() const;
  void set_state_version_id(::uint64_t value);

  private:
  ::uint64_t _internal_state_version_id() const;
  void _internal_set_state_version_id(::uint64_t value);

  public:
  // uint64 pending_block_base_fee = 3;
  void clear_pending_block_base_fee() ;
  ::uint64_t pending_block_base_fee() const;
  void set_pending_block_base_fee(::uint64_t value);

  private:
  ::uint64_t _internal_pending_block_base_fee() const;
  void _internal_set_pending_block_base_fee(::uint64_t value);

  public:
  // uint64 block_gas_limit = 4;
  void clear_block_gas_limit() ;
  ::uint64_t block_gas_limit() const;
  void set_block_gas_limit(::uint64_t value);

  private:
  ::uint64_t _internal_block_gas_limit() const;
  void _internal_set_block_gas_limit(::uint64_t value);

  public:
  // uint64 finalized_block = 5;
  void clear_finalized_block() ;
  ::uint64_t finalized_block() const;
  void set_finalized_block(::uint64_t value);

  private:
  ::uint64_t _internal_finalized_block() const;
  void _internal_set_finalized_block(::uint64_t value);

  public:
  // uint64 pending_blob_fee_per_gas = 6;
  void clear_pending_blob_fee_per_gas() ;
  ::uint64_t pending_blob_fee_per_gas() const;
  void set_pending_blob_fee_per_gas(::uint64_t value);

  private:
  ::uint64_t _internal_pending_blob_fee_per_gas() const;
  void _internal_set_pending_blob_fee_per_gas(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:remote.StateChangeBatch)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_StateChangeBatch_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const StateChangeBatch& from_msg);
    ::google::protobuf::RepeatedPtrField< ::remote::StateChange > change_batch_;
    ::uint64_t state_version_id_;
    ::uint64_t pending_block_base_fee_;
    ::uint64_t block_gas_limit_;
    ::uint64_t finalized_block_;
    ::uint64_t pending_blob_fee_per_gas_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_remote_2fkv_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// Cursor

// .remote.Op op = 1;
inline void Cursor::clear_op() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.op_ = 0;
}
inline ::remote::Op Cursor::op() const {
  // @@protoc_insertion_point(field_get:remote.Cursor.op)
  return _internal_op();
}
inline void Cursor::set_op(::remote::Op value) {
  _internal_set_op(value);
  // @@protoc_insertion_point(field_set:remote.Cursor.op)
}
inline ::remote::Op Cursor::_internal_op() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::remote::Op>(_impl_.op_);
}
inline void Cursor::_internal_set_op(::remote::Op value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.op_ = value;
}

// string bucket_name = 2;
inline void Cursor::clear_bucket_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bucket_name_.ClearToEmpty();
}
inline const std::string& Cursor::bucket_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:remote.Cursor.bucket_name)
  return _internal_bucket_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Cursor::set_bucket_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bucket_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:remote.Cursor.bucket_name)
}
inline std::string* Cursor::mutable_bucket_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_bucket_name();
  // @@protoc_insertion_point(field_mutable:remote.Cursor.bucket_name)
  return _s;
}
inline const std::string& Cursor::_internal_bucket_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.bucket_name_.Get();
}
inline void Cursor::_internal_set_bucket_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bucket_name_.Set(value, GetArena());
}
inline std::string* Cursor::_internal_mutable_bucket_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.bucket_name_.Mutable( GetArena());
}
inline std::string* Cursor::release_bucket_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:remote.Cursor.bucket_name)
  return _impl_.bucket_name_.Release();
}
inline void Cursor::set_allocated_bucket_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bucket_name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.bucket_name_.IsDefault()) {
          _impl_.bucket_name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:remote.Cursor.bucket_name)
}

// uint32 cursor = 3;
inline void Cursor::clear_cursor() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cursor_ = 0u;
}
inline ::uint32_t Cursor::cursor() const {
  // @@protoc_insertion_point(field_get:remote.Cursor.cursor)
  return _internal_cursor();
}
inline void Cursor::set_cursor(::uint32_t value) {
  _internal_set_cursor(value);
  // @@protoc_insertion_point(field_set:remote.Cursor.cursor)
}
inline ::uint32_t Cursor::_internal_cursor() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.cursor_;
}
inline void Cursor::_internal_set_cursor(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cursor_ = value;
}

// bytes k = 4;
inline void Cursor::clear_k() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.k_.ClearToEmpty();
}
inline const std::string& Cursor::k() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:remote.Cursor.k)
  return _internal_k();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Cursor::set_k(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.k_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:remote.Cursor.k)
}
inline std::string* Cursor::mutable_k() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_k();
  // @@protoc_insertion_point(field_mutable:remote.Cursor.k)
  return _s;
}
inline const std::string& Cursor::_internal_k() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.k_.Get();
}
inline void Cursor::_internal_set_k(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.k_.Set(value, GetArena());
}
inline std::string* Cursor::_internal_mutable_k() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.k_.Mutable( GetArena());
}
inline std::string* Cursor::release_k() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:remote.Cursor.k)
  return _impl_.k_.Release();
}
inline void Cursor::set_allocated_k(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.k_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.k_.IsDefault()) {
          _impl_.k_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:remote.Cursor.k)
}

// bytes v = 5;
inline void Cursor::clear_v() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.v_.ClearToEmpty();
}
inline const std::string& Cursor::v() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:remote.Cursor.v)
  return _internal_v();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Cursor::set_v(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.v_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:remote.Cursor.v)
}
inline std::string* Cursor::mutable_v() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_v();
  // @@protoc_insertion_point(field_mutable:remote.Cursor.v)
  return _s;
}
inline const std::string& Cursor::_internal_v() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.v_.Get();
}
inline void Cursor::_internal_set_v(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.v_.Set(value, GetArena());
}
inline std::string* Cursor::_internal_mutable_v() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.v_.Mutable( GetArena());
}
inline std::string* Cursor::release_v() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:remote.Cursor.v)
  return _impl_.v_.Release();
}
inline void Cursor::set_allocated_v(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.v_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.v_.IsDefault()) {
          _impl_.v_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:remote.Cursor.v)
}

// -------------------------------------------------------------------

// Pair

// bytes k = 1;
inline void Pair::clear_k() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.k_.ClearToEmpty();
}
inline const std::string& Pair::k() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:remote.Pair.k)
  return _internal_k();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Pair::set_k(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.k_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:remote.Pair.k)
}
inline std::string* Pair::mutable_k() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_k();
  // @@protoc_insertion_point(field_mutable:remote.Pair.k)
  return _s;
}
inline const std::string& Pair::_internal_k() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.k_.Get();
}
inline void Pair::_internal_set_k(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.k_.Set(value, GetArena());
}
inline std::string* Pair::_internal_mutable_k() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.k_.Mutable( GetArena());
}
inline std::string* Pair::release_k() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:remote.Pair.k)
  return _impl_.k_.Release();
}
inline void Pair::set_allocated_k(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.k_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.k_.IsDefault()) {
          _impl_.k_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:remote.Pair.k)
}

// bytes v = 2;
inline void Pair::clear_v() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.v_.ClearToEmpty();
}
inline const std::string& Pair::v() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:remote.Pair.v)
  return _internal_v();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Pair::set_v(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.v_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:remote.Pair.v)
}
inline std::string* Pair::mutable_v() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_v();
  // @@protoc_insertion_point(field_mutable:remote.Pair.v)
  return _s;
}
inline const std::string& Pair::_internal_v() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.v_.Get();
}
inline void Pair::_internal_set_v(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.v_.Set(value, GetArena());
}
inline std::string* Pair::_internal_mutable_v() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.v_.Mutable( GetArena());
}
inline std::string* Pair::release_v() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:remote.Pair.v)
  return _impl_.v_.Release();
}
inline void Pair::set_allocated_v(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.v_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.v_.IsDefault()) {
          _impl_.v_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:remote.Pair.v)
}

// uint32 cursor_id = 3;
inline void Pair::clear_cursor_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cursor_id_ = 0u;
}
inline ::uint32_t Pair::cursor_id() const {
  // @@protoc_insertion_point(field_get:remote.Pair.cursor_id)
  return _internal_cursor_id();
}
inline void Pair::set_cursor_id(::uint32_t value) {
  _internal_set_cursor_id(value);
  // @@protoc_insertion_point(field_set:remote.Pair.cursor_id)
}
inline ::uint32_t Pair::_internal_cursor_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.cursor_id_;
}
inline void Pair::_internal_set_cursor_id(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cursor_id_ = value;
}

// uint64 view_id = 4;
inline void Pair::clear_view_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.view_id_ = ::uint64_t{0u};
}
inline ::uint64_t Pair::view_id() const {
  // @@protoc_insertion_point(field_get:remote.Pair.view_id)
  return _internal_view_id();
}
inline void Pair::set_view_id(::uint64_t value) {
  _internal_set_view_id(value);
  // @@protoc_insertion_point(field_set:remote.Pair.view_id)
}
inline ::uint64_t Pair::_internal_view_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.view_id_;
}
inline void Pair::_internal_set_view_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.view_id_ = value;
}

// uint64 tx_id = 5;
inline void Pair::clear_tx_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tx_id_ = ::uint64_t{0u};
}
inline ::uint64_t Pair::tx_id() const {
  // @@protoc_insertion_point(field_get:remote.Pair.tx_id)
  return _internal_tx_id();
}
inline void Pair::set_tx_id(::uint64_t value) {
  _internal_set_tx_id(value);
  // @@protoc_insertion_point(field_set:remote.Pair.tx_id)
}
inline ::uint64_t Pair::_internal_tx_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.tx_id_;
}
inline void Pair::_internal_set_tx_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tx_id_ = value;
}

// -------------------------------------------------------------------

// StorageChange

// .types.H256 location = 1;
inline bool StorageChange::has_location() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.location_ != nullptr);
  return value;
}
inline const ::types::H256& StorageChange::_internal_location() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::types::H256* p = _impl_.location_;
  return p != nullptr ? *p : reinterpret_cast<const ::types::H256&>(::types::_H256_default_instance_);
}
inline const ::types::H256& StorageChange::location() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:remote.StorageChange.location)
  return _internal_location();
}
inline void StorageChange::unsafe_arena_set_allocated_location(::types::H256* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.location_);
  }
  _impl_.location_ = reinterpret_cast<::types::H256*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:remote.StorageChange.location)
}
inline ::types::H256* StorageChange::release_location() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::types::H256* released = _impl_.location_;
  _impl_.location_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::types::H256* StorageChange::unsafe_arena_release_location() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:remote.StorageChange.location)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::types::H256* temp = _impl_.location_;
  _impl_.location_ = nullptr;
  return temp;
}
inline ::types::H256* StorageChange::_internal_mutable_location() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.location_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::types::H256>(GetArena());
    _impl_.location_ = reinterpret_cast<::types::H256*>(p);
  }
  return _impl_.location_;
}
inline ::types::H256* StorageChange::mutable_location() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::types::H256* _msg = _internal_mutable_location();
  // @@protoc_insertion_point(field_mutable:remote.StorageChange.location)
  return _msg;
}
inline void StorageChange::set_allocated_location(::types::H256* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.location_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.location_ = reinterpret_cast<::types::H256*>(value);
  // @@protoc_insertion_point(field_set_allocated:remote.StorageChange.location)
}

// bytes data = 2;
inline void StorageChange::clear_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.ClearToEmpty();
}
inline const std::string& StorageChange::data() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:remote.StorageChange.data)
  return _internal_data();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void StorageChange::set_data(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:remote.StorageChange.data)
}
inline std::string* StorageChange::mutable_data() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_data();
  // @@protoc_insertion_point(field_mutable:remote.StorageChange.data)
  return _s;
}
inline const std::string& StorageChange::_internal_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.data_.Get();
}
inline void StorageChange::_internal_set_data(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.Set(value, GetArena());
}
inline std::string* StorageChange::_internal_mutable_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.data_.Mutable( GetArena());
}
inline std::string* StorageChange::release_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:remote.StorageChange.data)
  return _impl_.data_.Release();
}
inline void StorageChange::set_allocated_data(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.data_.IsDefault()) {
          _impl_.data_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:remote.StorageChange.data)
}

// -------------------------------------------------------------------

// AccountChange

// .types.H160 address = 1;
inline bool AccountChange::has_address() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.address_ != nullptr);
  return value;
}
inline const ::types::H160& AccountChange::_internal_address() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::types::H160* p = _impl_.address_;
  return p != nullptr ? *p : reinterpret_cast<const ::types::H160&>(::types::_H160_default_instance_);
}
inline const ::types::H160& AccountChange::address() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:remote.AccountChange.address)
  return _internal_address();
}
inline void AccountChange::unsafe_arena_set_allocated_address(::types::H160* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.address_);
  }
  _impl_.address_ = reinterpret_cast<::types::H160*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:remote.AccountChange.address)
}
inline ::types::H160* AccountChange::release_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::types::H160* released = _impl_.address_;
  _impl_.address_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::types::H160* AccountChange::unsafe_arena_release_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:remote.AccountChange.address)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::types::H160* temp = _impl_.address_;
  _impl_.address_ = nullptr;
  return temp;
}
inline ::types::H160* AccountChange::_internal_mutable_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.address_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::types::H160>(GetArena());
    _impl_.address_ = reinterpret_cast<::types::H160*>(p);
  }
  return _impl_.address_;
}
inline ::types::H160* AccountChange::mutable_address() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::types::H160* _msg = _internal_mutable_address();
  // @@protoc_insertion_point(field_mutable:remote.AccountChange.address)
  return _msg;
}
inline void AccountChange::set_allocated_address(::types::H160* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.address_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.address_ = reinterpret_cast<::types::H160*>(value);
  // @@protoc_insertion_point(field_set_allocated:remote.AccountChange.address)
}

// uint64 incarnation = 2;
inline void AccountChange::clear_incarnation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.incarnation_ = ::uint64_t{0u};
}
inline ::uint64_t AccountChange::incarnation() const {
  // @@protoc_insertion_point(field_get:remote.AccountChange.incarnation)
  return _internal_incarnation();
}
inline void AccountChange::set_incarnation(::uint64_t value) {
  _internal_set_incarnation(value);
  // @@protoc_insertion_point(field_set:remote.AccountChange.incarnation)
}
inline ::uint64_t AccountChange::_internal_incarnation() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.incarnation_;
}
inline void AccountChange::_internal_set_incarnation(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.incarnation_ = value;
}

// .remote.Action action = 3;
inline void AccountChange::clear_action() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.action_ = 0;
}
inline ::remote::Action AccountChange::action() const {
  // @@protoc_insertion_point(field_get:remote.AccountChange.action)
  return _internal_action();
}
inline void AccountChange::set_action(::remote::Action value) {
  _internal_set_action(value);
  // @@protoc_insertion_point(field_set:remote.AccountChange.action)
}
inline ::remote::Action AccountChange::_internal_action() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::remote::Action>(_impl_.action_);
}
inline void AccountChange::_internal_set_action(::remote::Action value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.action_ = value;
}

// bytes data = 4;
inline void AccountChange::clear_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.ClearToEmpty();
}
inline const std::string& AccountChange::data() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:remote.AccountChange.data)
  return _internal_data();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AccountChange::set_data(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:remote.AccountChange.data)
}
inline std::string* AccountChange::mutable_data() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_data();
  // @@protoc_insertion_point(field_mutable:remote.AccountChange.data)
  return _s;
}
inline const std::string& AccountChange::_internal_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.data_.Get();
}
inline void AccountChange::_internal_set_data(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.Set(value, GetArena());
}
inline std::string* AccountChange::_internal_mutable_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.data_.Mutable( GetArena());
}
inline std::string* AccountChange::release_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:remote.AccountChange.data)
  return _impl_.data_.Release();
}
inline void AccountChange::set_allocated_data(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.data_.IsDefault()) {
          _impl_.data_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:remote.AccountChange.data)
}

// bytes code = 5;
inline void AccountChange::clear_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.code_.ClearToEmpty();
}
inline const std::string& AccountChange::code() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:remote.AccountChange.code)
  return _internal_code();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AccountChange::set_code(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.code_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:remote.AccountChange.code)
}
inline std::string* AccountChange::mutable_code() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_code();
  // @@protoc_insertion_point(field_mutable:remote.AccountChange.code)
  return _s;
}
inline const std::string& AccountChange::_internal_code() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.code_.Get();
}
inline void AccountChange::_internal_set_code(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.code_.Set(value, GetArena());
}
inline std::string* AccountChange::_internal_mutable_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.code_.Mutable( GetArena());
}
inline std::string* AccountChange::release_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:remote.AccountChange.code)
  return _impl_.code_.Release();
}
inline void AccountChange::set_allocated_code(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.code_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.code_.IsDefault()) {
          _impl_.code_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:remote.AccountChange.code)
}

// repeated .remote.StorageChange storage_changes = 6;
inline int AccountChange::_internal_storage_changes_size() const {
  return _internal_storage_changes().size();
}
inline int AccountChange::storage_changes_size() const {
  return _internal_storage_changes_size();
}
inline void AccountChange::clear_storage_changes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.storage_changes_.Clear();
}
inline ::remote::StorageChange* AccountChange::mutable_storage_changes(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:remote.AccountChange.storage_changes)
  return _internal_mutable_storage_changes()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::remote::StorageChange>* AccountChange::mutable_storage_changes()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:remote.AccountChange.storage_changes)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_storage_changes();
}
inline const ::remote::StorageChange& AccountChange::storage_changes(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:remote.AccountChange.storage_changes)
  return _internal_storage_changes().Get(index);
}
inline ::remote::StorageChange* AccountChange::add_storage_changes() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::remote::StorageChange* _add = _internal_mutable_storage_changes()->Add();
  // @@protoc_insertion_point(field_add:remote.AccountChange.storage_changes)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::remote::StorageChange>& AccountChange::storage_changes() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:remote.AccountChange.storage_changes)
  return _internal_storage_changes();
}
inline const ::google::protobuf::RepeatedPtrField<::remote::StorageChange>&
AccountChange::_internal_storage_changes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.storage_changes_;
}
inline ::google::protobuf::RepeatedPtrField<::remote::StorageChange>*
AccountChange::_internal_mutable_storage_changes() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.storage_changes_;
}

// -------------------------------------------------------------------

// StateChangeBatch

// uint64 state_version_id = 1;
inline void StateChangeBatch::clear_state_version_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.state_version_id_ = ::uint64_t{0u};
}
inline ::uint64_t StateChangeBatch::state_version_id() const {
  // @@protoc_insertion_point(field_get:remote.StateChangeBatch.state_version_id)
  return _internal_state_version_id();
}
inline void StateChangeBatch::set_state_version_id(::uint64_t value) {
  _internal_set_state_version_id(value);
  // @@protoc_insertion_point(field_set:remote.StateChangeBatch.state_version_id)
}
inline ::uint64_t StateChangeBatch::_internal_state_version_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.state_version_id_;
}
inline void StateChangeBatch::_internal_set_state_version_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.state_version_id_ = value;
}

// repeated .remote.StateChange change_batch = 2;
inline int StateChangeBatch::_internal_change_batch_size() const {
  return _internal_change_batch().size();
}
inline int StateChangeBatch::change_batch_size() const {
  return _internal_change_batch_size();
}
inline void StateChangeBatch::clear_change_batch() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.change_batch_.Clear();
}
inline ::remote::StateChange* StateChangeBatch::mutable_change_batch(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:remote.StateChangeBatch.change_batch)
  return _internal_mutable_change_batch()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::remote::StateChange>* StateChangeBatch::mutable_change_batch()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:remote.StateChangeBatch.change_batch)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_change_batch();
}
inline const ::remote::StateChange& StateChangeBatch::change_batch(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:remote.StateChangeBatch.change_batch)
  return _internal_change_batch().Get(index);
}
inline ::remote::StateChange* StateChangeBatch::add_change_batch() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::remote::StateChange* _add = _internal_mutable_change_batch()->Add();
  // @@protoc_insertion_point(field_add:remote.StateChangeBatch.change_batch)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::remote::StateChange>& StateChangeBatch::change_batch() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:remote.StateChangeBatch.change_batch)
  return _internal_change_batch();
}
inline const ::google::protobuf::RepeatedPtrField<::remote::StateChange>&
StateChangeBatch::_internal_change_batch() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.change_batch_;
}
inline ::google::protobuf::RepeatedPtrField<::remote::StateChange>*
StateChangeBatch::_internal_mutable_change_batch() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.change_batch_;
}

// uint64 pending_block_base_fee = 3;
inline void StateChangeBatch::clear_pending_block_base_fee() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pending_block_base_fee_ = ::uint64_t{0u};
}
inline ::uint64_t StateChangeBatch::pending_block_base_fee() const {
  // @@protoc_insertion_point(field_get:remote.StateChangeBatch.pending_block_base_fee)
  return _internal_pending_block_base_fee();
}
inline void StateChangeBatch::set_pending_block_base_fee(::uint64_t value) {
  _internal_set_pending_block_base_fee(value);
  // @@protoc_insertion_point(field_set:remote.StateChangeBatch.pending_block_base_fee)
}
inline ::uint64_t StateChangeBatch::_internal_pending_block_base_fee() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pending_block_base_fee_;
}
inline void StateChangeBatch::_internal_set_pending_block_base_fee(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pending_block_base_fee_ = value;
}

// uint64 block_gas_limit = 4;
inline void StateChangeBatch::clear_block_gas_limit() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.block_gas_limit_ = ::uint64_t{0u};
}
inline ::uint64_t StateChangeBatch::block_gas_limit() const {
  // @@protoc_insertion_point(field_get:remote.StateChangeBatch.block_gas_limit)
  return _internal_block_gas_limit();
}
inline void StateChangeBatch::set_block_gas_limit(::uint64_t value) {
  _internal_set_block_gas_limit(value);
  // @@protoc_insertion_point(field_set:remote.StateChangeBatch.block_gas_limit)
}
inline ::uint64_t StateChangeBatch::_internal_block_gas_limit() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.block_gas_limit_;
}
inline void StateChangeBatch::_internal_set_block_gas_limit(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.block_gas_limit_ = value;
}

// uint64 finalized_block = 5;
inline void StateChangeBatch::clear_finalized_block() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.finalized_block_ = ::uint64_t{0u};
}
inline ::uint64_t StateChangeBatch::finalized_block() const {
  // @@protoc_insertion_point(field_get:remote.StateChangeBatch.finalized_block)
  return _internal_finalized_block();
}
inline void StateChangeBatch::set_finalized_block(::uint64_t value) {
  _internal_set_finalized_block(value);
  // @@protoc_insertion_point(field_set:remote.StateChangeBatch.finalized_block)
}
inline ::uint64_t StateChangeBatch::_internal_finalized_block() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.finalized_block_;
}
inline void StateChangeBatch::_internal_set_finalized_block(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.finalized_block_ = value;
}

// uint64 pending_blob_fee_per_gas = 6;
inline void StateChangeBatch::clear_pending_blob_fee_per_gas() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pending_blob_fee_per_gas_ = ::uint64_t{0u};
}
inline ::uint64_t StateChangeBatch::pending_blob_fee_per_gas() const {
  // @@protoc_insertion_point(field_get:remote.StateChangeBatch.pending_blob_fee_per_gas)
  return _internal_pending_blob_fee_per_gas();
}
inline void StateChangeBatch::set_pending_blob_fee_per_gas(::uint64_t value) {
  _internal_set_pending_blob_fee_per_gas(value);
  // @@protoc_insertion_point(field_set:remote.StateChangeBatch.pending_blob_fee_per_gas)
}
inline ::uint64_t StateChangeBatch::_internal_pending_blob_fee_per_gas() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pending_blob_fee_per_gas_;
}
inline void StateChangeBatch::_internal_set_pending_blob_fee_per_gas(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pending_blob_fee_per_gas_ = value;
}

// -------------------------------------------------------------------

// StateChange

// .remote.Direction direction = 1;
inline void StateChange::clear_direction() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.direction_ = 0;
}
inline ::remote::Direction StateChange::direction() const {
  // @@protoc_insertion_point(field_get:remote.StateChange.direction)
  return _internal_direction();
}
inline void StateChange::set_direction(::remote::Direction value) {
  _internal_set_direction(value);
  // @@protoc_insertion_point(field_set:remote.StateChange.direction)
}
inline ::remote::Direction StateChange::_internal_direction() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::remote::Direction>(_impl_.direction_);
}
inline void StateChange::_internal_set_direction(::remote::Direction value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.direction_ = value;
}

// uint64 block_height = 2;
inline void StateChange::clear_block_height() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.block_height_ = ::uint64_t{0u};
}
inline ::uint64_t StateChange::block_height() const {
  // @@protoc_insertion_point(field_get:remote.StateChange.block_height)
  return _internal_block_height();
}
inline void StateChange::set_block_height(::uint64_t value) {
  _internal_set_block_height(value);
  // @@protoc_insertion_point(field_set:remote.StateChange.block_height)
}
inline ::uint64_t StateChange::_internal_block_height() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.block_height_;
}
inline void StateChange::_internal_set_block_height(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.block_height_ = value;
}

// .types.H256 block_hash = 3;
inline bool StateChange::has_block_hash() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.block_hash_ != nullptr);
  return value;
}
inline const ::types::H256& StateChange::_internal_block_hash() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::types::H256* p = _impl_.block_hash_;
  return p != nullptr ? *p : reinterpret_cast<const ::types::H256&>(::types::_H256_default_instance_);
}
inline const ::types::H256& StateChange::block_hash() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:remote.StateChange.block_hash)
  return _internal_block_hash();
}
inline void StateChange::unsafe_arena_set_allocated_block_hash(::types::H256* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.block_hash_);
  }
  _impl_.block_hash_ = reinterpret_cast<::types::H256*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:remote.StateChange.block_hash)
}
inline ::types::H256* StateChange::release_block_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::types::H256* released = _impl_.block_hash_;
  _impl_.block_hash_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::types::H256* StateChange::unsafe_arena_release_block_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:remote.StateChange.block_hash)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::types::H256* temp = _impl_.block_hash_;
  _impl_.block_hash_ = nullptr;
  return temp;
}
inline ::types::H256* StateChange::_internal_mutable_block_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.block_hash_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::types::H256>(GetArena());
    _impl_.block_hash_ = reinterpret_cast<::types::H256*>(p);
  }
  return _impl_.block_hash_;
}
inline ::types::H256* StateChange::mutable_block_hash() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::types::H256* _msg = _internal_mutable_block_hash();
  // @@protoc_insertion_point(field_mutable:remote.StateChange.block_hash)
  return _msg;
}
inline void StateChange::set_allocated_block_hash(::types::H256* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.block_hash_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.block_hash_ = reinterpret_cast<::types::H256*>(value);
  // @@protoc_insertion_point(field_set_allocated:remote.StateChange.block_hash)
}

// repeated .remote.AccountChange changes = 4;
inline int StateChange::_internal_changes_size() const {
  return _internal_changes().size();
}
inline int StateChange::changes_size() const {
  return _internal_changes_size();
}
inline void StateChange::clear_changes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.changes_.Clear();
}
inline ::remote::AccountChange* StateChange::mutable_changes(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:remote.StateChange.changes)
  return _internal_mutable_changes()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::remote::AccountChange>* StateChange::mutable_changes()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:remote.StateChange.changes)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_changes();
}
inline const ::remote::AccountChange& StateChange::changes(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:remote.StateChange.changes)
  return _internal_changes().Get(index);
}
inline ::remote::AccountChange* StateChange::add_changes() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::remote::AccountChange* _add = _internal_mutable_changes()->Add();
  // @@protoc_insertion_point(field_add:remote.StateChange.changes)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::remote::AccountChange>& StateChange::changes() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:remote.StateChange.changes)
  return _internal_changes();
}
inline const ::google::protobuf::RepeatedPtrField<::remote::AccountChange>&
StateChange::_internal_changes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.changes_;
}
inline ::google::protobuf::RepeatedPtrField<::remote::AccountChange>*
StateChange::_internal_mutable_changes() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.changes_;
}

// repeated bytes txs = 5;
inline int StateChange::_internal_txs_size() const {
  return _internal_txs().size();
}
inline int StateChange::txs_size() const {
  return _internal_txs_size();
}
inline void StateChange::clear_txs() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.txs_.Clear();
}
inline std::string* StateChange::add_txs()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_txs()->Add();
  // @@protoc_insertion_point(field_add_mutable:remote.StateChange.txs)
  return _s;
}
inline const std::string& StateChange::txs(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:remote.StateChange.txs)
  return _internal_txs().Get(index);
}
inline std::string* StateChange::mutable_txs(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:remote.StateChange.txs)
  return _internal_mutable_txs()->Mutable(index);
}
inline void StateChange::set_txs(int index, const std::string& value) {
  _internal_mutable_txs()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:remote.StateChange.txs)
}
inline void StateChange::set_txs(int index, std::string&& value) {
  _internal_mutable_txs()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:remote.StateChange.txs)
}
inline void StateChange::set_txs(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_txs()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:remote.StateChange.txs)
}
inline void StateChange::set_txs(int index, const void* value,
                              std::size_t size) {
  _internal_mutable_txs()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:remote.StateChange.txs)
}
inline void StateChange::set_txs(int index, absl::string_view value) {
  _internal_mutable_txs()->Mutable(index)->assign(
      value.data(), value.size());
  // @@protoc_insertion_point(field_set_string_piece:remote.StateChange.txs)
}
inline void StateChange::add_txs(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_txs()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:remote.StateChange.txs)
}
inline void StateChange::add_txs(std::string&& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_txs()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:remote.StateChange.txs)
}
inline void StateChange::add_txs(const char* value) {
  ABSL_DCHECK(value != nullptr);
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_txs()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:remote.StateChange.txs)
}
inline void StateChange::add_txs(const void* value, std::size_t size) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_txs()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:remote.StateChange.txs)
}
inline void StateChange::add_txs(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_txs()->Add()->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_add_string_piece:remote.StateChange.txs)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
StateChange::txs() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:remote.StateChange.txs)
  return _internal_txs();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
StateChange::mutable_txs() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:remote.StateChange.txs)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_txs();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
StateChange::_internal_txs() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.txs_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
StateChange::_internal_mutable_txs() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.txs_;
}

// -------------------------------------------------------------------

// StateChangeRequest

// bool with_storage = 1;
inline void StateChangeRequest::clear_with_storage() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.with_storage_ = false;
}
inline bool StateChangeRequest::with_storage() const {
  // @@protoc_insertion_point(field_get:remote.StateChangeRequest.with_storage)
  return _internal_with_storage();
}
inline void StateChangeRequest::set_with_storage(bool value) {
  _internal_set_with_storage(value);
  // @@protoc_insertion_point(field_set:remote.StateChangeRequest.with_storage)
}
inline bool StateChangeRequest::_internal_with_storage() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.with_storage_;
}
inline void StateChangeRequest::_internal_set_with_storage(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.with_storage_ = value;
}

// bool with_transactions = 2;
inline void StateChangeRequest::clear_with_transactions() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.with_transactions_ = false;
}
inline bool StateChangeRequest::with_transactions() const {
  // @@protoc_insertion_point(field_get:remote.StateChangeRequest.with_transactions)
  return _internal_with_transactions();
}
inline void StateChangeRequest::set_with_transactions(bool value) {
  _internal_set_with_transactions(value);
  // @@protoc_insertion_point(field_set:remote.StateChangeRequest.with_transactions)
}
inline bool StateChangeRequest::_internal_with_transactions() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.with_transactions_;
}
inline void StateChangeRequest::_internal_set_with_transactions(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.with_transactions_ = value;
}

// -------------------------------------------------------------------

// SnapshotsRequest

// -------------------------------------------------------------------

// SnapshotsReply

// repeated string blocks_files = 1;
inline int SnapshotsReply::_internal_blocks_files_size() const {
  return _internal_blocks_files().size();
}
inline int SnapshotsReply::blocks_files_size() const {
  return _internal_blocks_files_size();
}
inline void SnapshotsReply::clear_blocks_files() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.blocks_files_.Clear();
}
inline std::string* SnapshotsReply::add_blocks_files()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_blocks_files()->Add();
  // @@protoc_insertion_point(field_add_mutable:remote.SnapshotsReply.blocks_files)
  return _s;
}
inline const std::string& SnapshotsReply::blocks_files(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:remote.SnapshotsReply.blocks_files)
  return _internal_blocks_files().Get(index);
}
inline std::string* SnapshotsReply::mutable_blocks_files(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:remote.SnapshotsReply.blocks_files)
  return _internal_mutable_blocks_files()->Mutable(index);
}
inline void SnapshotsReply::set_blocks_files(int index, const std::string& value) {
  _internal_mutable_blocks_files()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:remote.SnapshotsReply.blocks_files)
}
inline void SnapshotsReply::set_blocks_files(int index, std::string&& value) {
  _internal_mutable_blocks_files()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:remote.SnapshotsReply.blocks_files)
}
inline void SnapshotsReply::set_blocks_files(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_blocks_files()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:remote.SnapshotsReply.blocks_files)
}
inline void SnapshotsReply::set_blocks_files(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_blocks_files()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:remote.SnapshotsReply.blocks_files)
}
inline void SnapshotsReply::set_blocks_files(int index, absl::string_view value) {
  _internal_mutable_blocks_files()->Mutable(index)->assign(
      value.data(), value.size());
  // @@protoc_insertion_point(field_set_string_piece:remote.SnapshotsReply.blocks_files)
}
inline void SnapshotsReply::add_blocks_files(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_blocks_files()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:remote.SnapshotsReply.blocks_files)
}
inline void SnapshotsReply::add_blocks_files(std::string&& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_blocks_files()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:remote.SnapshotsReply.blocks_files)
}
inline void SnapshotsReply::add_blocks_files(const char* value) {
  ABSL_DCHECK(value != nullptr);
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_blocks_files()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:remote.SnapshotsReply.blocks_files)
}
inline void SnapshotsReply::add_blocks_files(const char* value, std::size_t size) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_blocks_files()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:remote.SnapshotsReply.blocks_files)
}
inline void SnapshotsReply::add_blocks_files(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_blocks_files()->Add()->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_add_string_piece:remote.SnapshotsReply.blocks_files)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
SnapshotsReply::blocks_files() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:remote.SnapshotsReply.blocks_files)
  return _internal_blocks_files();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
SnapshotsReply::mutable_blocks_files() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:remote.SnapshotsReply.blocks_files)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_blocks_files();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
SnapshotsReply::_internal_blocks_files() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.blocks_files_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
SnapshotsReply::_internal_mutable_blocks_files() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.blocks_files_;
}

// repeated string history_files = 2;
inline int SnapshotsReply::_internal_history_files_size() const {
  return _internal_history_files().size();
}
inline int SnapshotsReply::history_files_size() const {
  return _internal_history_files_size();
}
inline void SnapshotsReply::clear_history_files() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.history_files_.Clear();
}
inline std::string* SnapshotsReply::add_history_files()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_history_files()->Add();
  // @@protoc_insertion_point(field_add_mutable:remote.SnapshotsReply.history_files)
  return _s;
}
inline const std::string& SnapshotsReply::history_files(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:remote.SnapshotsReply.history_files)
  return _internal_history_files().Get(index);
}
inline std::string* SnapshotsReply::mutable_history_files(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:remote.SnapshotsReply.history_files)
  return _internal_mutable_history_files()->Mutable(index);
}
inline void SnapshotsReply::set_history_files(int index, const std::string& value) {
  _internal_mutable_history_files()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:remote.SnapshotsReply.history_files)
}
inline void SnapshotsReply::set_history_files(int index, std::string&& value) {
  _internal_mutable_history_files()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:remote.SnapshotsReply.history_files)
}
inline void SnapshotsReply::set_history_files(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_history_files()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:remote.SnapshotsReply.history_files)
}
inline void SnapshotsReply::set_history_files(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_history_files()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:remote.SnapshotsReply.history_files)
}
inline void SnapshotsReply::set_history_files(int index, absl::string_view value) {
  _internal_mutable_history_files()->Mutable(index)->assign(
      value.data(), value.size());
  // @@protoc_insertion_point(field_set_string_piece:remote.SnapshotsReply.history_files)
}
inline void SnapshotsReply::add_history_files(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_history_files()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:remote.SnapshotsReply.history_files)
}
inline void SnapshotsReply::add_history_files(std::string&& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_history_files()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:remote.SnapshotsReply.history_files)
}
inline void SnapshotsReply::add_history_files(const char* value) {
  ABSL_DCHECK(value != nullptr);
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_history_files()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:remote.SnapshotsReply.history_files)
}
inline void SnapshotsReply::add_history_files(const char* value, std::size_t size) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_history_files()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:remote.SnapshotsReply.history_files)
}
inline void SnapshotsReply::add_history_files(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_history_files()->Add()->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_add_string_piece:remote.SnapshotsReply.history_files)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
SnapshotsReply::history_files() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:remote.SnapshotsReply.history_files)
  return _internal_history_files();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
SnapshotsReply::mutable_history_files() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:remote.SnapshotsReply.history_files)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_history_files();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
SnapshotsReply::_internal_history_files() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.history_files_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
SnapshotsReply::_internal_mutable_history_files() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.history_files_;
}

// -------------------------------------------------------------------

// RangeReq

// uint64 tx_id = 1;
inline void RangeReq::clear_tx_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tx_id_ = ::uint64_t{0u};
}
inline ::uint64_t RangeReq::tx_id() const {
  // @@protoc_insertion_point(field_get:remote.RangeReq.tx_id)
  return _internal_tx_id();
}
inline void RangeReq::set_tx_id(::uint64_t value) {
  _internal_set_tx_id(value);
  // @@protoc_insertion_point(field_set:remote.RangeReq.tx_id)
}
inline ::uint64_t RangeReq::_internal_tx_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.tx_id_;
}
inline void RangeReq::_internal_set_tx_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tx_id_ = value;
}

// string table = 2;
inline void RangeReq::clear_table() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.table_.ClearToEmpty();
}
inline const std::string& RangeReq::table() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:remote.RangeReq.table)
  return _internal_table();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void RangeReq::set_table(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.table_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:remote.RangeReq.table)
}
inline std::string* RangeReq::mutable_table() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_table();
  // @@protoc_insertion_point(field_mutable:remote.RangeReq.table)
  return _s;
}
inline const std::string& RangeReq::_internal_table() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.table_.Get();
}
inline void RangeReq::_internal_set_table(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.table_.Set(value, GetArena());
}
inline std::string* RangeReq::_internal_mutable_table() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.table_.Mutable( GetArena());
}
inline std::string* RangeReq::release_table() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:remote.RangeReq.table)
  return _impl_.table_.Release();
}
inline void RangeReq::set_allocated_table(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.table_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.table_.IsDefault()) {
          _impl_.table_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:remote.RangeReq.table)
}

// bytes from_prefix = 3;
inline void RangeReq::clear_from_prefix() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.from_prefix_.ClearToEmpty();
}
inline const std::string& RangeReq::from_prefix() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:remote.RangeReq.from_prefix)
  return _internal_from_prefix();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void RangeReq::set_from_prefix(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.from_prefix_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:remote.RangeReq.from_prefix)
}
inline std::string* RangeReq::mutable_from_prefix() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_from_prefix();
  // @@protoc_insertion_point(field_mutable:remote.RangeReq.from_prefix)
  return _s;
}
inline const std::string& RangeReq::_internal_from_prefix() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.from_prefix_.Get();
}
inline void RangeReq::_internal_set_from_prefix(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.from_prefix_.Set(value, GetArena());
}
inline std::string* RangeReq::_internal_mutable_from_prefix() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.from_prefix_.Mutable( GetArena());
}
inline std::string* RangeReq::release_from_prefix() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:remote.RangeReq.from_prefix)
  return _impl_.from_prefix_.Release();
}
inline void RangeReq::set_allocated_from_prefix(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.from_prefix_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.from_prefix_.IsDefault()) {
          _impl_.from_prefix_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:remote.RangeReq.from_prefix)
}

// bytes to_prefix = 4;
inline void RangeReq::clear_to_prefix() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.to_prefix_.ClearToEmpty();
}
inline const std::string& RangeReq::to_prefix() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:remote.RangeReq.to_prefix)
  return _internal_to_prefix();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void RangeReq::set_to_prefix(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.to_prefix_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:remote.RangeReq.to_prefix)
}
inline std::string* RangeReq::mutable_to_prefix() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_to_prefix();
  // @@protoc_insertion_point(field_mutable:remote.RangeReq.to_prefix)
  return _s;
}
inline const std::string& RangeReq::_internal_to_prefix() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.to_prefix_.Get();
}
inline void RangeReq::_internal_set_to_prefix(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.to_prefix_.Set(value, GetArena());
}
inline std::string* RangeReq::_internal_mutable_to_prefix() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.to_prefix_.Mutable( GetArena());
}
inline std::string* RangeReq::release_to_prefix() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:remote.RangeReq.to_prefix)
  return _impl_.to_prefix_.Release();
}
inline void RangeReq::set_allocated_to_prefix(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.to_prefix_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.to_prefix_.IsDefault()) {
          _impl_.to_prefix_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:remote.RangeReq.to_prefix)
}

// bool order_ascend = 5;
inline void RangeReq::clear_order_ascend() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.order_ascend_ = false;
}
inline bool RangeReq::order_ascend() const {
  // @@protoc_insertion_point(field_get:remote.RangeReq.order_ascend)
  return _internal_order_ascend();
}
inline void RangeReq::set_order_ascend(bool value) {
  _internal_set_order_ascend(value);
  // @@protoc_insertion_point(field_set:remote.RangeReq.order_ascend)
}
inline bool RangeReq::_internal_order_ascend() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.order_ascend_;
}
inline void RangeReq::_internal_set_order_ascend(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.order_ascend_ = value;
}

// sint64 limit = 6;
inline void RangeReq::clear_limit() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.limit_ = ::int64_t{0};
}
inline ::int64_t RangeReq::limit() const {
  // @@protoc_insertion_point(field_get:remote.RangeReq.limit)
  return _internal_limit();
}
inline void RangeReq::set_limit(::int64_t value) {
  _internal_set_limit(value);
  // @@protoc_insertion_point(field_set:remote.RangeReq.limit)
}
inline ::int64_t RangeReq::_internal_limit() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.limit_;
}
inline void RangeReq::_internal_set_limit(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.limit_ = value;
}

// int32 page_size = 7;
inline void RangeReq::clear_page_size() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.page_size_ = 0;
}
inline ::int32_t RangeReq::page_size() const {
  // @@protoc_insertion_point(field_get:remote.RangeReq.page_size)
  return _internal_page_size();
}
inline void RangeReq::set_page_size(::int32_t value) {
  _internal_set_page_size(value);
  // @@protoc_insertion_point(field_set:remote.RangeReq.page_size)
}
inline ::int32_t RangeReq::_internal_page_size() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.page_size_;
}
inline void RangeReq::_internal_set_page_size(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.page_size_ = value;
}

// string page_token = 8;
inline void RangeReq::clear_page_token() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.page_token_.ClearToEmpty();
}
inline const std::string& RangeReq::page_token() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:remote.RangeReq.page_token)
  return _internal_page_token();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void RangeReq::set_page_token(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.page_token_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:remote.RangeReq.page_token)
}
inline std::string* RangeReq::mutable_page_token() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_page_token();
  // @@protoc_insertion_point(field_mutable:remote.RangeReq.page_token)
  return _s;
}
inline const std::string& RangeReq::_internal_page_token() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.page_token_.Get();
}
inline void RangeReq::_internal_set_page_token(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.page_token_.Set(value, GetArena());
}
inline std::string* RangeReq::_internal_mutable_page_token() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.page_token_.Mutable( GetArena());
}
inline std::string* RangeReq::release_page_token() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:remote.RangeReq.page_token)
  return _impl_.page_token_.Release();
}
inline void RangeReq::set_allocated_page_token(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.page_token_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.page_token_.IsDefault()) {
          _impl_.page_token_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:remote.RangeReq.page_token)
}

// -------------------------------------------------------------------

// GetLatestReq

// uint64 tx_id = 1;
inline void GetLatestReq::clear_tx_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tx_id_ = ::uint64_t{0u};
}
inline ::uint64_t GetLatestReq::tx_id() const {
  // @@protoc_insertion_point(field_get:remote.GetLatestReq.tx_id)
  return _internal_tx_id();
}
inline void GetLatestReq::set_tx_id(::uint64_t value) {
  _internal_set_tx_id(value);
  // @@protoc_insertion_point(field_set:remote.GetLatestReq.tx_id)
}
inline ::uint64_t GetLatestReq::_internal_tx_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.tx_id_;
}
inline void GetLatestReq::_internal_set_tx_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tx_id_ = value;
}

// string table = 2;
inline void GetLatestReq::clear_table() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.table_.ClearToEmpty();
}
inline const std::string& GetLatestReq::table() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:remote.GetLatestReq.table)
  return _internal_table();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetLatestReq::set_table(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.table_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:remote.GetLatestReq.table)
}
inline std::string* GetLatestReq::mutable_table() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_table();
  // @@protoc_insertion_point(field_mutable:remote.GetLatestReq.table)
  return _s;
}
inline const std::string& GetLatestReq::_internal_table() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.table_.Get();
}
inline void GetLatestReq::_internal_set_table(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.table_.Set(value, GetArena());
}
inline std::string* GetLatestReq::_internal_mutable_table() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.table_.Mutable( GetArena());
}
inline std::string* GetLatestReq::release_table() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:remote.GetLatestReq.table)
  return _impl_.table_.Release();
}
inline void GetLatestReq::set_allocated_table(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.table_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.table_.IsDefault()) {
          _impl_.table_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:remote.GetLatestReq.table)
}

// bytes k = 3;
inline void GetLatestReq::clear_k() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.k_.ClearToEmpty();
}
inline const std::string& GetLatestReq::k() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:remote.GetLatestReq.k)
  return _internal_k();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetLatestReq::set_k(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.k_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:remote.GetLatestReq.k)
}
inline std::string* GetLatestReq::mutable_k() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_k();
  // @@protoc_insertion_point(field_mutable:remote.GetLatestReq.k)
  return _s;
}
inline const std::string& GetLatestReq::_internal_k() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.k_.Get();
}
inline void GetLatestReq::_internal_set_k(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.k_.Set(value, GetArena());
}
inline std::string* GetLatestReq::_internal_mutable_k() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.k_.Mutable( GetArena());
}
inline std::string* GetLatestReq::release_k() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:remote.GetLatestReq.k)
  return _impl_.k_.Release();
}
inline void GetLatestReq::set_allocated_k(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.k_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.k_.IsDefault()) {
          _impl_.k_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:remote.GetLatestReq.k)
}

// uint64 ts = 4;
inline void GetLatestReq::clear_ts() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ts_ = ::uint64_t{0u};
}
inline ::uint64_t GetLatestReq::ts() const {
  // @@protoc_insertion_point(field_get:remote.GetLatestReq.ts)
  return _internal_ts();
}
inline void GetLatestReq::set_ts(::uint64_t value) {
  _internal_set_ts(value);
  // @@protoc_insertion_point(field_set:remote.GetLatestReq.ts)
}
inline ::uint64_t GetLatestReq::_internal_ts() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ts_;
}
inline void GetLatestReq::_internal_set_ts(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ts_ = value;
}

// bytes k2 = 5;
inline void GetLatestReq::clear_k2() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.k2_.ClearToEmpty();
}
inline const std::string& GetLatestReq::k2() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:remote.GetLatestReq.k2)
  return _internal_k2();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetLatestReq::set_k2(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.k2_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:remote.GetLatestReq.k2)
}
inline std::string* GetLatestReq::mutable_k2() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_k2();
  // @@protoc_insertion_point(field_mutable:remote.GetLatestReq.k2)
  return _s;
}
inline const std::string& GetLatestReq::_internal_k2() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.k2_.Get();
}
inline void GetLatestReq::_internal_set_k2(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.k2_.Set(value, GetArena());
}
inline std::string* GetLatestReq::_internal_mutable_k2() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.k2_.Mutable( GetArena());
}
inline std::string* GetLatestReq::release_k2() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:remote.GetLatestReq.k2)
  return _impl_.k2_.Release();
}
inline void GetLatestReq::set_allocated_k2(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.k2_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.k2_.IsDefault()) {
          _impl_.k2_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:remote.GetLatestReq.k2)
}

// bool latest = 6;
inline void GetLatestReq::clear_latest() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.latest_ = false;
}
inline bool GetLatestReq::latest() const {
  // @@protoc_insertion_point(field_get:remote.GetLatestReq.latest)
  return _internal_latest();
}
inline void GetLatestReq::set_latest(bool value) {
  _internal_set_latest(value);
  // @@protoc_insertion_point(field_set:remote.GetLatestReq.latest)
}
inline bool GetLatestReq::_internal_latest() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.latest_;
}
inline void GetLatestReq::_internal_set_latest(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.latest_ = value;
}

// -------------------------------------------------------------------

// GetLatestReply

// bytes v = 1;
inline void GetLatestReply::clear_v() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.v_.ClearToEmpty();
}
inline const std::string& GetLatestReply::v() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:remote.GetLatestReply.v)
  return _internal_v();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetLatestReply::set_v(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.v_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:remote.GetLatestReply.v)
}
inline std::string* GetLatestReply::mutable_v() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_v();
  // @@protoc_insertion_point(field_mutable:remote.GetLatestReply.v)
  return _s;
}
inline const std::string& GetLatestReply::_internal_v() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.v_.Get();
}
inline void GetLatestReply::_internal_set_v(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.v_.Set(value, GetArena());
}
inline std::string* GetLatestReply::_internal_mutable_v() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.v_.Mutable( GetArena());
}
inline std::string* GetLatestReply::release_v() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:remote.GetLatestReply.v)
  return _impl_.v_.Release();
}
inline void GetLatestReply::set_allocated_v(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.v_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.v_.IsDefault()) {
          _impl_.v_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:remote.GetLatestReply.v)
}

// bool ok = 2;
inline void GetLatestReply::clear_ok() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ok_ = false;
}
inline bool GetLatestReply::ok() const {
  // @@protoc_insertion_point(field_get:remote.GetLatestReply.ok)
  return _internal_ok();
}
inline void GetLatestReply::set_ok(bool value) {
  _internal_set_ok(value);
  // @@protoc_insertion_point(field_set:remote.GetLatestReply.ok)
}
inline bool GetLatestReply::_internal_ok() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ok_;
}
inline void GetLatestReply::_internal_set_ok(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ok_ = value;
}

// -------------------------------------------------------------------

// HistorySeekReq

// uint64 tx_id = 1;
inline void HistorySeekReq::clear_tx_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tx_id_ = ::uint64_t{0u};
}
inline ::uint64_t HistorySeekReq::tx_id() const {
  // @@protoc_insertion_point(field_get:remote.HistorySeekReq.tx_id)
  return _internal_tx_id();
}
inline void HistorySeekReq::set_tx_id(::uint64_t value) {
  _internal_set_tx_id(value);
  // @@protoc_insertion_point(field_set:remote.HistorySeekReq.tx_id)
}
inline ::uint64_t HistorySeekReq::_internal_tx_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.tx_id_;
}
inline void HistorySeekReq::_internal_set_tx_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tx_id_ = value;
}

// string table = 2;
inline void HistorySeekReq::clear_table() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.table_.ClearToEmpty();
}
inline const std::string& HistorySeekReq::table() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:remote.HistorySeekReq.table)
  return _internal_table();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void HistorySeekReq::set_table(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.table_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:remote.HistorySeekReq.table)
}
inline std::string* HistorySeekReq::mutable_table() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_table();
  // @@protoc_insertion_point(field_mutable:remote.HistorySeekReq.table)
  return _s;
}
inline const std::string& HistorySeekReq::_internal_table() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.table_.Get();
}
inline void HistorySeekReq::_internal_set_table(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.table_.Set(value, GetArena());
}
inline std::string* HistorySeekReq::_internal_mutable_table() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.table_.Mutable( GetArena());
}
inline std::string* HistorySeekReq::release_table() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:remote.HistorySeekReq.table)
  return _impl_.table_.Release();
}
inline void HistorySeekReq::set_allocated_table(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.table_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.table_.IsDefault()) {
          _impl_.table_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:remote.HistorySeekReq.table)
}

// bytes k = 3;
inline void HistorySeekReq::clear_k() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.k_.ClearToEmpty();
}
inline const std::string& HistorySeekReq::k() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:remote.HistorySeekReq.k)
  return _internal_k();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void HistorySeekReq::set_k(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.k_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:remote.HistorySeekReq.k)
}
inline std::string* HistorySeekReq::mutable_k() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_k();
  // @@protoc_insertion_point(field_mutable:remote.HistorySeekReq.k)
  return _s;
}
inline const std::string& HistorySeekReq::_internal_k() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.k_.Get();
}
inline void HistorySeekReq::_internal_set_k(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.k_.Set(value, GetArena());
}
inline std::string* HistorySeekReq::_internal_mutable_k() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.k_.Mutable( GetArena());
}
inline std::string* HistorySeekReq::release_k() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:remote.HistorySeekReq.k)
  return _impl_.k_.Release();
}
inline void HistorySeekReq::set_allocated_k(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.k_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.k_.IsDefault()) {
          _impl_.k_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:remote.HistorySeekReq.k)
}

// uint64 ts = 4;
inline void HistorySeekReq::clear_ts() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ts_ = ::uint64_t{0u};
}
inline ::uint64_t HistorySeekReq::ts() const {
  // @@protoc_insertion_point(field_get:remote.HistorySeekReq.ts)
  return _internal_ts();
}
inline void HistorySeekReq::set_ts(::uint64_t value) {
  _internal_set_ts(value);
  // @@protoc_insertion_point(field_set:remote.HistorySeekReq.ts)
}
inline ::uint64_t HistorySeekReq::_internal_ts() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ts_;
}
inline void HistorySeekReq::_internal_set_ts(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ts_ = value;
}

// -------------------------------------------------------------------

// HistorySeekReply

// bytes v = 1;
inline void HistorySeekReply::clear_v() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.v_.ClearToEmpty();
}
inline const std::string& HistorySeekReply::v() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:remote.HistorySeekReply.v)
  return _internal_v();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void HistorySeekReply::set_v(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.v_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:remote.HistorySeekReply.v)
}
inline std::string* HistorySeekReply::mutable_v() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_v();
  // @@protoc_insertion_point(field_mutable:remote.HistorySeekReply.v)
  return _s;
}
inline const std::string& HistorySeekReply::_internal_v() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.v_.Get();
}
inline void HistorySeekReply::_internal_set_v(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.v_.Set(value, GetArena());
}
inline std::string* HistorySeekReply::_internal_mutable_v() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.v_.Mutable( GetArena());
}
inline std::string* HistorySeekReply::release_v() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:remote.HistorySeekReply.v)
  return _impl_.v_.Release();
}
inline void HistorySeekReply::set_allocated_v(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.v_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.v_.IsDefault()) {
          _impl_.v_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:remote.HistorySeekReply.v)
}

// bool ok = 2;
inline void HistorySeekReply::clear_ok() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ok_ = false;
}
inline bool HistorySeekReply::ok() const {
  // @@protoc_insertion_point(field_get:remote.HistorySeekReply.ok)
  return _internal_ok();
}
inline void HistorySeekReply::set_ok(bool value) {
  _internal_set_ok(value);
  // @@protoc_insertion_point(field_set:remote.HistorySeekReply.ok)
}
inline bool HistorySeekReply::_internal_ok() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ok_;
}
inline void HistorySeekReply::_internal_set_ok(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ok_ = value;
}

// -------------------------------------------------------------------

// IndexRangeReq

// uint64 tx_id = 1;
inline void IndexRangeReq::clear_tx_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tx_id_ = ::uint64_t{0u};
}
inline ::uint64_t IndexRangeReq::tx_id() const {
  // @@protoc_insertion_point(field_get:remote.IndexRangeReq.tx_id)
  return _internal_tx_id();
}
inline void IndexRangeReq::set_tx_id(::uint64_t value) {
  _internal_set_tx_id(value);
  // @@protoc_insertion_point(field_set:remote.IndexRangeReq.tx_id)
}
inline ::uint64_t IndexRangeReq::_internal_tx_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.tx_id_;
}
inline void IndexRangeReq::_internal_set_tx_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tx_id_ = value;
}

// string table = 2;
inline void IndexRangeReq::clear_table() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.table_.ClearToEmpty();
}
inline const std::string& IndexRangeReq::table() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:remote.IndexRangeReq.table)
  return _internal_table();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void IndexRangeReq::set_table(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.table_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:remote.IndexRangeReq.table)
}
inline std::string* IndexRangeReq::mutable_table() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_table();
  // @@protoc_insertion_point(field_mutable:remote.IndexRangeReq.table)
  return _s;
}
inline const std::string& IndexRangeReq::_internal_table() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.table_.Get();
}
inline void IndexRangeReq::_internal_set_table(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.table_.Set(value, GetArena());
}
inline std::string* IndexRangeReq::_internal_mutable_table() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.table_.Mutable( GetArena());
}
inline std::string* IndexRangeReq::release_table() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:remote.IndexRangeReq.table)
  return _impl_.table_.Release();
}
inline void IndexRangeReq::set_allocated_table(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.table_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.table_.IsDefault()) {
          _impl_.table_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:remote.IndexRangeReq.table)
}

// bytes k = 3;
inline void IndexRangeReq::clear_k() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.k_.ClearToEmpty();
}
inline const std::string& IndexRangeReq::k() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:remote.IndexRangeReq.k)
  return _internal_k();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void IndexRangeReq::set_k(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.k_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:remote.IndexRangeReq.k)
}
inline std::string* IndexRangeReq::mutable_k() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_k();
  // @@protoc_insertion_point(field_mutable:remote.IndexRangeReq.k)
  return _s;
}
inline const std::string& IndexRangeReq::_internal_k() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.k_.Get();
}
inline void IndexRangeReq::_internal_set_k(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.k_.Set(value, GetArena());
}
inline std::string* IndexRangeReq::_internal_mutable_k() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.k_.Mutable( GetArena());
}
inline std::string* IndexRangeReq::release_k() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:remote.IndexRangeReq.k)
  return _impl_.k_.Release();
}
inline void IndexRangeReq::set_allocated_k(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.k_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.k_.IsDefault()) {
          _impl_.k_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:remote.IndexRangeReq.k)
}

// sint64 from_ts = 4;
inline void IndexRangeReq::clear_from_ts() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.from_ts_ = ::int64_t{0};
}
inline ::int64_t IndexRangeReq::from_ts() const {
  // @@protoc_insertion_point(field_get:remote.IndexRangeReq.from_ts)
  return _internal_from_ts();
}
inline void IndexRangeReq::set_from_ts(::int64_t value) {
  _internal_set_from_ts(value);
  // @@protoc_insertion_point(field_set:remote.IndexRangeReq.from_ts)
}
inline ::int64_t IndexRangeReq::_internal_from_ts() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.from_ts_;
}
inline void IndexRangeReq::_internal_set_from_ts(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.from_ts_ = value;
}

// sint64 to_ts = 5;
inline void IndexRangeReq::clear_to_ts() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.to_ts_ = ::int64_t{0};
}
inline ::int64_t IndexRangeReq::to_ts() const {
  // @@protoc_insertion_point(field_get:remote.IndexRangeReq.to_ts)
  return _internal_to_ts();
}
inline void IndexRangeReq::set_to_ts(::int64_t value) {
  _internal_set_to_ts(value);
  // @@protoc_insertion_point(field_set:remote.IndexRangeReq.to_ts)
}
inline ::int64_t IndexRangeReq::_internal_to_ts() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.to_ts_;
}
inline void IndexRangeReq::_internal_set_to_ts(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.to_ts_ = value;
}

// bool order_ascend = 6;
inline void IndexRangeReq::clear_order_ascend() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.order_ascend_ = false;
}
inline bool IndexRangeReq::order_ascend() const {
  // @@protoc_insertion_point(field_get:remote.IndexRangeReq.order_ascend)
  return _internal_order_ascend();
}
inline void IndexRangeReq::set_order_ascend(bool value) {
  _internal_set_order_ascend(value);
  // @@protoc_insertion_point(field_set:remote.IndexRangeReq.order_ascend)
}
inline bool IndexRangeReq::_internal_order_ascend() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.order_ascend_;
}
inline void IndexRangeReq::_internal_set_order_ascend(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.order_ascend_ = value;
}

// sint64 limit = 7;
inline void IndexRangeReq::clear_limit() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.limit_ = ::int64_t{0};
}
inline ::int64_t IndexRangeReq::limit() const {
  // @@protoc_insertion_point(field_get:remote.IndexRangeReq.limit)
  return _internal_limit();
}
inline void IndexRangeReq::set_limit(::int64_t value) {
  _internal_set_limit(value);
  // @@protoc_insertion_point(field_set:remote.IndexRangeReq.limit)
}
inline ::int64_t IndexRangeReq::_internal_limit() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.limit_;
}
inline void IndexRangeReq::_internal_set_limit(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.limit_ = value;
}

// int32 page_size = 8;
inline void IndexRangeReq::clear_page_size() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.page_size_ = 0;
}
inline ::int32_t IndexRangeReq::page_size() const {
  // @@protoc_insertion_point(field_get:remote.IndexRangeReq.page_size)
  return _internal_page_size();
}
inline void IndexRangeReq::set_page_size(::int32_t value) {
  _internal_set_page_size(value);
  // @@protoc_insertion_point(field_set:remote.IndexRangeReq.page_size)
}
inline ::int32_t IndexRangeReq::_internal_page_size() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.page_size_;
}
inline void IndexRangeReq::_internal_set_page_size(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.page_size_ = value;
}

// string page_token = 9;
inline void IndexRangeReq::clear_page_token() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.page_token_.ClearToEmpty();
}
inline const std::string& IndexRangeReq::page_token() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:remote.IndexRangeReq.page_token)
  return _internal_page_token();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void IndexRangeReq::set_page_token(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.page_token_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:remote.IndexRangeReq.page_token)
}
inline std::string* IndexRangeReq::mutable_page_token() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_page_token();
  // @@protoc_insertion_point(field_mutable:remote.IndexRangeReq.page_token)
  return _s;
}
inline const std::string& IndexRangeReq::_internal_page_token() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.page_token_.Get();
}
inline void IndexRangeReq::_internal_set_page_token(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.page_token_.Set(value, GetArena());
}
inline std::string* IndexRangeReq::_internal_mutable_page_token() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.page_token_.Mutable( GetArena());
}
inline std::string* IndexRangeReq::release_page_token() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:remote.IndexRangeReq.page_token)
  return _impl_.page_token_.Release();
}
inline void IndexRangeReq::set_allocated_page_token(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.page_token_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.page_token_.IsDefault()) {
          _impl_.page_token_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:remote.IndexRangeReq.page_token)
}

// -------------------------------------------------------------------

// IndexRangeReply

// repeated uint64 timestamps = 1;
inline int IndexRangeReply::_internal_timestamps_size() const {
  return _internal_timestamps().size();
}
inline int IndexRangeReply::timestamps_size() const {
  return _internal_timestamps_size();
}
inline void IndexRangeReply::clear_timestamps() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamps_.Clear();
}
inline ::uint64_t IndexRangeReply::timestamps(int index) const {
  // @@protoc_insertion_point(field_get:remote.IndexRangeReply.timestamps)
  return _internal_timestamps().Get(index);
}
inline void IndexRangeReply::set_timestamps(int index, ::uint64_t value) {
  _internal_mutable_timestamps()->Set(index, value);
  // @@protoc_insertion_point(field_set:remote.IndexRangeReply.timestamps)
}
inline void IndexRangeReply::add_timestamps(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_timestamps()->Add(value);
  // @@protoc_insertion_point(field_add:remote.IndexRangeReply.timestamps)
}
inline const ::google::protobuf::RepeatedField<::uint64_t>& IndexRangeReply::timestamps() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:remote.IndexRangeReply.timestamps)
  return _internal_timestamps();
}
inline ::google::protobuf::RepeatedField<::uint64_t>* IndexRangeReply::mutable_timestamps()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:remote.IndexRangeReply.timestamps)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_timestamps();
}
inline const ::google::protobuf::RepeatedField<::uint64_t>&
IndexRangeReply::_internal_timestamps() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.timestamps_;
}
inline ::google::protobuf::RepeatedField<::uint64_t>* IndexRangeReply::_internal_mutable_timestamps() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.timestamps_;
}

// string next_page_token = 2;
inline void IndexRangeReply::clear_next_page_token() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.next_page_token_.ClearToEmpty();
}
inline const std::string& IndexRangeReply::next_page_token() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:remote.IndexRangeReply.next_page_token)
  return _internal_next_page_token();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void IndexRangeReply::set_next_page_token(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.next_page_token_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:remote.IndexRangeReply.next_page_token)
}
inline std::string* IndexRangeReply::mutable_next_page_token() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_next_page_token();
  // @@protoc_insertion_point(field_mutable:remote.IndexRangeReply.next_page_token)
  return _s;
}
inline const std::string& IndexRangeReply::_internal_next_page_token() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.next_page_token_.Get();
}
inline void IndexRangeReply::_internal_set_next_page_token(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.next_page_token_.Set(value, GetArena());
}
inline std::string* IndexRangeReply::_internal_mutable_next_page_token() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.next_page_token_.Mutable( GetArena());
}
inline std::string* IndexRangeReply::release_next_page_token() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:remote.IndexRangeReply.next_page_token)
  return _impl_.next_page_token_.Release();
}
inline void IndexRangeReply::set_allocated_next_page_token(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.next_page_token_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.next_page_token_.IsDefault()) {
          _impl_.next_page_token_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:remote.IndexRangeReply.next_page_token)
}

// -------------------------------------------------------------------

// HistoryRangeReq

// uint64 tx_id = 1;
inline void HistoryRangeReq::clear_tx_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tx_id_ = ::uint64_t{0u};
}
inline ::uint64_t HistoryRangeReq::tx_id() const {
  // @@protoc_insertion_point(field_get:remote.HistoryRangeReq.tx_id)
  return _internal_tx_id();
}
inline void HistoryRangeReq::set_tx_id(::uint64_t value) {
  _internal_set_tx_id(value);
  // @@protoc_insertion_point(field_set:remote.HistoryRangeReq.tx_id)
}
inline ::uint64_t HistoryRangeReq::_internal_tx_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.tx_id_;
}
inline void HistoryRangeReq::_internal_set_tx_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tx_id_ = value;
}

// string table = 2;
inline void HistoryRangeReq::clear_table() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.table_.ClearToEmpty();
}
inline const std::string& HistoryRangeReq::table() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:remote.HistoryRangeReq.table)
  return _internal_table();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void HistoryRangeReq::set_table(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.table_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:remote.HistoryRangeReq.table)
}
inline std::string* HistoryRangeReq::mutable_table() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_table();
  // @@protoc_insertion_point(field_mutable:remote.HistoryRangeReq.table)
  return _s;
}
inline const std::string& HistoryRangeReq::_internal_table() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.table_.Get();
}
inline void HistoryRangeReq::_internal_set_table(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.table_.Set(value, GetArena());
}
inline std::string* HistoryRangeReq::_internal_mutable_table() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.table_.Mutable( GetArena());
}
inline std::string* HistoryRangeReq::release_table() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:remote.HistoryRangeReq.table)
  return _impl_.table_.Release();
}
inline void HistoryRangeReq::set_allocated_table(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.table_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.table_.IsDefault()) {
          _impl_.table_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:remote.HistoryRangeReq.table)
}

// sint64 from_ts = 4;
inline void HistoryRangeReq::clear_from_ts() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.from_ts_ = ::int64_t{0};
}
inline ::int64_t HistoryRangeReq::from_ts() const {
  // @@protoc_insertion_point(field_get:remote.HistoryRangeReq.from_ts)
  return _internal_from_ts();
}
inline void HistoryRangeReq::set_from_ts(::int64_t value) {
  _internal_set_from_ts(value);
  // @@protoc_insertion_point(field_set:remote.HistoryRangeReq.from_ts)
}
inline ::int64_t HistoryRangeReq::_internal_from_ts() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.from_ts_;
}
inline void HistoryRangeReq::_internal_set_from_ts(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.from_ts_ = value;
}

// sint64 to_ts = 5;
inline void HistoryRangeReq::clear_to_ts() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.to_ts_ = ::int64_t{0};
}
inline ::int64_t HistoryRangeReq::to_ts() const {
  // @@protoc_insertion_point(field_get:remote.HistoryRangeReq.to_ts)
  return _internal_to_ts();
}
inline void HistoryRangeReq::set_to_ts(::int64_t value) {
  _internal_set_to_ts(value);
  // @@protoc_insertion_point(field_set:remote.HistoryRangeReq.to_ts)
}
inline ::int64_t HistoryRangeReq::_internal_to_ts() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.to_ts_;
}
inline void HistoryRangeReq::_internal_set_to_ts(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.to_ts_ = value;
}

// bool order_ascend = 6;
inline void HistoryRangeReq::clear_order_ascend() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.order_ascend_ = false;
}
inline bool HistoryRangeReq::order_ascend() const {
  // @@protoc_insertion_point(field_get:remote.HistoryRangeReq.order_ascend)
  return _internal_order_ascend();
}
inline void HistoryRangeReq::set_order_ascend(bool value) {
  _internal_set_order_ascend(value);
  // @@protoc_insertion_point(field_set:remote.HistoryRangeReq.order_ascend)
}
inline bool HistoryRangeReq::_internal_order_ascend() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.order_ascend_;
}
inline void HistoryRangeReq::_internal_set_order_ascend(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.order_ascend_ = value;
}

// sint64 limit = 7;
inline void HistoryRangeReq::clear_limit() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.limit_ = ::int64_t{0};
}
inline ::int64_t HistoryRangeReq::limit() const {
  // @@protoc_insertion_point(field_get:remote.HistoryRangeReq.limit)
  return _internal_limit();
}
inline void HistoryRangeReq::set_limit(::int64_t value) {
  _internal_set_limit(value);
  // @@protoc_insertion_point(field_set:remote.HistoryRangeReq.limit)
}
inline ::int64_t HistoryRangeReq::_internal_limit() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.limit_;
}
inline void HistoryRangeReq::_internal_set_limit(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.limit_ = value;
}

// int32 page_size = 8;
inline void HistoryRangeReq::clear_page_size() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.page_size_ = 0;
}
inline ::int32_t HistoryRangeReq::page_size() const {
  // @@protoc_insertion_point(field_get:remote.HistoryRangeReq.page_size)
  return _internal_page_size();
}
inline void HistoryRangeReq::set_page_size(::int32_t value) {
  _internal_set_page_size(value);
  // @@protoc_insertion_point(field_set:remote.HistoryRangeReq.page_size)
}
inline ::int32_t HistoryRangeReq::_internal_page_size() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.page_size_;
}
inline void HistoryRangeReq::_internal_set_page_size(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.page_size_ = value;
}

// string page_token = 9;
inline void HistoryRangeReq::clear_page_token() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.page_token_.ClearToEmpty();
}
inline const std::string& HistoryRangeReq::page_token() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:remote.HistoryRangeReq.page_token)
  return _internal_page_token();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void HistoryRangeReq::set_page_token(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.page_token_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:remote.HistoryRangeReq.page_token)
}
inline std::string* HistoryRangeReq::mutable_page_token() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_page_token();
  // @@protoc_insertion_point(field_mutable:remote.HistoryRangeReq.page_token)
  return _s;
}
inline const std::string& HistoryRangeReq::_internal_page_token() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.page_token_.Get();
}
inline void HistoryRangeReq::_internal_set_page_token(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.page_token_.Set(value, GetArena());
}
inline std::string* HistoryRangeReq::_internal_mutable_page_token() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.page_token_.Mutable( GetArena());
}
inline std::string* HistoryRangeReq::release_page_token() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:remote.HistoryRangeReq.page_token)
  return _impl_.page_token_.Release();
}
inline void HistoryRangeReq::set_allocated_page_token(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.page_token_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.page_token_.IsDefault()) {
          _impl_.page_token_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:remote.HistoryRangeReq.page_token)
}

// -------------------------------------------------------------------

// RangeAsOfReq

// uint64 tx_id = 1;
inline void RangeAsOfReq::clear_tx_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tx_id_ = ::uint64_t{0u};
}
inline ::uint64_t RangeAsOfReq::tx_id() const {
  // @@protoc_insertion_point(field_get:remote.RangeAsOfReq.tx_id)
  return _internal_tx_id();
}
inline void RangeAsOfReq::set_tx_id(::uint64_t value) {
  _internal_set_tx_id(value);
  // @@protoc_insertion_point(field_set:remote.RangeAsOfReq.tx_id)
}
inline ::uint64_t RangeAsOfReq::_internal_tx_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.tx_id_;
}
inline void RangeAsOfReq::_internal_set_tx_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tx_id_ = value;
}

// string table = 2;
inline void RangeAsOfReq::clear_table() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.table_.ClearToEmpty();
}
inline const std::string& RangeAsOfReq::table() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:remote.RangeAsOfReq.table)
  return _internal_table();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void RangeAsOfReq::set_table(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.table_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:remote.RangeAsOfReq.table)
}
inline std::string* RangeAsOfReq::mutable_table() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_table();
  // @@protoc_insertion_point(field_mutable:remote.RangeAsOfReq.table)
  return _s;
}
inline const std::string& RangeAsOfReq::_internal_table() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.table_.Get();
}
inline void RangeAsOfReq::_internal_set_table(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.table_.Set(value, GetArena());
}
inline std::string* RangeAsOfReq::_internal_mutable_table() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.table_.Mutable( GetArena());
}
inline std::string* RangeAsOfReq::release_table() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:remote.RangeAsOfReq.table)
  return _impl_.table_.Release();
}
inline void RangeAsOfReq::set_allocated_table(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.table_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.table_.IsDefault()) {
          _impl_.table_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:remote.RangeAsOfReq.table)
}

// bytes from_key = 3;
inline void RangeAsOfReq::clear_from_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.from_key_.ClearToEmpty();
}
inline const std::string& RangeAsOfReq::from_key() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:remote.RangeAsOfReq.from_key)
  return _internal_from_key();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void RangeAsOfReq::set_from_key(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.from_key_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:remote.RangeAsOfReq.from_key)
}
inline std::string* RangeAsOfReq::mutable_from_key() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_from_key();
  // @@protoc_insertion_point(field_mutable:remote.RangeAsOfReq.from_key)
  return _s;
}
inline const std::string& RangeAsOfReq::_internal_from_key() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.from_key_.Get();
}
inline void RangeAsOfReq::_internal_set_from_key(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.from_key_.Set(value, GetArena());
}
inline std::string* RangeAsOfReq::_internal_mutable_from_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.from_key_.Mutable( GetArena());
}
inline std::string* RangeAsOfReq::release_from_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:remote.RangeAsOfReq.from_key)
  return _impl_.from_key_.Release();
}
inline void RangeAsOfReq::set_allocated_from_key(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.from_key_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.from_key_.IsDefault()) {
          _impl_.from_key_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:remote.RangeAsOfReq.from_key)
}

// bytes to_key = 4;
inline void RangeAsOfReq::clear_to_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.to_key_.ClearToEmpty();
}
inline const std::string& RangeAsOfReq::to_key() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:remote.RangeAsOfReq.to_key)
  return _internal_to_key();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void RangeAsOfReq::set_to_key(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.to_key_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:remote.RangeAsOfReq.to_key)
}
inline std::string* RangeAsOfReq::mutable_to_key() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_to_key();
  // @@protoc_insertion_point(field_mutable:remote.RangeAsOfReq.to_key)
  return _s;
}
inline const std::string& RangeAsOfReq::_internal_to_key() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.to_key_.Get();
}
inline void RangeAsOfReq::_internal_set_to_key(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.to_key_.Set(value, GetArena());
}
inline std::string* RangeAsOfReq::_internal_mutable_to_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.to_key_.Mutable( GetArena());
}
inline std::string* RangeAsOfReq::release_to_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:remote.RangeAsOfReq.to_key)
  return _impl_.to_key_.Release();
}
inline void RangeAsOfReq::set_allocated_to_key(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.to_key_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.to_key_.IsDefault()) {
          _impl_.to_key_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:remote.RangeAsOfReq.to_key)
}

// uint64 ts = 5;
inline void RangeAsOfReq::clear_ts() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ts_ = ::uint64_t{0u};
}
inline ::uint64_t RangeAsOfReq::ts() const {
  // @@protoc_insertion_point(field_get:remote.RangeAsOfReq.ts)
  return _internal_ts();
}
inline void RangeAsOfReq::set_ts(::uint64_t value) {
  _internal_set_ts(value);
  // @@protoc_insertion_point(field_set:remote.RangeAsOfReq.ts)
}
inline ::uint64_t RangeAsOfReq::_internal_ts() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ts_;
}
inline void RangeAsOfReq::_internal_set_ts(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ts_ = value;
}

// bool latest = 6;
inline void RangeAsOfReq::clear_latest() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.latest_ = false;
}
inline bool RangeAsOfReq::latest() const {
  // @@protoc_insertion_point(field_get:remote.RangeAsOfReq.latest)
  return _internal_latest();
}
inline void RangeAsOfReq::set_latest(bool value) {
  _internal_set_latest(value);
  // @@protoc_insertion_point(field_set:remote.RangeAsOfReq.latest)
}
inline bool RangeAsOfReq::_internal_latest() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.latest_;
}
inline void RangeAsOfReq::_internal_set_latest(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.latest_ = value;
}

// bool order_ascend = 7;
inline void RangeAsOfReq::clear_order_ascend() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.order_ascend_ = false;
}
inline bool RangeAsOfReq::order_ascend() const {
  // @@protoc_insertion_point(field_get:remote.RangeAsOfReq.order_ascend)
  return _internal_order_ascend();
}
inline void RangeAsOfReq::set_order_ascend(bool value) {
  _internal_set_order_ascend(value);
  // @@protoc_insertion_point(field_set:remote.RangeAsOfReq.order_ascend)
}
inline bool RangeAsOfReq::_internal_order_ascend() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.order_ascend_;
}
inline void RangeAsOfReq::_internal_set_order_ascend(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.order_ascend_ = value;
}

// sint64 limit = 8;
inline void RangeAsOfReq::clear_limit() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.limit_ = ::int64_t{0};
}
inline ::int64_t RangeAsOfReq::limit() const {
  // @@protoc_insertion_point(field_get:remote.RangeAsOfReq.limit)
  return _internal_limit();
}
inline void RangeAsOfReq::set_limit(::int64_t value) {
  _internal_set_limit(value);
  // @@protoc_insertion_point(field_set:remote.RangeAsOfReq.limit)
}
inline ::int64_t RangeAsOfReq::_internal_limit() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.limit_;
}
inline void RangeAsOfReq::_internal_set_limit(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.limit_ = value;
}

// int32 page_size = 9;
inline void RangeAsOfReq::clear_page_size() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.page_size_ = 0;
}
inline ::int32_t RangeAsOfReq::page_size() const {
  // @@protoc_insertion_point(field_get:remote.RangeAsOfReq.page_size)
  return _internal_page_size();
}
inline void RangeAsOfReq::set_page_size(::int32_t value) {
  _internal_set_page_size(value);
  // @@protoc_insertion_point(field_set:remote.RangeAsOfReq.page_size)
}
inline ::int32_t RangeAsOfReq::_internal_page_size() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.page_size_;
}
inline void RangeAsOfReq::_internal_set_page_size(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.page_size_ = value;
}

// string page_token = 10;
inline void RangeAsOfReq::clear_page_token() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.page_token_.ClearToEmpty();
}
inline const std::string& RangeAsOfReq::page_token() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:remote.RangeAsOfReq.page_token)
  return _internal_page_token();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void RangeAsOfReq::set_page_token(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.page_token_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:remote.RangeAsOfReq.page_token)
}
inline std::string* RangeAsOfReq::mutable_page_token() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_page_token();
  // @@protoc_insertion_point(field_mutable:remote.RangeAsOfReq.page_token)
  return _s;
}
inline const std::string& RangeAsOfReq::_internal_page_token() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.page_token_.Get();
}
inline void RangeAsOfReq::_internal_set_page_token(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.page_token_.Set(value, GetArena());
}
inline std::string* RangeAsOfReq::_internal_mutable_page_token() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.page_token_.Mutable( GetArena());
}
inline std::string* RangeAsOfReq::release_page_token() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:remote.RangeAsOfReq.page_token)
  return _impl_.page_token_.Release();
}
inline void RangeAsOfReq::set_allocated_page_token(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.page_token_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.page_token_.IsDefault()) {
          _impl_.page_token_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:remote.RangeAsOfReq.page_token)
}

// -------------------------------------------------------------------

// Pairs

// repeated bytes keys = 1;
inline int Pairs::_internal_keys_size() const {
  return _internal_keys().size();
}
inline int Pairs::keys_size() const {
  return _internal_keys_size();
}
inline void Pairs::clear_keys() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.keys_.Clear();
}
inline std::string* Pairs::add_keys()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_keys()->Add();
  // @@protoc_insertion_point(field_add_mutable:remote.Pairs.keys)
  return _s;
}
inline const std::string& Pairs::keys(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:remote.Pairs.keys)
  return _internal_keys().Get(index);
}
inline std::string* Pairs::mutable_keys(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:remote.Pairs.keys)
  return _internal_mutable_keys()->Mutable(index);
}
inline void Pairs::set_keys(int index, const std::string& value) {
  _internal_mutable_keys()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:remote.Pairs.keys)
}
inline void Pairs::set_keys(int index, std::string&& value) {
  _internal_mutable_keys()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:remote.Pairs.keys)
}
inline void Pairs::set_keys(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_keys()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:remote.Pairs.keys)
}
inline void Pairs::set_keys(int index, const void* value,
                              std::size_t size) {
  _internal_mutable_keys()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:remote.Pairs.keys)
}
inline void Pairs::set_keys(int index, absl::string_view value) {
  _internal_mutable_keys()->Mutable(index)->assign(
      value.data(), value.size());
  // @@protoc_insertion_point(field_set_string_piece:remote.Pairs.keys)
}
inline void Pairs::add_keys(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_keys()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:remote.Pairs.keys)
}
inline void Pairs::add_keys(std::string&& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_keys()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:remote.Pairs.keys)
}
inline void Pairs::add_keys(const char* value) {
  ABSL_DCHECK(value != nullptr);
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_keys()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:remote.Pairs.keys)
}
inline void Pairs::add_keys(const void* value, std::size_t size) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_keys()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:remote.Pairs.keys)
}
inline void Pairs::add_keys(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_keys()->Add()->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_add_string_piece:remote.Pairs.keys)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
Pairs::keys() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:remote.Pairs.keys)
  return _internal_keys();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
Pairs::mutable_keys() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:remote.Pairs.keys)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_keys();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
Pairs::_internal_keys() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.keys_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
Pairs::_internal_mutable_keys() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.keys_;
}

// repeated bytes values = 2;
inline int Pairs::_internal_values_size() const {
  return _internal_values().size();
}
inline int Pairs::values_size() const {
  return _internal_values_size();
}
inline void Pairs::clear_values() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.values_.Clear();
}
inline std::string* Pairs::add_values()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_values()->Add();
  // @@protoc_insertion_point(field_add_mutable:remote.Pairs.values)
  return _s;
}
inline const std::string& Pairs::values(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:remote.Pairs.values)
  return _internal_values().Get(index);
}
inline std::string* Pairs::mutable_values(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:remote.Pairs.values)
  return _internal_mutable_values()->Mutable(index);
}
inline void Pairs::set_values(int index, const std::string& value) {
  _internal_mutable_values()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:remote.Pairs.values)
}
inline void Pairs::set_values(int index, std::string&& value) {
  _internal_mutable_values()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:remote.Pairs.values)
}
inline void Pairs::set_values(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_values()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:remote.Pairs.values)
}
inline void Pairs::set_values(int index, const void* value,
                              std::size_t size) {
  _internal_mutable_values()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:remote.Pairs.values)
}
inline void Pairs::set_values(int index, absl::string_view value) {
  _internal_mutable_values()->Mutable(index)->assign(
      value.data(), value.size());
  // @@protoc_insertion_point(field_set_string_piece:remote.Pairs.values)
}
inline void Pairs::add_values(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_values()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:remote.Pairs.values)
}
inline void Pairs::add_values(std::string&& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_values()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:remote.Pairs.values)
}
inline void Pairs::add_values(const char* value) {
  ABSL_DCHECK(value != nullptr);
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_values()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:remote.Pairs.values)
}
inline void Pairs::add_values(const void* value, std::size_t size) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_values()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:remote.Pairs.values)
}
inline void Pairs::add_values(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_values()->Add()->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_add_string_piece:remote.Pairs.values)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
Pairs::values() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:remote.Pairs.values)
  return _internal_values();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
Pairs::mutable_values() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:remote.Pairs.values)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_values();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
Pairs::_internal_values() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.values_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
Pairs::_internal_mutable_values() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.values_;
}

// string next_page_token = 3;
inline void Pairs::clear_next_page_token() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.next_page_token_.ClearToEmpty();
}
inline const std::string& Pairs::next_page_token() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:remote.Pairs.next_page_token)
  return _internal_next_page_token();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Pairs::set_next_page_token(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.next_page_token_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:remote.Pairs.next_page_token)
}
inline std::string* Pairs::mutable_next_page_token() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_next_page_token();
  // @@protoc_insertion_point(field_mutable:remote.Pairs.next_page_token)
  return _s;
}
inline const std::string& Pairs::_internal_next_page_token() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.next_page_token_.Get();
}
inline void Pairs::_internal_set_next_page_token(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.next_page_token_.Set(value, GetArena());
}
inline std::string* Pairs::_internal_mutable_next_page_token() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.next_page_token_.Mutable( GetArena());
}
inline std::string* Pairs::release_next_page_token() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:remote.Pairs.next_page_token)
  return _impl_.next_page_token_.Release();
}
inline void Pairs::set_allocated_next_page_token(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.next_page_token_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.next_page_token_.IsDefault()) {
          _impl_.next_page_token_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:remote.Pairs.next_page_token)
}

// -------------------------------------------------------------------

// PairsPagination

// bytes next_key = 1;
inline void PairsPagination::clear_next_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.next_key_.ClearToEmpty();
}
inline const std::string& PairsPagination::next_key() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:remote.PairsPagination.next_key)
  return _internal_next_key();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PairsPagination::set_next_key(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.next_key_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:remote.PairsPagination.next_key)
}
inline std::string* PairsPagination::mutable_next_key() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_next_key();
  // @@protoc_insertion_point(field_mutable:remote.PairsPagination.next_key)
  return _s;
}
inline const std::string& PairsPagination::_internal_next_key() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.next_key_.Get();
}
inline void PairsPagination::_internal_set_next_key(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.next_key_.Set(value, GetArena());
}
inline std::string* PairsPagination::_internal_mutable_next_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.next_key_.Mutable( GetArena());
}
inline std::string* PairsPagination::release_next_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:remote.PairsPagination.next_key)
  return _impl_.next_key_.Release();
}
inline void PairsPagination::set_allocated_next_key(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.next_key_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.next_key_.IsDefault()) {
          _impl_.next_key_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:remote.PairsPagination.next_key)
}

// sint64 limit = 2;
inline void PairsPagination::clear_limit() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.limit_ = ::int64_t{0};
}
inline ::int64_t PairsPagination::limit() const {
  // @@protoc_insertion_point(field_get:remote.PairsPagination.limit)
  return _internal_limit();
}
inline void PairsPagination::set_limit(::int64_t value) {
  _internal_set_limit(value);
  // @@protoc_insertion_point(field_set:remote.PairsPagination.limit)
}
inline ::int64_t PairsPagination::_internal_limit() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.limit_;
}
inline void PairsPagination::_internal_set_limit(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.limit_ = value;
}

// -------------------------------------------------------------------

// IndexPagination

// sint64 next_time_stamp = 1;
inline void IndexPagination::clear_next_time_stamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.next_time_stamp_ = ::int64_t{0};
}
inline ::int64_t IndexPagination::next_time_stamp() const {
  // @@protoc_insertion_point(field_get:remote.IndexPagination.next_time_stamp)
  return _internal_next_time_stamp();
}
inline void IndexPagination::set_next_time_stamp(::int64_t value) {
  _internal_set_next_time_stamp(value);
  // @@protoc_insertion_point(field_set:remote.IndexPagination.next_time_stamp)
}
inline ::int64_t IndexPagination::_internal_next_time_stamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.next_time_stamp_;
}
inline void IndexPagination::_internal_set_next_time_stamp(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.next_time_stamp_ = value;
}

// sint64 limit = 2;
inline void IndexPagination::clear_limit() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.limit_ = ::int64_t{0};
}
inline ::int64_t IndexPagination::limit() const {
  // @@protoc_insertion_point(field_get:remote.IndexPagination.limit)
  return _internal_limit();
}
inline void IndexPagination::set_limit(::int64_t value) {
  _internal_set_limit(value);
  // @@protoc_insertion_point(field_set:remote.IndexPagination.limit)
}
inline ::int64_t IndexPagination::_internal_limit() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.limit_;
}
inline void IndexPagination::_internal_set_limit(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.limit_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace remote


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::remote::Op> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::remote::Op>() {
  return ::remote::Op_descriptor();
}
template <>
struct is_proto_enum<::remote::Action> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::remote::Action>() {
  return ::remote::Action_descriptor();
}
template <>
struct is_proto_enum<::remote::Direction> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::remote::Direction>() {
  return ::remote::Direction_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_remote_2fkv_2eproto_2epb_2eh
