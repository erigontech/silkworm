// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: types/types.proto
// Protobuf C++ Version: 5.27.0

#include "types/types.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace types {

inline constexpr VersionReply::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : major_{0u},
        minor_{0u},
        patch_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR VersionReply::VersionReply(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct VersionReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VersionReplyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~VersionReplyDefaultTypeInternal() {}
  union {
    VersionReply _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VersionReplyDefaultTypeInternal _VersionReply_default_instance_;

inline constexpr RequestsBundle::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : requests_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RequestsBundle::RequestsBundle(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RequestsBundleDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RequestsBundleDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RequestsBundleDefaultTypeInternal() {}
  union {
    RequestsBundle _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RequestsBundleDefaultTypeInternal _RequestsBundle_default_instance_;

inline constexpr PeerInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : caps_{},
        id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        enode_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        enr_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        conn_local_addr_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        conn_remote_addr_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        conn_is_inbound_{false},
        conn_is_trusted_{false},
        conn_is_static_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PeerInfo::PeerInfo(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PeerInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PeerInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PeerInfoDefaultTypeInternal() {}
  union {
    PeerInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PeerInfoDefaultTypeInternal _PeerInfo_default_instance_;

inline constexpr NodeInfoPorts::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : discovery_{0u},
        listener_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR NodeInfoPorts::NodeInfoPorts(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct NodeInfoPortsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NodeInfoPortsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NodeInfoPortsDefaultTypeInternal() {}
  union {
    NodeInfoPorts _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NodeInfoPortsDefaultTypeInternal _NodeInfoPorts_default_instance_;

inline constexpr H128::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : hi_{::uint64_t{0u}},
        lo_{::uint64_t{0u}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR H128::H128(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct H128DefaultTypeInternal {
  PROTOBUF_CONSTEXPR H128DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~H128DefaultTypeInternal() {}
  union {
    H128 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 H128DefaultTypeInternal _H128_default_instance_;

inline constexpr BlobsBundleV1::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : commitments_{},
        blobs_{},
        proofs_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR BlobsBundleV1::BlobsBundleV1(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct BlobsBundleV1DefaultTypeInternal {
  PROTOBUF_CONSTEXPR BlobsBundleV1DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BlobsBundleV1DefaultTypeInternal() {}
  union {
    BlobsBundleV1 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BlobsBundleV1DefaultTypeInternal _BlobsBundleV1_default_instance_;

inline constexpr NodeInfoReply::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        enode_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        enr_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        listener_addr_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        protocols_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        ports_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR NodeInfoReply::NodeInfoReply(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct NodeInfoReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NodeInfoReplyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NodeInfoReplyDefaultTypeInternal() {}
  union {
    NodeInfoReply _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NodeInfoReplyDefaultTypeInternal _NodeInfoReply_default_instance_;

inline constexpr H256::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        hi_{nullptr},
        lo_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR H256::H256(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct H256DefaultTypeInternal {
  PROTOBUF_CONSTEXPR H256DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~H256DefaultTypeInternal() {}
  union {
    H256 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 H256DefaultTypeInternal _H256_default_instance_;

inline constexpr H160::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        hi_{nullptr},
        lo_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR H160::H160(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct H160DefaultTypeInternal {
  PROTOBUF_CONSTEXPR H160DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~H160DefaultTypeInternal() {}
  union {
    H160 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 H160DefaultTypeInternal _H160_default_instance_;

inline constexpr Withdrawal::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        address_{nullptr},
        index_{::uint64_t{0u}},
        validator_index_{::uint64_t{0u}},
        amount_{::uint64_t{0u}} {}

template <typename>
PROTOBUF_CONSTEXPR Withdrawal::Withdrawal(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct WithdrawalDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WithdrawalDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WithdrawalDefaultTypeInternal() {}
  union {
    Withdrawal _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WithdrawalDefaultTypeInternal _Withdrawal_default_instance_;

inline constexpr H512::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        hi_{nullptr},
        lo_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR H512::H512(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct H512DefaultTypeInternal {
  PROTOBUF_CONSTEXPR H512DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~H512DefaultTypeInternal() {}
  union {
    H512 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 H512DefaultTypeInternal _H512_default_instance_;

inline constexpr H1024::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        hi_{nullptr},
        lo_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR H1024::H1024(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct H1024DefaultTypeInternal {
  PROTOBUF_CONSTEXPR H1024DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~H1024DefaultTypeInternal() {}
  union {
    H1024 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 H1024DefaultTypeInternal _H1024_default_instance_;

inline constexpr ExecutionPayloadBodyV1::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : transactions_{},
        withdrawals_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ExecutionPayloadBodyV1::ExecutionPayloadBodyV1(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ExecutionPayloadBodyV1DefaultTypeInternal {
  PROTOBUF_CONSTEXPR ExecutionPayloadBodyV1DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ExecutionPayloadBodyV1DefaultTypeInternal() {}
  union {
    ExecutionPayloadBodyV1 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ExecutionPayloadBodyV1DefaultTypeInternal _ExecutionPayloadBodyV1_default_instance_;

inline constexpr H2048::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        hi_{nullptr},
        lo_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR H2048::H2048(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct H2048DefaultTypeInternal {
  PROTOBUF_CONSTEXPR H2048DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~H2048DefaultTypeInternal() {}
  union {
    H2048 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 H2048DefaultTypeInternal _H2048_default_instance_;

inline constexpr ExecutionPayload::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        transactions_{},
        withdrawals_{},
        extra_data_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        parent_hash_{nullptr},
        coinbase_{nullptr},
        state_root_{nullptr},
        receipt_root_{nullptr},
        logs_bloom_{nullptr},
        prev_randao_{nullptr},
        base_fee_per_gas_{nullptr},
        block_hash_{nullptr},
        block_number_{::uint64_t{0u}},
        gas_limit_{::uint64_t{0u}},
        gas_used_{::uint64_t{0u}},
        timestamp_{::uint64_t{0u}},
        blob_gas_used_{::uint64_t{0u}},
        excess_blob_gas_{::uint64_t{0u}},
        version_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR ExecutionPayload::ExecutionPayload(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ExecutionPayloadDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ExecutionPayloadDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ExecutionPayloadDefaultTypeInternal() {}
  union {
    ExecutionPayload _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ExecutionPayloadDefaultTypeInternal _ExecutionPayload_default_instance_;
}  // namespace types
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_types_2ftypes_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_types_2ftypes_2eproto = nullptr;
const ::uint32_t
    TableStruct_types_2ftypes_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::types::H128, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::types::H128, _impl_.hi_),
        PROTOBUF_FIELD_OFFSET(::types::H128, _impl_.lo_),
        PROTOBUF_FIELD_OFFSET(::types::H160, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::types::H160, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::types::H160, _impl_.hi_),
        PROTOBUF_FIELD_OFFSET(::types::H160, _impl_.lo_),
        0,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::types::H256, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::types::H256, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::types::H256, _impl_.hi_),
        PROTOBUF_FIELD_OFFSET(::types::H256, _impl_.lo_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::types::H512, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::types::H512, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::types::H512, _impl_.hi_),
        PROTOBUF_FIELD_OFFSET(::types::H512, _impl_.lo_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::types::H1024, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::types::H1024, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::types::H1024, _impl_.hi_),
        PROTOBUF_FIELD_OFFSET(::types::H1024, _impl_.lo_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::types::H2048, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::types::H2048, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::types::H2048, _impl_.hi_),
        PROTOBUF_FIELD_OFFSET(::types::H2048, _impl_.lo_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::types::VersionReply, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::types::VersionReply, _impl_.major_),
        PROTOBUF_FIELD_OFFSET(::types::VersionReply, _impl_.minor_),
        PROTOBUF_FIELD_OFFSET(::types::VersionReply, _impl_.patch_),
        PROTOBUF_FIELD_OFFSET(::types::ExecutionPayload, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::types::ExecutionPayload, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::types::ExecutionPayload, _impl_.version_),
        PROTOBUF_FIELD_OFFSET(::types::ExecutionPayload, _impl_.parent_hash_),
        PROTOBUF_FIELD_OFFSET(::types::ExecutionPayload, _impl_.coinbase_),
        PROTOBUF_FIELD_OFFSET(::types::ExecutionPayload, _impl_.state_root_),
        PROTOBUF_FIELD_OFFSET(::types::ExecutionPayload, _impl_.receipt_root_),
        PROTOBUF_FIELD_OFFSET(::types::ExecutionPayload, _impl_.logs_bloom_),
        PROTOBUF_FIELD_OFFSET(::types::ExecutionPayload, _impl_.prev_randao_),
        PROTOBUF_FIELD_OFFSET(::types::ExecutionPayload, _impl_.block_number_),
        PROTOBUF_FIELD_OFFSET(::types::ExecutionPayload, _impl_.gas_limit_),
        PROTOBUF_FIELD_OFFSET(::types::ExecutionPayload, _impl_.gas_used_),
        PROTOBUF_FIELD_OFFSET(::types::ExecutionPayload, _impl_.timestamp_),
        PROTOBUF_FIELD_OFFSET(::types::ExecutionPayload, _impl_.extra_data_),
        PROTOBUF_FIELD_OFFSET(::types::ExecutionPayload, _impl_.base_fee_per_gas_),
        PROTOBUF_FIELD_OFFSET(::types::ExecutionPayload, _impl_.block_hash_),
        PROTOBUF_FIELD_OFFSET(::types::ExecutionPayload, _impl_.transactions_),
        PROTOBUF_FIELD_OFFSET(::types::ExecutionPayload, _impl_.withdrawals_),
        PROTOBUF_FIELD_OFFSET(::types::ExecutionPayload, _impl_.blob_gas_used_),
        PROTOBUF_FIELD_OFFSET(::types::ExecutionPayload, _impl_.excess_blob_gas_),
        ~0u,
        0,
        1,
        2,
        3,
        4,
        5,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        6,
        7,
        ~0u,
        ~0u,
        8,
        9,
        PROTOBUF_FIELD_OFFSET(::types::Withdrawal, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::types::Withdrawal, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::types::Withdrawal, _impl_.index_),
        PROTOBUF_FIELD_OFFSET(::types::Withdrawal, _impl_.validator_index_),
        PROTOBUF_FIELD_OFFSET(::types::Withdrawal, _impl_.address_),
        PROTOBUF_FIELD_OFFSET(::types::Withdrawal, _impl_.amount_),
        ~0u,
        ~0u,
        0,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::types::BlobsBundleV1, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::types::BlobsBundleV1, _impl_.commitments_),
        PROTOBUF_FIELD_OFFSET(::types::BlobsBundleV1, _impl_.blobs_),
        PROTOBUF_FIELD_OFFSET(::types::BlobsBundleV1, _impl_.proofs_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::types::RequestsBundle, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::types::RequestsBundle, _impl_.requests_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::types::NodeInfoPorts, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::types::NodeInfoPorts, _impl_.discovery_),
        PROTOBUF_FIELD_OFFSET(::types::NodeInfoPorts, _impl_.listener_),
        PROTOBUF_FIELD_OFFSET(::types::NodeInfoReply, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::types::NodeInfoReply, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::types::NodeInfoReply, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::types::NodeInfoReply, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::types::NodeInfoReply, _impl_.enode_),
        PROTOBUF_FIELD_OFFSET(::types::NodeInfoReply, _impl_.enr_),
        PROTOBUF_FIELD_OFFSET(::types::NodeInfoReply, _impl_.ports_),
        PROTOBUF_FIELD_OFFSET(::types::NodeInfoReply, _impl_.listener_addr_),
        PROTOBUF_FIELD_OFFSET(::types::NodeInfoReply, _impl_.protocols_),
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        0,
        ~0u,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::types::PeerInfo, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::types::PeerInfo, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::types::PeerInfo, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::types::PeerInfo, _impl_.enode_),
        PROTOBUF_FIELD_OFFSET(::types::PeerInfo, _impl_.enr_),
        PROTOBUF_FIELD_OFFSET(::types::PeerInfo, _impl_.caps_),
        PROTOBUF_FIELD_OFFSET(::types::PeerInfo, _impl_.conn_local_addr_),
        PROTOBUF_FIELD_OFFSET(::types::PeerInfo, _impl_.conn_remote_addr_),
        PROTOBUF_FIELD_OFFSET(::types::PeerInfo, _impl_.conn_is_inbound_),
        PROTOBUF_FIELD_OFFSET(::types::PeerInfo, _impl_.conn_is_trusted_),
        PROTOBUF_FIELD_OFFSET(::types::PeerInfo, _impl_.conn_is_static_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::types::ExecutionPayloadBodyV1, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::types::ExecutionPayloadBodyV1, _impl_.transactions_),
        PROTOBUF_FIELD_OFFSET(::types::ExecutionPayloadBodyV1, _impl_.withdrawals_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::types::H128)},
        {10, 20, -1, sizeof(::types::H160)},
        {22, 32, -1, sizeof(::types::H256)},
        {34, 44, -1, sizeof(::types::H512)},
        {46, 56, -1, sizeof(::types::H1024)},
        {58, 68, -1, sizeof(::types::H2048)},
        {70, -1, -1, sizeof(::types::VersionReply)},
        {81, 107, -1, sizeof(::types::ExecutionPayload)},
        {125, 137, -1, sizeof(::types::Withdrawal)},
        {141, -1, -1, sizeof(::types::BlobsBundleV1)},
        {152, -1, -1, sizeof(::types::RequestsBundle)},
        {161, -1, -1, sizeof(::types::NodeInfoPorts)},
        {171, 186, -1, sizeof(::types::NodeInfoReply)},
        {193, -1, -1, sizeof(::types::PeerInfo)},
        {211, -1, -1, sizeof(::types::ExecutionPayloadBodyV1)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::types::_H128_default_instance_._instance,
    &::types::_H160_default_instance_._instance,
    &::types::_H256_default_instance_._instance,
    &::types::_H512_default_instance_._instance,
    &::types::_H1024_default_instance_._instance,
    &::types::_H2048_default_instance_._instance,
    &::types::_VersionReply_default_instance_._instance,
    &::types::_ExecutionPayload_default_instance_._instance,
    &::types::_Withdrawal_default_instance_._instance,
    &::types::_BlobsBundleV1_default_instance_._instance,
    &::types::_RequestsBundle_default_instance_._instance,
    &::types::_NodeInfoPorts_default_instance_._instance,
    &::types::_NodeInfoReply_default_instance_._instance,
    &::types::_PeerInfo_default_instance_._instance,
    &::types::_ExecutionPayloadBodyV1_default_instance_._instance,
};
const char descriptor_table_protodef_types_2ftypes_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\021types/types.proto\022\005types\032 google/proto"
    "buf/descriptor.proto\"\036\n\004H128\022\n\n\002hi\030\001 \001(\004"
    "\022\n\n\002lo\030\002 \001(\004\"+\n\004H160\022\027\n\002hi\030\001 \001(\0132\013.types"
    ".H128\022\n\n\002lo\030\002 \001(\r\"8\n\004H256\022\027\n\002hi\030\001 \001(\0132\013."
    "types.H128\022\027\n\002lo\030\002 \001(\0132\013.types.H128\"8\n\004H"
    "512\022\027\n\002hi\030\001 \001(\0132\013.types.H256\022\027\n\002lo\030\002 \001(\013"
    "2\013.types.H256\"9\n\005H1024\022\027\n\002hi\030\001 \001(\0132\013.typ"
    "es.H512\022\027\n\002lo\030\002 \001(\0132\013.types.H512\";\n\005H204"
    "8\022\030\n\002hi\030\001 \001(\0132\014.types.H1024\022\030\n\002lo\030\002 \001(\0132"
    "\014.types.H1024\";\n\014VersionReply\022\r\n\005major\030\001"
    " \001(\r\022\r\n\005minor\030\002 \001(\r\022\r\n\005patch\030\003 \001(\r\"\264\004\n\020E"
    "xecutionPayload\022\017\n\007version\030\001 \001(\r\022 \n\013pare"
    "nt_hash\030\002 \001(\0132\013.types.H256\022\035\n\010coinbase\030\003"
    " \001(\0132\013.types.H160\022\037\n\nstate_root\030\004 \001(\0132\013."
    "types.H256\022!\n\014receipt_root\030\005 \001(\0132\013.types"
    ".H256\022 \n\nlogs_bloom\030\006 \001(\0132\014.types.H2048\022"
    " \n\013prev_randao\030\007 \001(\0132\013.types.H256\022\024\n\014blo"
    "ck_number\030\010 \001(\004\022\021\n\tgas_limit\030\t \001(\004\022\020\n\010ga"
    "s_used\030\n \001(\004\022\021\n\ttimestamp\030\013 \001(\004\022\022\n\nextra"
    "_data\030\014 \001(\014\022%\n\020base_fee_per_gas\030\r \001(\0132\013."
    "types.H256\022\037\n\nblock_hash\030\016 \001(\0132\013.types.H"
    "256\022\024\n\014transactions\030\017 \003(\014\022&\n\013withdrawals"
    "\030\020 \003(\0132\021.types.Withdrawal\022\032\n\rblob_gas_us"
    "ed\030\021 \001(\004H\000\210\001\001\022\034\n\017excess_blob_gas\030\022 \001(\004H\001"
    "\210\001\001B\020\n\016_blob_gas_usedB\022\n\020_excess_blob_ga"
    "s\"b\n\nWithdrawal\022\r\n\005index\030\001 \001(\004\022\027\n\017valida"
    "tor_index\030\002 \001(\004\022\034\n\007address\030\003 \001(\0132\013.types"
    ".H160\022\016\n\006amount\030\004 \001(\004\"C\n\rBlobsBundleV1\022\023"
    "\n\013commitments\030\001 \003(\014\022\r\n\005blobs\030\002 \003(\014\022\016\n\006pr"
    "oofs\030\003 \003(\014\"\"\n\016RequestsBundle\022\020\n\010requests"
    "\030\001 \003(\014\"4\n\rNodeInfoPorts\022\021\n\tdiscovery\030\001 \001"
    "(\r\022\020\n\010listener\030\002 \001(\r\"\224\001\n\rNodeInfoReply\022\n"
    "\n\002id\030\001 \001(\t\022\014\n\004name\030\002 \001(\t\022\r\n\005enode\030\003 \001(\t\022"
    "\013\n\003enr\030\004 \001(\t\022#\n\005ports\030\005 \001(\0132\024.types.Node"
    "InfoPorts\022\025\n\rlistener_addr\030\006 \001(\t\022\021\n\tprot"
    "ocols\030\007 \001(\014\"\313\001\n\010PeerInfo\022\n\n\002id\030\001 \001(\t\022\014\n\004"
    "name\030\002 \001(\t\022\r\n\005enode\030\003 \001(\t\022\013\n\003enr\030\004 \001(\t\022\014"
    "\n\004caps\030\005 \003(\t\022\027\n\017conn_local_addr\030\006 \001(\t\022\030\n"
    "\020conn_remote_addr\030\007 \001(\t\022\027\n\017conn_is_inbou"
    "nd\030\010 \001(\010\022\027\n\017conn_is_trusted\030\t \001(\010\022\026\n\016con"
    "n_is_static\030\n \001(\010\"V\n\026ExecutionPayloadBod"
    "yV1\022\024\n\014transactions\030\001 \003(\014\022&\n\013withdrawals"
    "\030\002 \003(\0132\021.types.Withdrawal:=\n\025service_maj"
    "or_version\022\034.google.protobuf.FileOptions"
    "\030\321\206\003 \001(\r:=\n\025service_minor_version\022\034.goog"
    "le.protobuf.FileOptions\030\322\206\003 \001(\r:=\n\025servi"
    "ce_patch_version\022\034.google.protobuf.FileO"
    "ptions\030\323\206\003 \001(\rB\024Z\022./types;typesprotob\006pr"
    "oto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_types_2ftypes_2eproto_deps[1] =
    {
        &::descriptor_table_google_2fprotobuf_2fdescriptor_2eproto,
};
static ::absl::once_flag descriptor_table_types_2ftypes_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_types_2ftypes_2eproto = {
    false,
    false,
    1924,
    descriptor_table_protodef_types_2ftypes_2eproto,
    "types/types.proto",
    &descriptor_table_types_2ftypes_2eproto_once,
    descriptor_table_types_2ftypes_2eproto_deps,
    1,
    15,
    schemas,
    file_default_instances,
    TableStruct_types_2ftypes_2eproto::offsets,
    file_level_enum_descriptors_types_2ftypes_2eproto,
    file_level_service_descriptors_types_2ftypes_2eproto,
};
namespace types {
// ===================================================================

class H128::_Internal {
 public:
};

H128::H128(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:types.H128)
}
H128::H128(
    ::google::protobuf::Arena* arena, const H128& from)
    : H128(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE H128::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void H128::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, hi_),
           0,
           offsetof(Impl_, lo_) -
               offsetof(Impl_, hi_) +
               sizeof(Impl_::lo_));
}
H128::~H128() {
  // @@protoc_insertion_point(destructor:types.H128)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void H128::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
H128::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(H128, _impl_._cached_size_),
              false,
          },
          &H128::MergeImpl,
          &H128::kDescriptorMethods,
          &descriptor_table_types_2ftypes_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> H128::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_H128_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::types::H128>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint64 lo = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(H128, _impl_.lo_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(H128, _impl_.lo_)}},
    // uint64 hi = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(H128, _impl_.hi_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(H128, _impl_.hi_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 hi = 1;
    {PROTOBUF_FIELD_OFFSET(H128, _impl_.hi_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint64 lo = 2;
    {PROTOBUF_FIELD_OFFSET(H128, _impl_.lo_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void H128::Clear() {
// @@protoc_insertion_point(message_clear_start:types.H128)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.hi_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.lo_) -
      reinterpret_cast<char*>(&_impl_.hi_)) + sizeof(_impl_.lo_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* H128::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:types.H128)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint64 hi = 1;
  if (this->_internal_hi() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this->_internal_hi(), target);
  }

  // uint64 lo = 2;
  if (this->_internal_lo() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        2, this->_internal_lo(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:types.H128)
  return target;
}

::size_t H128::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:types.H128)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // uint64 hi = 1;
  if (this->_internal_hi() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_hi());
  }

  // uint64 lo = 2;
  if (this->_internal_lo() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_lo());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void H128::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<H128*>(&to_msg);
  auto& from = static_cast<const H128&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:types.H128)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_hi() != 0) {
    _this->_impl_.hi_ = from._impl_.hi_;
  }
  if (from._internal_lo() != 0) {
    _this->_impl_.lo_ = from._impl_.lo_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void H128::CopyFrom(const H128& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:types.H128)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void H128::InternalSwap(H128* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(H128, _impl_.lo_)
      + sizeof(H128::_impl_.lo_)
      - PROTOBUF_FIELD_OFFSET(H128, _impl_.hi_)>(
          reinterpret_cast<char*>(&_impl_.hi_),
          reinterpret_cast<char*>(&other->_impl_.hi_));
}

::google::protobuf::Metadata H128::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class H160::_Internal {
 public:
  using HasBits =
      decltype(std::declval<H160>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(H160, _impl_._has_bits_);
};

H160::H160(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:types.H160)
}
inline PROTOBUF_NDEBUG_INLINE H160::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::types::H160& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

H160::H160(
    ::google::protobuf::Arena* arena,
    const H160& from)
    : ::google::protobuf::Message(arena) {
  H160* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.hi_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::types::H128>(
                              arena, *from._impl_.hi_)
                        : nullptr;
  _impl_.lo_ = from._impl_.lo_;

  // @@protoc_insertion_point(copy_constructor:types.H160)
}
inline PROTOBUF_NDEBUG_INLINE H160::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void H160::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, hi_),
           0,
           offsetof(Impl_, lo_) -
               offsetof(Impl_, hi_) +
               sizeof(Impl_::lo_));
}
H160::~H160() {
  // @@protoc_insertion_point(destructor:types.H160)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void H160::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.hi_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
H160::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(H160, _impl_._cached_size_),
              false,
          },
          &H160::MergeImpl,
          &H160::kDescriptorMethods,
          &descriptor_table_types_2ftypes_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> H160::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(H160, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_H160_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::types::H160>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint32 lo = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(H160, _impl_.lo_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(H160, _impl_.lo_)}},
    // .types.H128 hi = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(H160, _impl_.hi_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .types.H128 hi = 1;
    {PROTOBUF_FIELD_OFFSET(H160, _impl_.hi_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint32 lo = 2;
    {PROTOBUF_FIELD_OFFSET(H160, _impl_.lo_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::types::H128>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void H160::Clear() {
// @@protoc_insertion_point(message_clear_start:types.H160)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.hi_ != nullptr);
    _impl_.hi_->Clear();
  }
  _impl_.lo_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* H160::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:types.H160)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .types.H128 hi = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *_impl_.hi_, _impl_.hi_->GetCachedSize(), target, stream);
  }

  // uint32 lo = 2;
  if (this->_internal_lo() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_lo(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:types.H160)
  return target;
}

::size_t H160::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:types.H160)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // .types.H128 hi = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.hi_);
  }

  // uint32 lo = 2;
  if (this->_internal_lo() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_lo());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void H160::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<H160*>(&to_msg);
  auto& from = static_cast<const H160&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:types.H160)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.hi_ != nullptr);
    if (_this->_impl_.hi_ == nullptr) {
      _this->_impl_.hi_ =
          ::google::protobuf::Message::CopyConstruct<::types::H128>(arena, *from._impl_.hi_);
    } else {
      _this->_impl_.hi_->MergeFrom(*from._impl_.hi_);
    }
  }
  if (from._internal_lo() != 0) {
    _this->_impl_.lo_ = from._impl_.lo_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void H160::CopyFrom(const H160& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:types.H160)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void H160::InternalSwap(H160* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(H160, _impl_.lo_)
      + sizeof(H160::_impl_.lo_)
      - PROTOBUF_FIELD_OFFSET(H160, _impl_.hi_)>(
          reinterpret_cast<char*>(&_impl_.hi_),
          reinterpret_cast<char*>(&other->_impl_.hi_));
}

::google::protobuf::Metadata H160::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class H256::_Internal {
 public:
  using HasBits =
      decltype(std::declval<H256>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(H256, _impl_._has_bits_);
};

H256::H256(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:types.H256)
}
inline PROTOBUF_NDEBUG_INLINE H256::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::types::H256& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

H256::H256(
    ::google::protobuf::Arena* arena,
    const H256& from)
    : ::google::protobuf::Message(arena) {
  H256* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.hi_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::types::H128>(
                              arena, *from._impl_.hi_)
                        : nullptr;
  _impl_.lo_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::types::H128>(
                              arena, *from._impl_.lo_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:types.H256)
}
inline PROTOBUF_NDEBUG_INLINE H256::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void H256::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, hi_),
           0,
           offsetof(Impl_, lo_) -
               offsetof(Impl_, hi_) +
               sizeof(Impl_::lo_));
}
H256::~H256() {
  // @@protoc_insertion_point(destructor:types.H256)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void H256::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.hi_;
  delete _impl_.lo_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
H256::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(H256, _impl_._cached_size_),
              false,
          },
          &H256::MergeImpl,
          &H256::kDescriptorMethods,
          &descriptor_table_types_2ftypes_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> H256::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(H256, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_H256_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::types::H256>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .types.H128 lo = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(H256, _impl_.lo_)}},
    // .types.H128 hi = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(H256, _impl_.hi_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .types.H128 hi = 1;
    {PROTOBUF_FIELD_OFFSET(H256, _impl_.hi_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .types.H128 lo = 2;
    {PROTOBUF_FIELD_OFFSET(H256, _impl_.lo_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::types::H128>()},
    {::_pbi::TcParser::GetTable<::types::H128>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void H256::Clear() {
// @@protoc_insertion_point(message_clear_start:types.H256)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.hi_ != nullptr);
      _impl_.hi_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.lo_ != nullptr);
      _impl_.lo_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* H256::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:types.H256)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .types.H128 hi = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *_impl_.hi_, _impl_.hi_->GetCachedSize(), target, stream);
  }

  // .types.H128 lo = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *_impl_.lo_, _impl_.lo_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:types.H256)
  return target;
}

::size_t H256::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:types.H256)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .types.H128 hi = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.hi_);
    }

    // .types.H128 lo = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.lo_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void H256::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<H256*>(&to_msg);
  auto& from = static_cast<const H256&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:types.H256)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.hi_ != nullptr);
      if (_this->_impl_.hi_ == nullptr) {
        _this->_impl_.hi_ =
            ::google::protobuf::Message::CopyConstruct<::types::H128>(arena, *from._impl_.hi_);
      } else {
        _this->_impl_.hi_->MergeFrom(*from._impl_.hi_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.lo_ != nullptr);
      if (_this->_impl_.lo_ == nullptr) {
        _this->_impl_.lo_ =
            ::google::protobuf::Message::CopyConstruct<::types::H128>(arena, *from._impl_.lo_);
      } else {
        _this->_impl_.lo_->MergeFrom(*from._impl_.lo_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void H256::CopyFrom(const H256& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:types.H256)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void H256::InternalSwap(H256* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(H256, _impl_.lo_)
      + sizeof(H256::_impl_.lo_)
      - PROTOBUF_FIELD_OFFSET(H256, _impl_.hi_)>(
          reinterpret_cast<char*>(&_impl_.hi_),
          reinterpret_cast<char*>(&other->_impl_.hi_));
}

::google::protobuf::Metadata H256::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class H512::_Internal {
 public:
  using HasBits =
      decltype(std::declval<H512>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(H512, _impl_._has_bits_);
};

H512::H512(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:types.H512)
}
inline PROTOBUF_NDEBUG_INLINE H512::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::types::H512& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

H512::H512(
    ::google::protobuf::Arena* arena,
    const H512& from)
    : ::google::protobuf::Message(arena) {
  H512* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.hi_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::types::H256>(
                              arena, *from._impl_.hi_)
                        : nullptr;
  _impl_.lo_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::types::H256>(
                              arena, *from._impl_.lo_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:types.H512)
}
inline PROTOBUF_NDEBUG_INLINE H512::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void H512::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, hi_),
           0,
           offsetof(Impl_, lo_) -
               offsetof(Impl_, hi_) +
               sizeof(Impl_::lo_));
}
H512::~H512() {
  // @@protoc_insertion_point(destructor:types.H512)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void H512::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.hi_;
  delete _impl_.lo_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
H512::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(H512, _impl_._cached_size_),
              false,
          },
          &H512::MergeImpl,
          &H512::kDescriptorMethods,
          &descriptor_table_types_2ftypes_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> H512::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(H512, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_H512_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::types::H512>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .types.H256 lo = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(H512, _impl_.lo_)}},
    // .types.H256 hi = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(H512, _impl_.hi_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .types.H256 hi = 1;
    {PROTOBUF_FIELD_OFFSET(H512, _impl_.hi_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .types.H256 lo = 2;
    {PROTOBUF_FIELD_OFFSET(H512, _impl_.lo_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::types::H256>()},
    {::_pbi::TcParser::GetTable<::types::H256>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void H512::Clear() {
// @@protoc_insertion_point(message_clear_start:types.H512)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.hi_ != nullptr);
      _impl_.hi_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.lo_ != nullptr);
      _impl_.lo_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* H512::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:types.H512)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .types.H256 hi = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *_impl_.hi_, _impl_.hi_->GetCachedSize(), target, stream);
  }

  // .types.H256 lo = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *_impl_.lo_, _impl_.lo_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:types.H512)
  return target;
}

::size_t H512::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:types.H512)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .types.H256 hi = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.hi_);
    }

    // .types.H256 lo = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.lo_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void H512::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<H512*>(&to_msg);
  auto& from = static_cast<const H512&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:types.H512)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.hi_ != nullptr);
      if (_this->_impl_.hi_ == nullptr) {
        _this->_impl_.hi_ =
            ::google::protobuf::Message::CopyConstruct<::types::H256>(arena, *from._impl_.hi_);
      } else {
        _this->_impl_.hi_->MergeFrom(*from._impl_.hi_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.lo_ != nullptr);
      if (_this->_impl_.lo_ == nullptr) {
        _this->_impl_.lo_ =
            ::google::protobuf::Message::CopyConstruct<::types::H256>(arena, *from._impl_.lo_);
      } else {
        _this->_impl_.lo_->MergeFrom(*from._impl_.lo_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void H512::CopyFrom(const H512& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:types.H512)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void H512::InternalSwap(H512* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(H512, _impl_.lo_)
      + sizeof(H512::_impl_.lo_)
      - PROTOBUF_FIELD_OFFSET(H512, _impl_.hi_)>(
          reinterpret_cast<char*>(&_impl_.hi_),
          reinterpret_cast<char*>(&other->_impl_.hi_));
}

::google::protobuf::Metadata H512::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class H1024::_Internal {
 public:
  using HasBits =
      decltype(std::declval<H1024>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(H1024, _impl_._has_bits_);
};

H1024::H1024(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:types.H1024)
}
inline PROTOBUF_NDEBUG_INLINE H1024::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::types::H1024& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

H1024::H1024(
    ::google::protobuf::Arena* arena,
    const H1024& from)
    : ::google::protobuf::Message(arena) {
  H1024* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.hi_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::types::H512>(
                              arena, *from._impl_.hi_)
                        : nullptr;
  _impl_.lo_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::types::H512>(
                              arena, *from._impl_.lo_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:types.H1024)
}
inline PROTOBUF_NDEBUG_INLINE H1024::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void H1024::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, hi_),
           0,
           offsetof(Impl_, lo_) -
               offsetof(Impl_, hi_) +
               sizeof(Impl_::lo_));
}
H1024::~H1024() {
  // @@protoc_insertion_point(destructor:types.H1024)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void H1024::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.hi_;
  delete _impl_.lo_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
H1024::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(H1024, _impl_._cached_size_),
              false,
          },
          &H1024::MergeImpl,
          &H1024::kDescriptorMethods,
          &descriptor_table_types_2ftypes_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> H1024::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(H1024, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_H1024_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::types::H1024>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .types.H512 lo = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(H1024, _impl_.lo_)}},
    // .types.H512 hi = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(H1024, _impl_.hi_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .types.H512 hi = 1;
    {PROTOBUF_FIELD_OFFSET(H1024, _impl_.hi_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .types.H512 lo = 2;
    {PROTOBUF_FIELD_OFFSET(H1024, _impl_.lo_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::types::H512>()},
    {::_pbi::TcParser::GetTable<::types::H512>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void H1024::Clear() {
// @@protoc_insertion_point(message_clear_start:types.H1024)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.hi_ != nullptr);
      _impl_.hi_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.lo_ != nullptr);
      _impl_.lo_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* H1024::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:types.H1024)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .types.H512 hi = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *_impl_.hi_, _impl_.hi_->GetCachedSize(), target, stream);
  }

  // .types.H512 lo = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *_impl_.lo_, _impl_.lo_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:types.H1024)
  return target;
}

::size_t H1024::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:types.H1024)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .types.H512 hi = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.hi_);
    }

    // .types.H512 lo = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.lo_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void H1024::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<H1024*>(&to_msg);
  auto& from = static_cast<const H1024&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:types.H1024)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.hi_ != nullptr);
      if (_this->_impl_.hi_ == nullptr) {
        _this->_impl_.hi_ =
            ::google::protobuf::Message::CopyConstruct<::types::H512>(arena, *from._impl_.hi_);
      } else {
        _this->_impl_.hi_->MergeFrom(*from._impl_.hi_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.lo_ != nullptr);
      if (_this->_impl_.lo_ == nullptr) {
        _this->_impl_.lo_ =
            ::google::protobuf::Message::CopyConstruct<::types::H512>(arena, *from._impl_.lo_);
      } else {
        _this->_impl_.lo_->MergeFrom(*from._impl_.lo_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void H1024::CopyFrom(const H1024& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:types.H1024)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void H1024::InternalSwap(H1024* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(H1024, _impl_.lo_)
      + sizeof(H1024::_impl_.lo_)
      - PROTOBUF_FIELD_OFFSET(H1024, _impl_.hi_)>(
          reinterpret_cast<char*>(&_impl_.hi_),
          reinterpret_cast<char*>(&other->_impl_.hi_));
}

::google::protobuf::Metadata H1024::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class H2048::_Internal {
 public:
  using HasBits =
      decltype(std::declval<H2048>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(H2048, _impl_._has_bits_);
};

H2048::H2048(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:types.H2048)
}
inline PROTOBUF_NDEBUG_INLINE H2048::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::types::H2048& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

H2048::H2048(
    ::google::protobuf::Arena* arena,
    const H2048& from)
    : ::google::protobuf::Message(arena) {
  H2048* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.hi_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::types::H1024>(
                              arena, *from._impl_.hi_)
                        : nullptr;
  _impl_.lo_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::types::H1024>(
                              arena, *from._impl_.lo_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:types.H2048)
}
inline PROTOBUF_NDEBUG_INLINE H2048::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void H2048::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, hi_),
           0,
           offsetof(Impl_, lo_) -
               offsetof(Impl_, hi_) +
               sizeof(Impl_::lo_));
}
H2048::~H2048() {
  // @@protoc_insertion_point(destructor:types.H2048)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void H2048::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.hi_;
  delete _impl_.lo_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
H2048::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(H2048, _impl_._cached_size_),
              false,
          },
          &H2048::MergeImpl,
          &H2048::kDescriptorMethods,
          &descriptor_table_types_2ftypes_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> H2048::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(H2048, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_H2048_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::types::H2048>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .types.H1024 lo = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(H2048, _impl_.lo_)}},
    // .types.H1024 hi = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(H2048, _impl_.hi_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .types.H1024 hi = 1;
    {PROTOBUF_FIELD_OFFSET(H2048, _impl_.hi_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .types.H1024 lo = 2;
    {PROTOBUF_FIELD_OFFSET(H2048, _impl_.lo_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::types::H1024>()},
    {::_pbi::TcParser::GetTable<::types::H1024>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void H2048::Clear() {
// @@protoc_insertion_point(message_clear_start:types.H2048)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.hi_ != nullptr);
      _impl_.hi_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.lo_ != nullptr);
      _impl_.lo_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* H2048::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:types.H2048)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .types.H1024 hi = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *_impl_.hi_, _impl_.hi_->GetCachedSize(), target, stream);
  }

  // .types.H1024 lo = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *_impl_.lo_, _impl_.lo_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:types.H2048)
  return target;
}

::size_t H2048::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:types.H2048)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .types.H1024 hi = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.hi_);
    }

    // .types.H1024 lo = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.lo_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void H2048::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<H2048*>(&to_msg);
  auto& from = static_cast<const H2048&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:types.H2048)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.hi_ != nullptr);
      if (_this->_impl_.hi_ == nullptr) {
        _this->_impl_.hi_ =
            ::google::protobuf::Message::CopyConstruct<::types::H1024>(arena, *from._impl_.hi_);
      } else {
        _this->_impl_.hi_->MergeFrom(*from._impl_.hi_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.lo_ != nullptr);
      if (_this->_impl_.lo_ == nullptr) {
        _this->_impl_.lo_ =
            ::google::protobuf::Message::CopyConstruct<::types::H1024>(arena, *from._impl_.lo_);
      } else {
        _this->_impl_.lo_->MergeFrom(*from._impl_.lo_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void H2048::CopyFrom(const H2048& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:types.H2048)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void H2048::InternalSwap(H2048* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(H2048, _impl_.lo_)
      + sizeof(H2048::_impl_.lo_)
      - PROTOBUF_FIELD_OFFSET(H2048, _impl_.hi_)>(
          reinterpret_cast<char*>(&_impl_.hi_),
          reinterpret_cast<char*>(&other->_impl_.hi_));
}

::google::protobuf::Metadata H2048::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class VersionReply::_Internal {
 public:
};

VersionReply::VersionReply(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:types.VersionReply)
}
VersionReply::VersionReply(
    ::google::protobuf::Arena* arena, const VersionReply& from)
    : VersionReply(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE VersionReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void VersionReply::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, major_),
           0,
           offsetof(Impl_, patch_) -
               offsetof(Impl_, major_) +
               sizeof(Impl_::patch_));
}
VersionReply::~VersionReply() {
  // @@protoc_insertion_point(destructor:types.VersionReply)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void VersionReply::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
VersionReply::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(VersionReply, _impl_._cached_size_),
              false,
          },
          &VersionReply::MergeImpl,
          &VersionReply::kDescriptorMethods,
          &descriptor_table_types_2ftypes_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> VersionReply::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_VersionReply_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::types::VersionReply>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 major = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(VersionReply, _impl_.major_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(VersionReply, _impl_.major_)}},
    // uint32 minor = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(VersionReply, _impl_.minor_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(VersionReply, _impl_.minor_)}},
    // uint32 patch = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(VersionReply, _impl_.patch_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(VersionReply, _impl_.patch_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 major = 1;
    {PROTOBUF_FIELD_OFFSET(VersionReply, _impl_.major_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 minor = 2;
    {PROTOBUF_FIELD_OFFSET(VersionReply, _impl_.minor_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 patch = 3;
    {PROTOBUF_FIELD_OFFSET(VersionReply, _impl_.patch_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void VersionReply::Clear() {
// @@protoc_insertion_point(message_clear_start:types.VersionReply)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.major_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.patch_) -
      reinterpret_cast<char*>(&_impl_.major_)) + sizeof(_impl_.patch_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* VersionReply::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:types.VersionReply)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 major = 1;
  if (this->_internal_major() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_major(), target);
  }

  // uint32 minor = 2;
  if (this->_internal_minor() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_minor(), target);
  }

  // uint32 patch = 3;
  if (this->_internal_patch() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this->_internal_patch(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:types.VersionReply)
  return target;
}

::size_t VersionReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:types.VersionReply)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // uint32 major = 1;
  if (this->_internal_major() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_major());
  }

  // uint32 minor = 2;
  if (this->_internal_minor() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_minor());
  }

  // uint32 patch = 3;
  if (this->_internal_patch() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_patch());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void VersionReply::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<VersionReply*>(&to_msg);
  auto& from = static_cast<const VersionReply&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:types.VersionReply)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_major() != 0) {
    _this->_impl_.major_ = from._impl_.major_;
  }
  if (from._internal_minor() != 0) {
    _this->_impl_.minor_ = from._impl_.minor_;
  }
  if (from._internal_patch() != 0) {
    _this->_impl_.patch_ = from._impl_.patch_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void VersionReply::CopyFrom(const VersionReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:types.VersionReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void VersionReply::InternalSwap(VersionReply* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(VersionReply, _impl_.patch_)
      + sizeof(VersionReply::_impl_.patch_)
      - PROTOBUF_FIELD_OFFSET(VersionReply, _impl_.major_)>(
          reinterpret_cast<char*>(&_impl_.major_),
          reinterpret_cast<char*>(&other->_impl_.major_));
}

::google::protobuf::Metadata VersionReply::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ExecutionPayload::_Internal {
 public:
  using HasBits =
      decltype(std::declval<ExecutionPayload>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ExecutionPayload, _impl_._has_bits_);
};

ExecutionPayload::ExecutionPayload(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:types.ExecutionPayload)
}
inline PROTOBUF_NDEBUG_INLINE ExecutionPayload::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::types::ExecutionPayload& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        transactions_{visibility, arena, from.transactions_},
        withdrawals_{visibility, arena, from.withdrawals_},
        extra_data_(arena, from.extra_data_) {}

ExecutionPayload::ExecutionPayload(
    ::google::protobuf::Arena* arena,
    const ExecutionPayload& from)
    : ::google::protobuf::Message(arena) {
  ExecutionPayload* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.parent_hash_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::types::H256>(
                              arena, *from._impl_.parent_hash_)
                        : nullptr;
  _impl_.coinbase_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::types::H160>(
                              arena, *from._impl_.coinbase_)
                        : nullptr;
  _impl_.state_root_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::types::H256>(
                              arena, *from._impl_.state_root_)
                        : nullptr;
  _impl_.receipt_root_ = (cached_has_bits & 0x00000008u) ? ::google::protobuf::Message::CopyConstruct<::types::H256>(
                              arena, *from._impl_.receipt_root_)
                        : nullptr;
  _impl_.logs_bloom_ = (cached_has_bits & 0x00000010u) ? ::google::protobuf::Message::CopyConstruct<::types::H2048>(
                              arena, *from._impl_.logs_bloom_)
                        : nullptr;
  _impl_.prev_randao_ = (cached_has_bits & 0x00000020u) ? ::google::protobuf::Message::CopyConstruct<::types::H256>(
                              arena, *from._impl_.prev_randao_)
                        : nullptr;
  _impl_.base_fee_per_gas_ = (cached_has_bits & 0x00000040u) ? ::google::protobuf::Message::CopyConstruct<::types::H256>(
                              arena, *from._impl_.base_fee_per_gas_)
                        : nullptr;
  _impl_.block_hash_ = (cached_has_bits & 0x00000080u) ? ::google::protobuf::Message::CopyConstruct<::types::H256>(
                              arena, *from._impl_.block_hash_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, block_number_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, block_number_),
           offsetof(Impl_, version_) -
               offsetof(Impl_, block_number_) +
               sizeof(Impl_::version_));

  // @@protoc_insertion_point(copy_constructor:types.ExecutionPayload)
}
inline PROTOBUF_NDEBUG_INLINE ExecutionPayload::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        transactions_{visibility, arena},
        withdrawals_{visibility, arena},
        extra_data_(arena) {}

inline void ExecutionPayload::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, parent_hash_),
           0,
           offsetof(Impl_, version_) -
               offsetof(Impl_, parent_hash_) +
               sizeof(Impl_::version_));
}
ExecutionPayload::~ExecutionPayload() {
  // @@protoc_insertion_point(destructor:types.ExecutionPayload)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ExecutionPayload::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.extra_data_.Destroy();
  delete _impl_.parent_hash_;
  delete _impl_.coinbase_;
  delete _impl_.state_root_;
  delete _impl_.receipt_root_;
  delete _impl_.logs_bloom_;
  delete _impl_.prev_randao_;
  delete _impl_.base_fee_per_gas_;
  delete _impl_.block_hash_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
ExecutionPayload::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(ExecutionPayload, _impl_._cached_size_),
              false,
          },
          &ExecutionPayload::MergeImpl,
          &ExecutionPayload::kDescriptorMethods,
          &descriptor_table_types_2ftypes_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<5, 18, 9, 0, 2> ExecutionPayload::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ExecutionPayload, _impl_._has_bits_),
    0, // no _extensions_
    18, 248,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294705152,  // skipmap
    offsetof(decltype(_table_), field_entries),
    18,  // num_field_entries
    9,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ExecutionPayload_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::types::ExecutionPayload>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 version = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ExecutionPayload, _impl_.version_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(ExecutionPayload, _impl_.version_)}},
    // .types.H256 parent_hash = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(ExecutionPayload, _impl_.parent_hash_)}},
    // .types.H160 coinbase = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 1, PROTOBUF_FIELD_OFFSET(ExecutionPayload, _impl_.coinbase_)}},
    // .types.H256 state_root = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 2, 2, PROTOBUF_FIELD_OFFSET(ExecutionPayload, _impl_.state_root_)}},
    // .types.H256 receipt_root = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 3, 3, PROTOBUF_FIELD_OFFSET(ExecutionPayload, _impl_.receipt_root_)}},
    // .types.H2048 logs_bloom = 6;
    {::_pbi::TcParser::FastMtS1,
     {50, 4, 4, PROTOBUF_FIELD_OFFSET(ExecutionPayload, _impl_.logs_bloom_)}},
    // .types.H256 prev_randao = 7;
    {::_pbi::TcParser::FastMtS1,
     {58, 5, 5, PROTOBUF_FIELD_OFFSET(ExecutionPayload, _impl_.prev_randao_)}},
    // uint64 block_number = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ExecutionPayload, _impl_.block_number_), 63>(),
     {64, 63, 0, PROTOBUF_FIELD_OFFSET(ExecutionPayload, _impl_.block_number_)}},
    // uint64 gas_limit = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ExecutionPayload, _impl_.gas_limit_), 63>(),
     {72, 63, 0, PROTOBUF_FIELD_OFFSET(ExecutionPayload, _impl_.gas_limit_)}},
    // uint64 gas_used = 10;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ExecutionPayload, _impl_.gas_used_), 63>(),
     {80, 63, 0, PROTOBUF_FIELD_OFFSET(ExecutionPayload, _impl_.gas_used_)}},
    // uint64 timestamp = 11;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ExecutionPayload, _impl_.timestamp_), 63>(),
     {88, 63, 0, PROTOBUF_FIELD_OFFSET(ExecutionPayload, _impl_.timestamp_)}},
    // bytes extra_data = 12;
    {::_pbi::TcParser::FastBS1,
     {98, 63, 0, PROTOBUF_FIELD_OFFSET(ExecutionPayload, _impl_.extra_data_)}},
    // .types.H256 base_fee_per_gas = 13;
    {::_pbi::TcParser::FastMtS1,
     {106, 6, 6, PROTOBUF_FIELD_OFFSET(ExecutionPayload, _impl_.base_fee_per_gas_)}},
    // .types.H256 block_hash = 14;
    {::_pbi::TcParser::FastMtS1,
     {114, 7, 7, PROTOBUF_FIELD_OFFSET(ExecutionPayload, _impl_.block_hash_)}},
    // repeated bytes transactions = 15;
    {::_pbi::TcParser::FastBR1,
     {122, 63, 0, PROTOBUF_FIELD_OFFSET(ExecutionPayload, _impl_.transactions_)}},
    // repeated .types.Withdrawal withdrawals = 16;
    {::_pbi::TcParser::FastMtR2,
     {386, 63, 8, PROTOBUF_FIELD_OFFSET(ExecutionPayload, _impl_.withdrawals_)}},
    // optional uint64 blob_gas_used = 17;
    {::_pbi::TcParser::FastV64S2,
     {392, 8, 0, PROTOBUF_FIELD_OFFSET(ExecutionPayload, _impl_.blob_gas_used_)}},
    // optional uint64 excess_blob_gas = 18;
    {::_pbi::TcParser::FastV64S2,
     {400, 9, 0, PROTOBUF_FIELD_OFFSET(ExecutionPayload, _impl_.excess_blob_gas_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 version = 1;
    {PROTOBUF_FIELD_OFFSET(ExecutionPayload, _impl_.version_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // .types.H256 parent_hash = 2;
    {PROTOBUF_FIELD_OFFSET(ExecutionPayload, _impl_.parent_hash_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .types.H160 coinbase = 3;
    {PROTOBUF_FIELD_OFFSET(ExecutionPayload, _impl_.coinbase_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .types.H256 state_root = 4;
    {PROTOBUF_FIELD_OFFSET(ExecutionPayload, _impl_.state_root_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .types.H256 receipt_root = 5;
    {PROTOBUF_FIELD_OFFSET(ExecutionPayload, _impl_.receipt_root_), _Internal::kHasBitsOffset + 3, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .types.H2048 logs_bloom = 6;
    {PROTOBUF_FIELD_OFFSET(ExecutionPayload, _impl_.logs_bloom_), _Internal::kHasBitsOffset + 4, 4,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .types.H256 prev_randao = 7;
    {PROTOBUF_FIELD_OFFSET(ExecutionPayload, _impl_.prev_randao_), _Internal::kHasBitsOffset + 5, 5,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint64 block_number = 8;
    {PROTOBUF_FIELD_OFFSET(ExecutionPayload, _impl_.block_number_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint64 gas_limit = 9;
    {PROTOBUF_FIELD_OFFSET(ExecutionPayload, _impl_.gas_limit_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint64 gas_used = 10;
    {PROTOBUF_FIELD_OFFSET(ExecutionPayload, _impl_.gas_used_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint64 timestamp = 11;
    {PROTOBUF_FIELD_OFFSET(ExecutionPayload, _impl_.timestamp_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // bytes extra_data = 12;
    {PROTOBUF_FIELD_OFFSET(ExecutionPayload, _impl_.extra_data_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // .types.H256 base_fee_per_gas = 13;
    {PROTOBUF_FIELD_OFFSET(ExecutionPayload, _impl_.base_fee_per_gas_), _Internal::kHasBitsOffset + 6, 6,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .types.H256 block_hash = 14;
    {PROTOBUF_FIELD_OFFSET(ExecutionPayload, _impl_.block_hash_), _Internal::kHasBitsOffset + 7, 7,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated bytes transactions = 15;
    {PROTOBUF_FIELD_OFFSET(ExecutionPayload, _impl_.transactions_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kBytes | ::_fl::kRepSString)},
    // repeated .types.Withdrawal withdrawals = 16;
    {PROTOBUF_FIELD_OFFSET(ExecutionPayload, _impl_.withdrawals_), -1, 8,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional uint64 blob_gas_used = 17;
    {PROTOBUF_FIELD_OFFSET(ExecutionPayload, _impl_.blob_gas_used_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional uint64 excess_blob_gas = 18;
    {PROTOBUF_FIELD_OFFSET(ExecutionPayload, _impl_.excess_blob_gas_), _Internal::kHasBitsOffset + 9, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
  }}, {{
    {::_pbi::TcParser::GetTable<::types::H256>()},
    {::_pbi::TcParser::GetTable<::types::H160>()},
    {::_pbi::TcParser::GetTable<::types::H256>()},
    {::_pbi::TcParser::GetTable<::types::H256>()},
    {::_pbi::TcParser::GetTable<::types::H2048>()},
    {::_pbi::TcParser::GetTable<::types::H256>()},
    {::_pbi::TcParser::GetTable<::types::H256>()},
    {::_pbi::TcParser::GetTable<::types::H256>()},
    {::_pbi::TcParser::GetTable<::types::Withdrawal>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void ExecutionPayload::Clear() {
// @@protoc_insertion_point(message_clear_start:types.ExecutionPayload)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.transactions_.Clear();
  _impl_.withdrawals_.Clear();
  _impl_.extra_data_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.parent_hash_ != nullptr);
      _impl_.parent_hash_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.coinbase_ != nullptr);
      _impl_.coinbase_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.state_root_ != nullptr);
      _impl_.state_root_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.receipt_root_ != nullptr);
      _impl_.receipt_root_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(_impl_.logs_bloom_ != nullptr);
      _impl_.logs_bloom_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      ABSL_DCHECK(_impl_.prev_randao_ != nullptr);
      _impl_.prev_randao_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      ABSL_DCHECK(_impl_.base_fee_per_gas_ != nullptr);
      _impl_.base_fee_per_gas_->Clear();
    }
    if (cached_has_bits & 0x00000080u) {
      ABSL_DCHECK(_impl_.block_hash_ != nullptr);
      _impl_.block_hash_->Clear();
    }
  }
  ::memset(&_impl_.block_number_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.timestamp_) -
      reinterpret_cast<char*>(&_impl_.block_number_)) + sizeof(_impl_.timestamp_));
  if (cached_has_bits & 0x00000300u) {
    ::memset(&_impl_.blob_gas_used_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.excess_blob_gas_) -
        reinterpret_cast<char*>(&_impl_.blob_gas_used_)) + sizeof(_impl_.excess_blob_gas_));
  }
  _impl_.version_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* ExecutionPayload::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:types.ExecutionPayload)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 version = 1;
  if (this->_internal_version() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_version(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .types.H256 parent_hash = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *_impl_.parent_hash_, _impl_.parent_hash_->GetCachedSize(), target, stream);
  }

  // .types.H160 coinbase = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *_impl_.coinbase_, _impl_.coinbase_->GetCachedSize(), target, stream);
  }

  // .types.H256 state_root = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *_impl_.state_root_, _impl_.state_root_->GetCachedSize(), target, stream);
  }

  // .types.H256 receipt_root = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, *_impl_.receipt_root_, _impl_.receipt_root_->GetCachedSize(), target, stream);
  }

  // .types.H2048 logs_bloom = 6;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        6, *_impl_.logs_bloom_, _impl_.logs_bloom_->GetCachedSize(), target, stream);
  }

  // .types.H256 prev_randao = 7;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        7, *_impl_.prev_randao_, _impl_.prev_randao_->GetCachedSize(), target, stream);
  }

  // uint64 block_number = 8;
  if (this->_internal_block_number() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        8, this->_internal_block_number(), target);
  }

  // uint64 gas_limit = 9;
  if (this->_internal_gas_limit() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        9, this->_internal_gas_limit(), target);
  }

  // uint64 gas_used = 10;
  if (this->_internal_gas_used() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        10, this->_internal_gas_used(), target);
  }

  // uint64 timestamp = 11;
  if (this->_internal_timestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        11, this->_internal_timestamp(), target);
  }

  // bytes extra_data = 12;
  if (!this->_internal_extra_data().empty()) {
    const std::string& _s = this->_internal_extra_data();
    target = stream->WriteBytesMaybeAliased(12, _s, target);
  }

  // .types.H256 base_fee_per_gas = 13;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        13, *_impl_.base_fee_per_gas_, _impl_.base_fee_per_gas_->GetCachedSize(), target, stream);
  }

  // .types.H256 block_hash = 14;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        14, *_impl_.block_hash_, _impl_.block_hash_->GetCachedSize(), target, stream);
  }

  // repeated bytes transactions = 15;
  for (int i = 0, n = this->_internal_transactions_size(); i < n; ++i) {
    const auto& s = this->_internal_transactions().Get(i);
    target = stream->WriteBytes(15, s, target);
  }

  // repeated .types.Withdrawal withdrawals = 16;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_withdrawals_size());
       i < n; i++) {
    const auto& repfield = this->_internal_withdrawals().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            16, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // optional uint64 blob_gas_used = 17;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        17, this->_internal_blob_gas_used(), target);
  }

  // optional uint64 excess_blob_gas = 18;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        18, this->_internal_excess_blob_gas(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:types.ExecutionPayload)
  return target;
}

::size_t ExecutionPayload::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:types.ExecutionPayload)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated bytes transactions = 15;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_transactions().size());
  for (int i = 0, n = _internal_transactions().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
        _internal_transactions().Get(i));
  }
  // repeated .types.Withdrawal withdrawals = 16;
  total_size += 2UL * this->_internal_withdrawals_size();
  for (const auto& msg : this->_internal_withdrawals()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // bytes extra_data = 12;
  if (!this->_internal_extra_data().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_extra_data());
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // .types.H256 parent_hash = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.parent_hash_);
    }

    // .types.H160 coinbase = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.coinbase_);
    }

    // .types.H256 state_root = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.state_root_);
    }

    // .types.H256 receipt_root = 5;
    if (cached_has_bits & 0x00000008u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.receipt_root_);
    }

    // .types.H2048 logs_bloom = 6;
    if (cached_has_bits & 0x00000010u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.logs_bloom_);
    }

    // .types.H256 prev_randao = 7;
    if (cached_has_bits & 0x00000020u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.prev_randao_);
    }

    // .types.H256 base_fee_per_gas = 13;
    if (cached_has_bits & 0x00000040u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.base_fee_per_gas_);
    }

    // .types.H256 block_hash = 14;
    if (cached_has_bits & 0x00000080u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.block_hash_);
    }

  }
  // uint64 block_number = 8;
  if (this->_internal_block_number() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_block_number());
  }

  // uint64 gas_limit = 9;
  if (this->_internal_gas_limit() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_gas_limit());
  }

  // uint64 gas_used = 10;
  if (this->_internal_gas_used() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_gas_used());
  }

  // uint64 timestamp = 11;
  if (this->_internal_timestamp() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_timestamp());
  }

  if (cached_has_bits & 0x00000300u) {
    // optional uint64 blob_gas_used = 17;
    if (cached_has_bits & 0x00000100u) {
      total_size += 2 + ::_pbi::WireFormatLite::UInt64Size(
                                      this->_internal_blob_gas_used());
    }

    // optional uint64 excess_blob_gas = 18;
    if (cached_has_bits & 0x00000200u) {
      total_size += 2 + ::_pbi::WireFormatLite::UInt64Size(
                                      this->_internal_excess_blob_gas());
    }

  }
  // uint32 version = 1;
  if (this->_internal_version() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_version());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void ExecutionPayload::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ExecutionPayload*>(&to_msg);
  auto& from = static_cast<const ExecutionPayload&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:types.ExecutionPayload)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_transactions()->MergeFrom(from._internal_transactions());
  _this->_internal_mutable_withdrawals()->MergeFrom(
      from._internal_withdrawals());
  if (!from._internal_extra_data().empty()) {
    _this->_internal_set_extra_data(from._internal_extra_data());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.parent_hash_ != nullptr);
      if (_this->_impl_.parent_hash_ == nullptr) {
        _this->_impl_.parent_hash_ =
            ::google::protobuf::Message::CopyConstruct<::types::H256>(arena, *from._impl_.parent_hash_);
      } else {
        _this->_impl_.parent_hash_->MergeFrom(*from._impl_.parent_hash_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.coinbase_ != nullptr);
      if (_this->_impl_.coinbase_ == nullptr) {
        _this->_impl_.coinbase_ =
            ::google::protobuf::Message::CopyConstruct<::types::H160>(arena, *from._impl_.coinbase_);
      } else {
        _this->_impl_.coinbase_->MergeFrom(*from._impl_.coinbase_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.state_root_ != nullptr);
      if (_this->_impl_.state_root_ == nullptr) {
        _this->_impl_.state_root_ =
            ::google::protobuf::Message::CopyConstruct<::types::H256>(arena, *from._impl_.state_root_);
      } else {
        _this->_impl_.state_root_->MergeFrom(*from._impl_.state_root_);
      }
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(from._impl_.receipt_root_ != nullptr);
      if (_this->_impl_.receipt_root_ == nullptr) {
        _this->_impl_.receipt_root_ =
            ::google::protobuf::Message::CopyConstruct<::types::H256>(arena, *from._impl_.receipt_root_);
      } else {
        _this->_impl_.receipt_root_->MergeFrom(*from._impl_.receipt_root_);
      }
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(from._impl_.logs_bloom_ != nullptr);
      if (_this->_impl_.logs_bloom_ == nullptr) {
        _this->_impl_.logs_bloom_ =
            ::google::protobuf::Message::CopyConstruct<::types::H2048>(arena, *from._impl_.logs_bloom_);
      } else {
        _this->_impl_.logs_bloom_->MergeFrom(*from._impl_.logs_bloom_);
      }
    }
    if (cached_has_bits & 0x00000020u) {
      ABSL_DCHECK(from._impl_.prev_randao_ != nullptr);
      if (_this->_impl_.prev_randao_ == nullptr) {
        _this->_impl_.prev_randao_ =
            ::google::protobuf::Message::CopyConstruct<::types::H256>(arena, *from._impl_.prev_randao_);
      } else {
        _this->_impl_.prev_randao_->MergeFrom(*from._impl_.prev_randao_);
      }
    }
    if (cached_has_bits & 0x00000040u) {
      ABSL_DCHECK(from._impl_.base_fee_per_gas_ != nullptr);
      if (_this->_impl_.base_fee_per_gas_ == nullptr) {
        _this->_impl_.base_fee_per_gas_ =
            ::google::protobuf::Message::CopyConstruct<::types::H256>(arena, *from._impl_.base_fee_per_gas_);
      } else {
        _this->_impl_.base_fee_per_gas_->MergeFrom(*from._impl_.base_fee_per_gas_);
      }
    }
    if (cached_has_bits & 0x00000080u) {
      ABSL_DCHECK(from._impl_.block_hash_ != nullptr);
      if (_this->_impl_.block_hash_ == nullptr) {
        _this->_impl_.block_hash_ =
            ::google::protobuf::Message::CopyConstruct<::types::H256>(arena, *from._impl_.block_hash_);
      } else {
        _this->_impl_.block_hash_->MergeFrom(*from._impl_.block_hash_);
      }
    }
  }
  if (from._internal_block_number() != 0) {
    _this->_impl_.block_number_ = from._impl_.block_number_;
  }
  if (from._internal_gas_limit() != 0) {
    _this->_impl_.gas_limit_ = from._impl_.gas_limit_;
  }
  if (from._internal_gas_used() != 0) {
    _this->_impl_.gas_used_ = from._impl_.gas_used_;
  }
  if (from._internal_timestamp() != 0) {
    _this->_impl_.timestamp_ = from._impl_.timestamp_;
  }
  if (cached_has_bits & 0x00000300u) {
    if (cached_has_bits & 0x00000100u) {
      _this->_impl_.blob_gas_used_ = from._impl_.blob_gas_used_;
    }
    if (cached_has_bits & 0x00000200u) {
      _this->_impl_.excess_blob_gas_ = from._impl_.excess_blob_gas_;
    }
  }
  if (from._internal_version() != 0) {
    _this->_impl_.version_ = from._impl_.version_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ExecutionPayload::CopyFrom(const ExecutionPayload& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:types.ExecutionPayload)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ExecutionPayload::InternalSwap(ExecutionPayload* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.transactions_.InternalSwap(&other->_impl_.transactions_);
  _impl_.withdrawals_.InternalSwap(&other->_impl_.withdrawals_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.extra_data_, &other->_impl_.extra_data_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ExecutionPayload, _impl_.version_)
      + sizeof(ExecutionPayload::_impl_.version_)
      - PROTOBUF_FIELD_OFFSET(ExecutionPayload, _impl_.parent_hash_)>(
          reinterpret_cast<char*>(&_impl_.parent_hash_),
          reinterpret_cast<char*>(&other->_impl_.parent_hash_));
}

::google::protobuf::Metadata ExecutionPayload::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Withdrawal::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Withdrawal>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Withdrawal, _impl_._has_bits_);
};

Withdrawal::Withdrawal(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:types.Withdrawal)
}
inline PROTOBUF_NDEBUG_INLINE Withdrawal::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::types::Withdrawal& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

Withdrawal::Withdrawal(
    ::google::protobuf::Arena* arena,
    const Withdrawal& from)
    : ::google::protobuf::Message(arena) {
  Withdrawal* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.address_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::types::H160>(
                              arena, *from._impl_.address_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, index_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, index_),
           offsetof(Impl_, amount_) -
               offsetof(Impl_, index_) +
               sizeof(Impl_::amount_));

  // @@protoc_insertion_point(copy_constructor:types.Withdrawal)
}
inline PROTOBUF_NDEBUG_INLINE Withdrawal::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Withdrawal::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, address_),
           0,
           offsetof(Impl_, amount_) -
               offsetof(Impl_, address_) +
               sizeof(Impl_::amount_));
}
Withdrawal::~Withdrawal() {
  // @@protoc_insertion_point(destructor:types.Withdrawal)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Withdrawal::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.address_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Withdrawal::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(Withdrawal, _impl_._cached_size_),
              false,
          },
          &Withdrawal::MergeImpl,
          &Withdrawal::kDescriptorMethods,
          &descriptor_table_types_2ftypes_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 0, 2> Withdrawal::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Withdrawal, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Withdrawal_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::types::Withdrawal>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint64 amount = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Withdrawal, _impl_.amount_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(Withdrawal, _impl_.amount_)}},
    // uint64 index = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Withdrawal, _impl_.index_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Withdrawal, _impl_.index_)}},
    // uint64 validator_index = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Withdrawal, _impl_.validator_index_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Withdrawal, _impl_.validator_index_)}},
    // .types.H160 address = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(Withdrawal, _impl_.address_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 index = 1;
    {PROTOBUF_FIELD_OFFSET(Withdrawal, _impl_.index_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint64 validator_index = 2;
    {PROTOBUF_FIELD_OFFSET(Withdrawal, _impl_.validator_index_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // .types.H160 address = 3;
    {PROTOBUF_FIELD_OFFSET(Withdrawal, _impl_.address_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint64 amount = 4;
    {PROTOBUF_FIELD_OFFSET(Withdrawal, _impl_.amount_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }}, {{
    {::_pbi::TcParser::GetTable<::types::H160>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Withdrawal::Clear() {
// @@protoc_insertion_point(message_clear_start:types.Withdrawal)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.address_ != nullptr);
    _impl_.address_->Clear();
  }
  ::memset(&_impl_.index_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.amount_) -
      reinterpret_cast<char*>(&_impl_.index_)) + sizeof(_impl_.amount_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* Withdrawal::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:types.Withdrawal)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint64 index = 1;
  if (this->_internal_index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this->_internal_index(), target);
  }

  // uint64 validator_index = 2;
  if (this->_internal_validator_index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        2, this->_internal_validator_index(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .types.H160 address = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *_impl_.address_, _impl_.address_->GetCachedSize(), target, stream);
  }

  // uint64 amount = 4;
  if (this->_internal_amount() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        4, this->_internal_amount(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:types.Withdrawal)
  return target;
}

::size_t Withdrawal::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:types.Withdrawal)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // .types.H160 address = 3;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.address_);
  }

  // uint64 index = 1;
  if (this->_internal_index() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_index());
  }

  // uint64 validator_index = 2;
  if (this->_internal_validator_index() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_validator_index());
  }

  // uint64 amount = 4;
  if (this->_internal_amount() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_amount());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Withdrawal::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Withdrawal*>(&to_msg);
  auto& from = static_cast<const Withdrawal&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:types.Withdrawal)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.address_ != nullptr);
    if (_this->_impl_.address_ == nullptr) {
      _this->_impl_.address_ =
          ::google::protobuf::Message::CopyConstruct<::types::H160>(arena, *from._impl_.address_);
    } else {
      _this->_impl_.address_->MergeFrom(*from._impl_.address_);
    }
  }
  if (from._internal_index() != 0) {
    _this->_impl_.index_ = from._impl_.index_;
  }
  if (from._internal_validator_index() != 0) {
    _this->_impl_.validator_index_ = from._impl_.validator_index_;
  }
  if (from._internal_amount() != 0) {
    _this->_impl_.amount_ = from._impl_.amount_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Withdrawal::CopyFrom(const Withdrawal& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:types.Withdrawal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Withdrawal::InternalSwap(Withdrawal* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Withdrawal, _impl_.amount_)
      + sizeof(Withdrawal::_impl_.amount_)
      - PROTOBUF_FIELD_OFFSET(Withdrawal, _impl_.address_)>(
          reinterpret_cast<char*>(&_impl_.address_),
          reinterpret_cast<char*>(&other->_impl_.address_));
}

::google::protobuf::Metadata Withdrawal::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class BlobsBundleV1::_Internal {
 public:
};

BlobsBundleV1::BlobsBundleV1(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:types.BlobsBundleV1)
}
inline PROTOBUF_NDEBUG_INLINE BlobsBundleV1::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::types::BlobsBundleV1& from_msg)
      : commitments_{visibility, arena, from.commitments_},
        blobs_{visibility, arena, from.blobs_},
        proofs_{visibility, arena, from.proofs_},
        _cached_size_{0} {}

BlobsBundleV1::BlobsBundleV1(
    ::google::protobuf::Arena* arena,
    const BlobsBundleV1& from)
    : ::google::protobuf::Message(arena) {
  BlobsBundleV1* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:types.BlobsBundleV1)
}
inline PROTOBUF_NDEBUG_INLINE BlobsBundleV1::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : commitments_{visibility, arena},
        blobs_{visibility, arena},
        proofs_{visibility, arena},
        _cached_size_{0} {}

inline void BlobsBundleV1::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
BlobsBundleV1::~BlobsBundleV1() {
  // @@protoc_insertion_point(destructor:types.BlobsBundleV1)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void BlobsBundleV1::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
BlobsBundleV1::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(BlobsBundleV1, _impl_._cached_size_),
              false,
          },
          &BlobsBundleV1::MergeImpl,
          &BlobsBundleV1::kDescriptorMethods,
          &descriptor_table_types_2ftypes_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> BlobsBundleV1::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_BlobsBundleV1_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::types::BlobsBundleV1>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated bytes commitments = 1;
    {::_pbi::TcParser::FastBR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(BlobsBundleV1, _impl_.commitments_)}},
    // repeated bytes blobs = 2;
    {::_pbi::TcParser::FastBR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(BlobsBundleV1, _impl_.blobs_)}},
    // repeated bytes proofs = 3;
    {::_pbi::TcParser::FastBR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(BlobsBundleV1, _impl_.proofs_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated bytes commitments = 1;
    {PROTOBUF_FIELD_OFFSET(BlobsBundleV1, _impl_.commitments_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kBytes | ::_fl::kRepSString)},
    // repeated bytes blobs = 2;
    {PROTOBUF_FIELD_OFFSET(BlobsBundleV1, _impl_.blobs_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kBytes | ::_fl::kRepSString)},
    // repeated bytes proofs = 3;
    {PROTOBUF_FIELD_OFFSET(BlobsBundleV1, _impl_.proofs_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kBytes | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void BlobsBundleV1::Clear() {
// @@protoc_insertion_point(message_clear_start:types.BlobsBundleV1)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.commitments_.Clear();
  _impl_.blobs_.Clear();
  _impl_.proofs_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* BlobsBundleV1::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:types.BlobsBundleV1)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated bytes commitments = 1;
  for (int i = 0, n = this->_internal_commitments_size(); i < n; ++i) {
    const auto& s = this->_internal_commitments().Get(i);
    target = stream->WriteBytes(1, s, target);
  }

  // repeated bytes blobs = 2;
  for (int i = 0, n = this->_internal_blobs_size(); i < n; ++i) {
    const auto& s = this->_internal_blobs().Get(i);
    target = stream->WriteBytes(2, s, target);
  }

  // repeated bytes proofs = 3;
  for (int i = 0, n = this->_internal_proofs_size(); i < n; ++i) {
    const auto& s = this->_internal_proofs().Get(i);
    target = stream->WriteBytes(3, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:types.BlobsBundleV1)
  return target;
}

::size_t BlobsBundleV1::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:types.BlobsBundleV1)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated bytes commitments = 1;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_commitments().size());
  for (int i = 0, n = _internal_commitments().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
        _internal_commitments().Get(i));
  }
  // repeated bytes blobs = 2;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_blobs().size());
  for (int i = 0, n = _internal_blobs().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
        _internal_blobs().Get(i));
  }
  // repeated bytes proofs = 3;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_proofs().size());
  for (int i = 0, n = _internal_proofs().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
        _internal_proofs().Get(i));
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void BlobsBundleV1::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<BlobsBundleV1*>(&to_msg);
  auto& from = static_cast<const BlobsBundleV1&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:types.BlobsBundleV1)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_commitments()->MergeFrom(from._internal_commitments());
  _this->_internal_mutable_blobs()->MergeFrom(from._internal_blobs());
  _this->_internal_mutable_proofs()->MergeFrom(from._internal_proofs());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BlobsBundleV1::CopyFrom(const BlobsBundleV1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:types.BlobsBundleV1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void BlobsBundleV1::InternalSwap(BlobsBundleV1* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.commitments_.InternalSwap(&other->_impl_.commitments_);
  _impl_.blobs_.InternalSwap(&other->_impl_.blobs_);
  _impl_.proofs_.InternalSwap(&other->_impl_.proofs_);
}

::google::protobuf::Metadata BlobsBundleV1::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RequestsBundle::_Internal {
 public:
};

RequestsBundle::RequestsBundle(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:types.RequestsBundle)
}
inline PROTOBUF_NDEBUG_INLINE RequestsBundle::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::types::RequestsBundle& from_msg)
      : requests_{visibility, arena, from.requests_},
        _cached_size_{0} {}

RequestsBundle::RequestsBundle(
    ::google::protobuf::Arena* arena,
    const RequestsBundle& from)
    : ::google::protobuf::Message(arena) {
  RequestsBundle* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:types.RequestsBundle)
}
inline PROTOBUF_NDEBUG_INLINE RequestsBundle::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : requests_{visibility, arena},
        _cached_size_{0} {}

inline void RequestsBundle::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
RequestsBundle::~RequestsBundle() {
  // @@protoc_insertion_point(destructor:types.RequestsBundle)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RequestsBundle::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
RequestsBundle::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(RequestsBundle, _impl_._cached_size_),
              false,
          },
          &RequestsBundle::MergeImpl,
          &RequestsBundle::kDescriptorMethods,
          &descriptor_table_types_2ftypes_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> RequestsBundle::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_RequestsBundle_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::types::RequestsBundle>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated bytes requests = 1;
    {::_pbi::TcParser::FastBR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(RequestsBundle, _impl_.requests_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated bytes requests = 1;
    {PROTOBUF_FIELD_OFFSET(RequestsBundle, _impl_.requests_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kBytes | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void RequestsBundle::Clear() {
// @@protoc_insertion_point(message_clear_start:types.RequestsBundle)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.requests_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* RequestsBundle::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:types.RequestsBundle)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated bytes requests = 1;
  for (int i = 0, n = this->_internal_requests_size(); i < n; ++i) {
    const auto& s = this->_internal_requests().Get(i);
    target = stream->WriteBytes(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:types.RequestsBundle)
  return target;
}

::size_t RequestsBundle::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:types.RequestsBundle)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated bytes requests = 1;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_requests().size());
  for (int i = 0, n = _internal_requests().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
        _internal_requests().Get(i));
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void RequestsBundle::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RequestsBundle*>(&to_msg);
  auto& from = static_cast<const RequestsBundle&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:types.RequestsBundle)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_requests()->MergeFrom(from._internal_requests());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RequestsBundle::CopyFrom(const RequestsBundle& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:types.RequestsBundle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RequestsBundle::InternalSwap(RequestsBundle* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.requests_.InternalSwap(&other->_impl_.requests_);
}

::google::protobuf::Metadata RequestsBundle::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class NodeInfoPorts::_Internal {
 public:
};

NodeInfoPorts::NodeInfoPorts(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:types.NodeInfoPorts)
}
NodeInfoPorts::NodeInfoPorts(
    ::google::protobuf::Arena* arena, const NodeInfoPorts& from)
    : NodeInfoPorts(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE NodeInfoPorts::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void NodeInfoPorts::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, discovery_),
           0,
           offsetof(Impl_, listener_) -
               offsetof(Impl_, discovery_) +
               sizeof(Impl_::listener_));
}
NodeInfoPorts::~NodeInfoPorts() {
  // @@protoc_insertion_point(destructor:types.NodeInfoPorts)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void NodeInfoPorts::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
NodeInfoPorts::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(NodeInfoPorts, _impl_._cached_size_),
              false,
          },
          &NodeInfoPorts::MergeImpl,
          &NodeInfoPorts::kDescriptorMethods,
          &descriptor_table_types_2ftypes_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> NodeInfoPorts::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_NodeInfoPorts_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::types::NodeInfoPorts>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint32 listener = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NodeInfoPorts, _impl_.listener_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(NodeInfoPorts, _impl_.listener_)}},
    // uint32 discovery = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NodeInfoPorts, _impl_.discovery_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(NodeInfoPorts, _impl_.discovery_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 discovery = 1;
    {PROTOBUF_FIELD_OFFSET(NodeInfoPorts, _impl_.discovery_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 listener = 2;
    {PROTOBUF_FIELD_OFFSET(NodeInfoPorts, _impl_.listener_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void NodeInfoPorts::Clear() {
// @@protoc_insertion_point(message_clear_start:types.NodeInfoPorts)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.discovery_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.listener_) -
      reinterpret_cast<char*>(&_impl_.discovery_)) + sizeof(_impl_.listener_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* NodeInfoPorts::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:types.NodeInfoPorts)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 discovery = 1;
  if (this->_internal_discovery() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_discovery(), target);
  }

  // uint32 listener = 2;
  if (this->_internal_listener() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_listener(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:types.NodeInfoPorts)
  return target;
}

::size_t NodeInfoPorts::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:types.NodeInfoPorts)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // uint32 discovery = 1;
  if (this->_internal_discovery() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_discovery());
  }

  // uint32 listener = 2;
  if (this->_internal_listener() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_listener());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void NodeInfoPorts::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<NodeInfoPorts*>(&to_msg);
  auto& from = static_cast<const NodeInfoPorts&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:types.NodeInfoPorts)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_discovery() != 0) {
    _this->_impl_.discovery_ = from._impl_.discovery_;
  }
  if (from._internal_listener() != 0) {
    _this->_impl_.listener_ = from._impl_.listener_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NodeInfoPorts::CopyFrom(const NodeInfoPorts& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:types.NodeInfoPorts)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void NodeInfoPorts::InternalSwap(NodeInfoPorts* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(NodeInfoPorts, _impl_.listener_)
      + sizeof(NodeInfoPorts::_impl_.listener_)
      - PROTOBUF_FIELD_OFFSET(NodeInfoPorts, _impl_.discovery_)>(
          reinterpret_cast<char*>(&_impl_.discovery_),
          reinterpret_cast<char*>(&other->_impl_.discovery_));
}

::google::protobuf::Metadata NodeInfoPorts::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class NodeInfoReply::_Internal {
 public:
  using HasBits =
      decltype(std::declval<NodeInfoReply>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(NodeInfoReply, _impl_._has_bits_);
};

NodeInfoReply::NodeInfoReply(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:types.NodeInfoReply)
}
inline PROTOBUF_NDEBUG_INLINE NodeInfoReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::types::NodeInfoReply& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        id_(arena, from.id_),
        name_(arena, from.name_),
        enode_(arena, from.enode_),
        enr_(arena, from.enr_),
        listener_addr_(arena, from.listener_addr_),
        protocols_(arena, from.protocols_) {}

NodeInfoReply::NodeInfoReply(
    ::google::protobuf::Arena* arena,
    const NodeInfoReply& from)
    : ::google::protobuf::Message(arena) {
  NodeInfoReply* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.ports_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::types::NodeInfoPorts>(
                              arena, *from._impl_.ports_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:types.NodeInfoReply)
}
inline PROTOBUF_NDEBUG_INLINE NodeInfoReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        id_(arena),
        name_(arena),
        enode_(arena),
        enr_(arena),
        listener_addr_(arena),
        protocols_(arena) {}

inline void NodeInfoReply::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.ports_ = {};
}
NodeInfoReply::~NodeInfoReply() {
  // @@protoc_insertion_point(destructor:types.NodeInfoReply)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void NodeInfoReply::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.id_.Destroy();
  _impl_.name_.Destroy();
  _impl_.enode_.Destroy();
  _impl_.enr_.Destroy();
  _impl_.listener_addr_.Destroy();
  _impl_.protocols_.Destroy();
  delete _impl_.ports_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
NodeInfoReply::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(NodeInfoReply, _impl_._cached_size_),
              false,
          },
          &NodeInfoReply::MergeImpl,
          &NodeInfoReply::kDescriptorMethods,
          &descriptor_table_types_2ftypes_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 1, 55, 2> NodeInfoReply::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(NodeInfoReply, _impl_._has_bits_),
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_NodeInfoReply_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::types::NodeInfoReply>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(NodeInfoReply, _impl_.id_)}},
    // string name = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(NodeInfoReply, _impl_.name_)}},
    // string enode = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(NodeInfoReply, _impl_.enode_)}},
    // string enr = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(NodeInfoReply, _impl_.enr_)}},
    // .types.NodeInfoPorts ports = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 0, 0, PROTOBUF_FIELD_OFFSET(NodeInfoReply, _impl_.ports_)}},
    // string listener_addr = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(NodeInfoReply, _impl_.listener_addr_)}},
    // bytes protocols = 7;
    {::_pbi::TcParser::FastBS1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(NodeInfoReply, _impl_.protocols_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string id = 1;
    {PROTOBUF_FIELD_OFFSET(NodeInfoReply, _impl_.id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string name = 2;
    {PROTOBUF_FIELD_OFFSET(NodeInfoReply, _impl_.name_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string enode = 3;
    {PROTOBUF_FIELD_OFFSET(NodeInfoReply, _impl_.enode_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string enr = 4;
    {PROTOBUF_FIELD_OFFSET(NodeInfoReply, _impl_.enr_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .types.NodeInfoPorts ports = 5;
    {PROTOBUF_FIELD_OFFSET(NodeInfoReply, _impl_.ports_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string listener_addr = 6;
    {PROTOBUF_FIELD_OFFSET(NodeInfoReply, _impl_.listener_addr_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bytes protocols = 7;
    {PROTOBUF_FIELD_OFFSET(NodeInfoReply, _impl_.protocols_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::types::NodeInfoPorts>()},
  }}, {{
    "\23\2\4\5\3\0\15\0"
    "types.NodeInfoReply"
    "id"
    "name"
    "enode"
    "enr"
    "listener_addr"
  }},
};

PROTOBUF_NOINLINE void NodeInfoReply::Clear() {
// @@protoc_insertion_point(message_clear_start:types.NodeInfoReply)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_.ClearToEmpty();
  _impl_.name_.ClearToEmpty();
  _impl_.enode_.ClearToEmpty();
  _impl_.enr_.ClearToEmpty();
  _impl_.listener_addr_.ClearToEmpty();
  _impl_.protocols_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.ports_ != nullptr);
    _impl_.ports_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* NodeInfoReply::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:types.NodeInfoReply)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string id = 1;
  if (!this->_internal_id().empty()) {
    const std::string& _s = this->_internal_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "types.NodeInfoReply.id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string name = 2;
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "types.NodeInfoReply.name");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string enode = 3;
  if (!this->_internal_enode().empty()) {
    const std::string& _s = this->_internal_enode();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "types.NodeInfoReply.enode");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // string enr = 4;
  if (!this->_internal_enr().empty()) {
    const std::string& _s = this->_internal_enr();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "types.NodeInfoReply.enr");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .types.NodeInfoPorts ports = 5;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, *_impl_.ports_, _impl_.ports_->GetCachedSize(), target, stream);
  }

  // string listener_addr = 6;
  if (!this->_internal_listener_addr().empty()) {
    const std::string& _s = this->_internal_listener_addr();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "types.NodeInfoReply.listener_addr");
    target = stream->WriteStringMaybeAliased(6, _s, target);
  }

  // bytes protocols = 7;
  if (!this->_internal_protocols().empty()) {
    const std::string& _s = this->_internal_protocols();
    target = stream->WriteBytesMaybeAliased(7, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:types.NodeInfoReply)
  return target;
}

::size_t NodeInfoReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:types.NodeInfoReply)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // string id = 1;
  if (!this->_internal_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_id());
  }

  // string name = 2;
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  // string enode = 3;
  if (!this->_internal_enode().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_enode());
  }

  // string enr = 4;
  if (!this->_internal_enr().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_enr());
  }

  // string listener_addr = 6;
  if (!this->_internal_listener_addr().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_listener_addr());
  }

  // bytes protocols = 7;
  if (!this->_internal_protocols().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_protocols());
  }

  // .types.NodeInfoPorts ports = 5;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.ports_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void NodeInfoReply::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<NodeInfoReply*>(&to_msg);
  auto& from = static_cast<const NodeInfoReply&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:types.NodeInfoReply)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_enode().empty()) {
    _this->_internal_set_enode(from._internal_enode());
  }
  if (!from._internal_enr().empty()) {
    _this->_internal_set_enr(from._internal_enr());
  }
  if (!from._internal_listener_addr().empty()) {
    _this->_internal_set_listener_addr(from._internal_listener_addr());
  }
  if (!from._internal_protocols().empty()) {
    _this->_internal_set_protocols(from._internal_protocols());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.ports_ != nullptr);
    if (_this->_impl_.ports_ == nullptr) {
      _this->_impl_.ports_ =
          ::google::protobuf::Message::CopyConstruct<::types::NodeInfoPorts>(arena, *from._impl_.ports_);
    } else {
      _this->_impl_.ports_->MergeFrom(*from._impl_.ports_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NodeInfoReply::CopyFrom(const NodeInfoReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:types.NodeInfoReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void NodeInfoReply::InternalSwap(NodeInfoReply* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.enode_, &other->_impl_.enode_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.enr_, &other->_impl_.enr_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.listener_addr_, &other->_impl_.listener_addr_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.protocols_, &other->_impl_.protocols_, arena);
  swap(_impl_.ports_, other->_impl_.ports_);
}

::google::protobuf::Metadata NodeInfoReply::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PeerInfo::_Internal {
 public:
};

PeerInfo::PeerInfo(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:types.PeerInfo)
}
inline PROTOBUF_NDEBUG_INLINE PeerInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::types::PeerInfo& from_msg)
      : caps_{visibility, arena, from.caps_},
        id_(arena, from.id_),
        name_(arena, from.name_),
        enode_(arena, from.enode_),
        enr_(arena, from.enr_),
        conn_local_addr_(arena, from.conn_local_addr_),
        conn_remote_addr_(arena, from.conn_remote_addr_),
        _cached_size_{0} {}

PeerInfo::PeerInfo(
    ::google::protobuf::Arena* arena,
    const PeerInfo& from)
    : ::google::protobuf::Message(arena) {
  PeerInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, conn_is_inbound_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, conn_is_inbound_),
           offsetof(Impl_, conn_is_static_) -
               offsetof(Impl_, conn_is_inbound_) +
               sizeof(Impl_::conn_is_static_));

  // @@protoc_insertion_point(copy_constructor:types.PeerInfo)
}
inline PROTOBUF_NDEBUG_INLINE PeerInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : caps_{visibility, arena},
        id_(arena),
        name_(arena),
        enode_(arena),
        enr_(arena),
        conn_local_addr_(arena),
        conn_remote_addr_(arena),
        _cached_size_{0} {}

inline void PeerInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, conn_is_inbound_),
           0,
           offsetof(Impl_, conn_is_static_) -
               offsetof(Impl_, conn_is_inbound_) +
               sizeof(Impl_::conn_is_static_));
}
PeerInfo::~PeerInfo() {
  // @@protoc_insertion_point(destructor:types.PeerInfo)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PeerInfo::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.id_.Destroy();
  _impl_.name_.Destroy();
  _impl_.enode_.Destroy();
  _impl_.enr_.Destroy();
  _impl_.conn_local_addr_.Destroy();
  _impl_.conn_remote_addr_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
PeerInfo::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(PeerInfo, _impl_._cached_size_),
              false,
          },
          &PeerInfo::MergeImpl,
          &PeerInfo::kDescriptorMethods,
          &descriptor_table_types_2ftypes_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 10, 0, 80, 2> PeerInfo::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    10, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966272,  // skipmap
    offsetof(decltype(_table_), field_entries),
    10,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_PeerInfo_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::types::PeerInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PeerInfo, _impl_.id_)}},
    // string name = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(PeerInfo, _impl_.name_)}},
    // string enode = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(PeerInfo, _impl_.enode_)}},
    // string enr = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(PeerInfo, _impl_.enr_)}},
    // repeated string caps = 5;
    {::_pbi::TcParser::FastUR1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(PeerInfo, _impl_.caps_)}},
    // string conn_local_addr = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(PeerInfo, _impl_.conn_local_addr_)}},
    // string conn_remote_addr = 7;
    {::_pbi::TcParser::FastUS1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(PeerInfo, _impl_.conn_remote_addr_)}},
    // bool conn_is_inbound = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(PeerInfo, _impl_.conn_is_inbound_), 63>(),
     {64, 63, 0, PROTOBUF_FIELD_OFFSET(PeerInfo, _impl_.conn_is_inbound_)}},
    // bool conn_is_trusted = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(PeerInfo, _impl_.conn_is_trusted_), 63>(),
     {72, 63, 0, PROTOBUF_FIELD_OFFSET(PeerInfo, _impl_.conn_is_trusted_)}},
    // bool conn_is_static = 10;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(PeerInfo, _impl_.conn_is_static_), 63>(),
     {80, 63, 0, PROTOBUF_FIELD_OFFSET(PeerInfo, _impl_.conn_is_static_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string id = 1;
    {PROTOBUF_FIELD_OFFSET(PeerInfo, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string name = 2;
    {PROTOBUF_FIELD_OFFSET(PeerInfo, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string enode = 3;
    {PROTOBUF_FIELD_OFFSET(PeerInfo, _impl_.enode_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string enr = 4;
    {PROTOBUF_FIELD_OFFSET(PeerInfo, _impl_.enr_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated string caps = 5;
    {PROTOBUF_FIELD_OFFSET(PeerInfo, _impl_.caps_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // string conn_local_addr = 6;
    {PROTOBUF_FIELD_OFFSET(PeerInfo, _impl_.conn_local_addr_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string conn_remote_addr = 7;
    {PROTOBUF_FIELD_OFFSET(PeerInfo, _impl_.conn_remote_addr_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool conn_is_inbound = 8;
    {PROTOBUF_FIELD_OFFSET(PeerInfo, _impl_.conn_is_inbound_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool conn_is_trusted = 9;
    {PROTOBUF_FIELD_OFFSET(PeerInfo, _impl_.conn_is_trusted_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool conn_is_static = 10;
    {PROTOBUF_FIELD_OFFSET(PeerInfo, _impl_.conn_is_static_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
    "\16\2\4\5\3\4\17\20\0\0\0\0\0\0\0\0"
    "types.PeerInfo"
    "id"
    "name"
    "enode"
    "enr"
    "caps"
    "conn_local_addr"
    "conn_remote_addr"
  }},
};

PROTOBUF_NOINLINE void PeerInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:types.PeerInfo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.caps_.Clear();
  _impl_.id_.ClearToEmpty();
  _impl_.name_.ClearToEmpty();
  _impl_.enode_.ClearToEmpty();
  _impl_.enr_.ClearToEmpty();
  _impl_.conn_local_addr_.ClearToEmpty();
  _impl_.conn_remote_addr_.ClearToEmpty();
  ::memset(&_impl_.conn_is_inbound_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.conn_is_static_) -
      reinterpret_cast<char*>(&_impl_.conn_is_inbound_)) + sizeof(_impl_.conn_is_static_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* PeerInfo::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:types.PeerInfo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string id = 1;
  if (!this->_internal_id().empty()) {
    const std::string& _s = this->_internal_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "types.PeerInfo.id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string name = 2;
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "types.PeerInfo.name");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string enode = 3;
  if (!this->_internal_enode().empty()) {
    const std::string& _s = this->_internal_enode();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "types.PeerInfo.enode");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // string enr = 4;
  if (!this->_internal_enr().empty()) {
    const std::string& _s = this->_internal_enr();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "types.PeerInfo.enr");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // repeated string caps = 5;
  for (int i = 0, n = this->_internal_caps_size(); i < n; ++i) {
    const auto& s = this->_internal_caps().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "types.PeerInfo.caps");
    target = stream->WriteString(5, s, target);
  }

  // string conn_local_addr = 6;
  if (!this->_internal_conn_local_addr().empty()) {
    const std::string& _s = this->_internal_conn_local_addr();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "types.PeerInfo.conn_local_addr");
    target = stream->WriteStringMaybeAliased(6, _s, target);
  }

  // string conn_remote_addr = 7;
  if (!this->_internal_conn_remote_addr().empty()) {
    const std::string& _s = this->_internal_conn_remote_addr();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "types.PeerInfo.conn_remote_addr");
    target = stream->WriteStringMaybeAliased(7, _s, target);
  }

  // bool conn_is_inbound = 8;
  if (this->_internal_conn_is_inbound() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        8, this->_internal_conn_is_inbound(), target);
  }

  // bool conn_is_trusted = 9;
  if (this->_internal_conn_is_trusted() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        9, this->_internal_conn_is_trusted(), target);
  }

  // bool conn_is_static = 10;
  if (this->_internal_conn_is_static() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        10, this->_internal_conn_is_static(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:types.PeerInfo)
  return target;
}

::size_t PeerInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:types.PeerInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated string caps = 5;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_caps().size());
  for (int i = 0, n = _internal_caps().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_caps().Get(i));
  }
  // string id = 1;
  if (!this->_internal_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_id());
  }

  // string name = 2;
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  // string enode = 3;
  if (!this->_internal_enode().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_enode());
  }

  // string enr = 4;
  if (!this->_internal_enr().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_enr());
  }

  // string conn_local_addr = 6;
  if (!this->_internal_conn_local_addr().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_conn_local_addr());
  }

  // string conn_remote_addr = 7;
  if (!this->_internal_conn_remote_addr().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_conn_remote_addr());
  }

  // bool conn_is_inbound = 8;
  if (this->_internal_conn_is_inbound() != 0) {
    total_size += 2;
  }

  // bool conn_is_trusted = 9;
  if (this->_internal_conn_is_trusted() != 0) {
    total_size += 2;
  }

  // bool conn_is_static = 10;
  if (this->_internal_conn_is_static() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void PeerInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PeerInfo*>(&to_msg);
  auto& from = static_cast<const PeerInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:types.PeerInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_caps()->MergeFrom(from._internal_caps());
  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_enode().empty()) {
    _this->_internal_set_enode(from._internal_enode());
  }
  if (!from._internal_enr().empty()) {
    _this->_internal_set_enr(from._internal_enr());
  }
  if (!from._internal_conn_local_addr().empty()) {
    _this->_internal_set_conn_local_addr(from._internal_conn_local_addr());
  }
  if (!from._internal_conn_remote_addr().empty()) {
    _this->_internal_set_conn_remote_addr(from._internal_conn_remote_addr());
  }
  if (from._internal_conn_is_inbound() != 0) {
    _this->_impl_.conn_is_inbound_ = from._impl_.conn_is_inbound_;
  }
  if (from._internal_conn_is_trusted() != 0) {
    _this->_impl_.conn_is_trusted_ = from._impl_.conn_is_trusted_;
  }
  if (from._internal_conn_is_static() != 0) {
    _this->_impl_.conn_is_static_ = from._impl_.conn_is_static_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PeerInfo::CopyFrom(const PeerInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:types.PeerInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PeerInfo::InternalSwap(PeerInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.caps_.InternalSwap(&other->_impl_.caps_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.enode_, &other->_impl_.enode_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.enr_, &other->_impl_.enr_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.conn_local_addr_, &other->_impl_.conn_local_addr_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.conn_remote_addr_, &other->_impl_.conn_remote_addr_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PeerInfo, _impl_.conn_is_static_)
      + sizeof(PeerInfo::_impl_.conn_is_static_)
      - PROTOBUF_FIELD_OFFSET(PeerInfo, _impl_.conn_is_inbound_)>(
          reinterpret_cast<char*>(&_impl_.conn_is_inbound_),
          reinterpret_cast<char*>(&other->_impl_.conn_is_inbound_));
}

::google::protobuf::Metadata PeerInfo::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ExecutionPayloadBodyV1::_Internal {
 public:
};

ExecutionPayloadBodyV1::ExecutionPayloadBodyV1(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:types.ExecutionPayloadBodyV1)
}
inline PROTOBUF_NDEBUG_INLINE ExecutionPayloadBodyV1::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::types::ExecutionPayloadBodyV1& from_msg)
      : transactions_{visibility, arena, from.transactions_},
        withdrawals_{visibility, arena, from.withdrawals_},
        _cached_size_{0} {}

ExecutionPayloadBodyV1::ExecutionPayloadBodyV1(
    ::google::protobuf::Arena* arena,
    const ExecutionPayloadBodyV1& from)
    : ::google::protobuf::Message(arena) {
  ExecutionPayloadBodyV1* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:types.ExecutionPayloadBodyV1)
}
inline PROTOBUF_NDEBUG_INLINE ExecutionPayloadBodyV1::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : transactions_{visibility, arena},
        withdrawals_{visibility, arena},
        _cached_size_{0} {}

inline void ExecutionPayloadBodyV1::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ExecutionPayloadBodyV1::~ExecutionPayloadBodyV1() {
  // @@protoc_insertion_point(destructor:types.ExecutionPayloadBodyV1)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ExecutionPayloadBodyV1::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
ExecutionPayloadBodyV1::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(ExecutionPayloadBodyV1, _impl_._cached_size_),
              false,
          },
          &ExecutionPayloadBodyV1::MergeImpl,
          &ExecutionPayloadBodyV1::kDescriptorMethods,
          &descriptor_table_types_2ftypes_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> ExecutionPayloadBodyV1::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ExecutionPayloadBodyV1_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::types::ExecutionPayloadBodyV1>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .types.Withdrawal withdrawals = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ExecutionPayloadBodyV1, _impl_.withdrawals_)}},
    // repeated bytes transactions = 1;
    {::_pbi::TcParser::FastBR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ExecutionPayloadBodyV1, _impl_.transactions_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated bytes transactions = 1;
    {PROTOBUF_FIELD_OFFSET(ExecutionPayloadBodyV1, _impl_.transactions_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kBytes | ::_fl::kRepSString)},
    // repeated .types.Withdrawal withdrawals = 2;
    {PROTOBUF_FIELD_OFFSET(ExecutionPayloadBodyV1, _impl_.withdrawals_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::types::Withdrawal>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void ExecutionPayloadBodyV1::Clear() {
// @@protoc_insertion_point(message_clear_start:types.ExecutionPayloadBodyV1)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.transactions_.Clear();
  _impl_.withdrawals_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* ExecutionPayloadBodyV1::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:types.ExecutionPayloadBodyV1)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated bytes transactions = 1;
  for (int i = 0, n = this->_internal_transactions_size(); i < n; ++i) {
    const auto& s = this->_internal_transactions().Get(i);
    target = stream->WriteBytes(1, s, target);
  }

  // repeated .types.Withdrawal withdrawals = 2;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_withdrawals_size());
       i < n; i++) {
    const auto& repfield = this->_internal_withdrawals().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            2, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:types.ExecutionPayloadBodyV1)
  return target;
}

::size_t ExecutionPayloadBodyV1::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:types.ExecutionPayloadBodyV1)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated bytes transactions = 1;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_transactions().size());
  for (int i = 0, n = _internal_transactions().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
        _internal_transactions().Get(i));
  }
  // repeated .types.Withdrawal withdrawals = 2;
  total_size += 1UL * this->_internal_withdrawals_size();
  for (const auto& msg : this->_internal_withdrawals()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void ExecutionPayloadBodyV1::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ExecutionPayloadBodyV1*>(&to_msg);
  auto& from = static_cast<const ExecutionPayloadBodyV1&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:types.ExecutionPayloadBodyV1)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_transactions()->MergeFrom(from._internal_transactions());
  _this->_internal_mutable_withdrawals()->MergeFrom(
      from._internal_withdrawals());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ExecutionPayloadBodyV1::CopyFrom(const ExecutionPayloadBodyV1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:types.ExecutionPayloadBodyV1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ExecutionPayloadBodyV1::InternalSwap(ExecutionPayloadBodyV1* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.transactions_.InternalSwap(&other->_impl_.transactions_);
  _impl_.withdrawals_.InternalSwap(&other->_impl_.withdrawals_);
}

::google::protobuf::Metadata ExecutionPayloadBodyV1::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::_pbi::
        ExtensionIdentifier<::google::protobuf::FileOptions, ::_pbi::PrimitiveTypeTraits< ::uint32_t >,
                            13, false>
            service_major_version(kServiceMajorVersionFieldNumber, 0u);
PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::_pbi::
        ExtensionIdentifier<::google::protobuf::FileOptions, ::_pbi::PrimitiveTypeTraits< ::uint32_t >,
                            13, false>
            service_minor_version(kServiceMinorVersionFieldNumber, 0u);
PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::_pbi::
        ExtensionIdentifier<::google::protobuf::FileOptions, ::_pbi::PrimitiveTypeTraits< ::uint32_t >,
                            13, false>
            service_patch_version(kServicePatchVersionFieldNumber, 0u);
// @@protoc_insertion_point(namespace_scope)
}  // namespace types
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_types_2ftypes_2eproto),
        ::_pbi::ExtensionSet::RegisterExtension(
            &::google::protobuf::FileOptions::default_instance(), 50001, 13,
            false, false),
        ::_pbi::ExtensionSet::RegisterExtension(
            &::google::protobuf::FileOptions::default_instance(), 50002, 13,
            false, false),
        ::_pbi::ExtensionSet::RegisterExtension(
            &::google::protobuf::FileOptions::default_instance(), 50003, 13,
            false, false),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
