// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: txpool/txpool.proto
// Protobuf C++ Version: 5.27.0

#include "txpool/txpool.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace txpool {

inline constexpr TransactionsReply::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : rlp_txs_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TransactionsReply::TransactionsReply(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct TransactionsReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TransactionsReplyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TransactionsReplyDefaultTypeInternal() {}
  union {
    TransactionsReply _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TransactionsReplyDefaultTypeInternal _TransactionsReply_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR StatusRequest::StatusRequest(::_pbi::ConstantInitialized) {}
struct StatusRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StatusRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StatusRequestDefaultTypeInternal() {}
  union {
    StatusRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StatusRequestDefaultTypeInternal _StatusRequest_default_instance_;

inline constexpr StatusReply::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : pending_count_{0u},
        queued_count_{0u},
        base_fee_count_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR StatusReply::StatusReply(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct StatusReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StatusReplyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StatusReplyDefaultTypeInternal() {}
  union {
    StatusReply _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StatusReplyDefaultTypeInternal _StatusReply_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR OnAddRequest::OnAddRequest(::_pbi::ConstantInitialized) {}
struct OnAddRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OnAddRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OnAddRequestDefaultTypeInternal() {}
  union {
    OnAddRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OnAddRequestDefaultTypeInternal _OnAddRequest_default_instance_;

inline constexpr OnAddReply::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : rpl_txs_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR OnAddReply::OnAddReply(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct OnAddReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OnAddReplyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OnAddReplyDefaultTypeInternal() {}
  union {
    OnAddReply _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OnAddReplyDefaultTypeInternal _OnAddReply_default_instance_;

inline constexpr NonceReply::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : nonce_{::uint64_t{0u}},
        found_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR NonceReply::NonceReply(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct NonceReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NonceReplyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NonceReplyDefaultTypeInternal() {}
  union {
    NonceReply _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NonceReplyDefaultTypeInternal _NonceReply_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR AllRequest::AllRequest(::_pbi::ConstantInitialized) {}
struct AllRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AllRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AllRequestDefaultTypeInternal() {}
  union {
    AllRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AllRequestDefaultTypeInternal _AllRequest_default_instance_;

inline constexpr AddRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : rlp_txs_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR AddRequest::AddRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AddRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AddRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AddRequestDefaultTypeInternal() {}
  union {
    AddRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AddRequestDefaultTypeInternal _AddRequest_default_instance_;

inline constexpr AddReply::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : imported_{},
        _imported_cached_byte_size_{0},
        errors_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR AddReply::AddReply(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AddReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AddReplyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AddReplyDefaultTypeInternal() {}
  union {
    AddReply _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AddReplyDefaultTypeInternal _AddReply_default_instance_;

inline constexpr TxHashes::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : hashes_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TxHashes::TxHashes(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct TxHashesDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TxHashesDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TxHashesDefaultTypeInternal() {}
  union {
    TxHashes _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TxHashesDefaultTypeInternal _TxHashes_default_instance_;

inline constexpr TransactionsRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : hashes_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TransactionsRequest::TransactionsRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct TransactionsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TransactionsRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TransactionsRequestDefaultTypeInternal() {}
  union {
    TransactionsRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TransactionsRequestDefaultTypeInternal _TransactionsRequest_default_instance_;

inline constexpr PendingReply_Tx::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        rlp_tx_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        sender_{nullptr},
        is_local_{false} {}

template <typename>
PROTOBUF_CONSTEXPR PendingReply_Tx::PendingReply_Tx(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PendingReply_TxDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PendingReply_TxDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PendingReply_TxDefaultTypeInternal() {}
  union {
    PendingReply_Tx _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PendingReply_TxDefaultTypeInternal _PendingReply_Tx_default_instance_;

inline constexpr NonceRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        address_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR NonceRequest::NonceRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct NonceRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NonceRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NonceRequestDefaultTypeInternal() {}
  union {
    NonceRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NonceRequestDefaultTypeInternal _NonceRequest_default_instance_;

inline constexpr AllReply_Tx::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        rlp_tx_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        sender_{nullptr},
        txn_type_{static_cast< ::txpool::AllReply_TxnType >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR AllReply_Tx::AllReply_Tx(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AllReply_TxDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AllReply_TxDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AllReply_TxDefaultTypeInternal() {}
  union {
    AllReply_Tx _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AllReply_TxDefaultTypeInternal _AllReply_Tx_default_instance_;

inline constexpr PendingReply::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : txs_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PendingReply::PendingReply(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PendingReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PendingReplyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PendingReplyDefaultTypeInternal() {}
  union {
    PendingReply _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PendingReplyDefaultTypeInternal _PendingReply_default_instance_;

inline constexpr AllReply::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : txs_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR AllReply::AllReply(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AllReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AllReplyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AllReplyDefaultTypeInternal() {}
  union {
    AllReply _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AllReplyDefaultTypeInternal _AllReply_default_instance_;
}  // namespace txpool
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_txpool_2ftxpool_2eproto[2];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_txpool_2ftxpool_2eproto = nullptr;
const ::uint32_t
    TableStruct_txpool_2ftxpool_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::txpool::TxHashes, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::txpool::TxHashes, _impl_.hashes_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::txpool::AddRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::txpool::AddRequest, _impl_.rlp_txs_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::txpool::AddReply, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::txpool::AddReply, _impl_.imported_),
        PROTOBUF_FIELD_OFFSET(::txpool::AddReply, _impl_.errors_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::txpool::TransactionsRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::txpool::TransactionsRequest, _impl_.hashes_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::txpool::TransactionsReply, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::txpool::TransactionsReply, _impl_.rlp_txs_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::txpool::OnAddRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::txpool::OnAddReply, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::txpool::OnAddReply, _impl_.rpl_txs_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::txpool::AllRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::txpool::AllReply_Tx, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::txpool::AllReply_Tx, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::txpool::AllReply_Tx, _impl_.txn_type_),
        PROTOBUF_FIELD_OFFSET(::txpool::AllReply_Tx, _impl_.sender_),
        PROTOBUF_FIELD_OFFSET(::txpool::AllReply_Tx, _impl_.rlp_tx_),
        ~0u,
        0,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::txpool::AllReply, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::txpool::AllReply, _impl_.txs_),
        PROTOBUF_FIELD_OFFSET(::txpool::PendingReply_Tx, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::txpool::PendingReply_Tx, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::txpool::PendingReply_Tx, _impl_.sender_),
        PROTOBUF_FIELD_OFFSET(::txpool::PendingReply_Tx, _impl_.rlp_tx_),
        PROTOBUF_FIELD_OFFSET(::txpool::PendingReply_Tx, _impl_.is_local_),
        0,
        ~0u,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::txpool::PendingReply, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::txpool::PendingReply, _impl_.txs_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::txpool::StatusRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::txpool::StatusReply, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::txpool::StatusReply, _impl_.pending_count_),
        PROTOBUF_FIELD_OFFSET(::txpool::StatusReply, _impl_.queued_count_),
        PROTOBUF_FIELD_OFFSET(::txpool::StatusReply, _impl_.base_fee_count_),
        PROTOBUF_FIELD_OFFSET(::txpool::NonceRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::txpool::NonceRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::txpool::NonceRequest, _impl_.address_),
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::txpool::NonceReply, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::txpool::NonceReply, _impl_.found_),
        PROTOBUF_FIELD_OFFSET(::txpool::NonceReply, _impl_.nonce_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::txpool::TxHashes)},
        {9, -1, -1, sizeof(::txpool::AddRequest)},
        {18, -1, -1, sizeof(::txpool::AddReply)},
        {28, -1, -1, sizeof(::txpool::TransactionsRequest)},
        {37, -1, -1, sizeof(::txpool::TransactionsReply)},
        {46, -1, -1, sizeof(::txpool::OnAddRequest)},
        {54, -1, -1, sizeof(::txpool::OnAddReply)},
        {63, -1, -1, sizeof(::txpool::AllRequest)},
        {71, 82, -1, sizeof(::txpool::AllReply_Tx)},
        {85, -1, -1, sizeof(::txpool::AllReply)},
        {94, 105, -1, sizeof(::txpool::PendingReply_Tx)},
        {108, -1, -1, sizeof(::txpool::PendingReply)},
        {117, -1, -1, sizeof(::txpool::StatusRequest)},
        {125, -1, -1, sizeof(::txpool::StatusReply)},
        {136, 145, -1, sizeof(::txpool::NonceRequest)},
        {146, -1, -1, sizeof(::txpool::NonceReply)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::txpool::_TxHashes_default_instance_._instance,
    &::txpool::_AddRequest_default_instance_._instance,
    &::txpool::_AddReply_default_instance_._instance,
    &::txpool::_TransactionsRequest_default_instance_._instance,
    &::txpool::_TransactionsReply_default_instance_._instance,
    &::txpool::_OnAddRequest_default_instance_._instance,
    &::txpool::_OnAddReply_default_instance_._instance,
    &::txpool::_AllRequest_default_instance_._instance,
    &::txpool::_AllReply_Tx_default_instance_._instance,
    &::txpool::_AllReply_default_instance_._instance,
    &::txpool::_PendingReply_Tx_default_instance_._instance,
    &::txpool::_PendingReply_default_instance_._instance,
    &::txpool::_StatusRequest_default_instance_._instance,
    &::txpool::_StatusReply_default_instance_._instance,
    &::txpool::_NonceRequest_default_instance_._instance,
    &::txpool::_NonceReply_default_instance_._instance,
};
const char descriptor_table_protodef_txpool_2ftxpool_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\023txpool/txpool.proto\022\006txpool\032\033google/pr"
    "otobuf/empty.proto\032\021types/types.proto\"\'\n"
    "\010TxHashes\022\033\n\006hashes\030\001 \003(\0132\013.types.H256\"\035"
    "\n\nAddRequest\022\017\n\007rlp_txs\030\001 \003(\014\"B\n\010AddRepl"
    "y\022&\n\010imported\030\001 \003(\0162\024.txpool.ImportResul"
    "t\022\016\n\006errors\030\002 \003(\t\"2\n\023TransactionsRequest"
    "\022\033\n\006hashes\030\001 \003(\0132\013.types.H256\"$\n\021Transac"
    "tionsReply\022\017\n\007rlp_txs\030\001 \003(\014\"\016\n\014OnAddRequ"
    "est\"\035\n\nOnAddReply\022\017\n\007rpl_txs\030\001 \003(\014\"\014\n\nAl"
    "lRequest\"\275\001\n\010AllReply\022 \n\003txs\030\001 \003(\0132\023.txp"
    "ool.AllReply.Tx\032]\n\002Tx\022*\n\010txn_type\030\001 \001(\0162"
    "\030.txpool.AllReply.TxnType\022\033\n\006sender\030\002 \001("
    "\0132\013.types.H160\022\016\n\006rlp_tx\030\003 \001(\014\"0\n\007TxnTyp"
    "e\022\013\n\007PENDING\020\000\022\n\n\006QUEUED\020\001\022\014\n\010BASE_FEE\020\002"
    "\"y\n\014PendingReply\022$\n\003txs\030\001 \003(\0132\027.txpool.P"
    "endingReply.Tx\032C\n\002Tx\022\033\n\006sender\030\001 \001(\0132\013.t"
    "ypes.H160\022\016\n\006rlp_tx\030\002 \001(\014\022\020\n\010is_local\030\003 "
    "\001(\010\"\017\n\rStatusRequest\"R\n\013StatusReply\022\025\n\rp"
    "ending_count\030\001 \001(\r\022\024\n\014queued_count\030\002 \001(\r"
    "\022\026\n\016base_fee_count\030\003 \001(\r\",\n\014NonceRequest"
    "\022\034\n\007address\030\001 \001(\0132\013.types.H160\"*\n\nNonceR"
    "eply\022\r\n\005found\030\001 \001(\010\022\r\n\005nonce\030\002 \001(\004*l\n\014Im"
    "portResult\022\013\n\007SUCCESS\020\000\022\022\n\016ALREADY_EXIST"
    "S\020\001\022\017\n\013FEE_TOO_LOW\020\002\022\t\n\005STALE\020\003\022\013\n\007INVAL"
    "ID\020\004\022\022\n\016INTERNAL_ERROR\020\0052\354\003\n\006Txpool\0226\n\007V"
    "ersion\022\026.google.protobuf.Empty\032\023.types.V"
    "ersionReply\0221\n\013FindUnknown\022\020.txpool.TxHa"
    "shes\032\020.txpool.TxHashes\022+\n\003Add\022\022.txpool.A"
    "ddRequest\032\020.txpool.AddReply\022F\n\014Transacti"
    "ons\022\033.txpool.TransactionsRequest\032\031.txpoo"
    "l.TransactionsReply\022+\n\003All\022\022.txpool.AllR"
    "equest\032\020.txpool.AllReply\0227\n\007Pending\022\026.go"
    "ogle.protobuf.Empty\032\024.txpool.PendingRepl"
    "y\0223\n\005OnAdd\022\024.txpool.OnAddRequest\032\022.txpoo"
    "l.OnAddReply0\001\0224\n\006Status\022\025.txpool.Status"
    "Request\032\023.txpool.StatusReply\0221\n\005Nonce\022\024."
    "txpool.NonceRequest\032\022.txpool.NonceReplyB"
    "\026Z\024./txpool;txpoolprotob\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_txpool_2ftxpool_2eproto_deps[2] =
    {
        &::descriptor_table_google_2fprotobuf_2fempty_2eproto,
        &::descriptor_table_types_2ftypes_2eproto,
};
static ::absl::once_flag descriptor_table_txpool_2ftxpool_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_txpool_2ftxpool_2eproto = {
    false,
    false,
    1511,
    descriptor_table_protodef_txpool_2ftxpool_2eproto,
    "txpool/txpool.proto",
    &descriptor_table_txpool_2ftxpool_2eproto_once,
    descriptor_table_txpool_2ftxpool_2eproto_deps,
    2,
    16,
    schemas,
    file_default_instances,
    TableStruct_txpool_2ftxpool_2eproto::offsets,
    file_level_enum_descriptors_txpool_2ftxpool_2eproto,
    file_level_service_descriptors_txpool_2ftxpool_2eproto,
};
namespace txpool {
const ::google::protobuf::EnumDescriptor* AllReply_TxnType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_txpool_2ftxpool_2eproto);
  return file_level_enum_descriptors_txpool_2ftxpool_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t AllReply_TxnType_internal_data_[] = {
    196608u, 0u, };
bool AllReply_TxnType_IsValid(int value) {
  return 0 <= value && value <= 2;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr AllReply_TxnType AllReply::PENDING;
constexpr AllReply_TxnType AllReply::QUEUED;
constexpr AllReply_TxnType AllReply::BASE_FEE;
constexpr AllReply_TxnType AllReply::TxnType_MIN;
constexpr AllReply_TxnType AllReply::TxnType_MAX;
constexpr int AllReply::TxnType_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* ImportResult_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_txpool_2ftxpool_2eproto);
  return file_level_enum_descriptors_txpool_2ftxpool_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t ImportResult_internal_data_[] = {
    393216u, 0u, };
bool ImportResult_IsValid(int value) {
  return 0 <= value && value <= 5;
}
// ===================================================================

class TxHashes::_Internal {
 public:
};

void TxHashes::clear_hashes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.hashes_.Clear();
}
TxHashes::TxHashes(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:txpool.TxHashes)
}
inline PROTOBUF_NDEBUG_INLINE TxHashes::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::txpool::TxHashes& from_msg)
      : hashes_{visibility, arena, from.hashes_},
        _cached_size_{0} {}

TxHashes::TxHashes(
    ::google::protobuf::Arena* arena,
    const TxHashes& from)
    : ::google::protobuf::Message(arena) {
  TxHashes* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:txpool.TxHashes)
}
inline PROTOBUF_NDEBUG_INLINE TxHashes::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : hashes_{visibility, arena},
        _cached_size_{0} {}

inline void TxHashes::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
TxHashes::~TxHashes() {
  // @@protoc_insertion_point(destructor:txpool.TxHashes)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TxHashes::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
TxHashes::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(TxHashes, _impl_._cached_size_),
              false,
          },
          &TxHashes::MergeImpl,
          &TxHashes::kDescriptorMethods,
          &descriptor_table_txpool_2ftxpool_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> TxHashes::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_TxHashes_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::txpool::TxHashes>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .types.H256 hashes = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(TxHashes, _impl_.hashes_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .types.H256 hashes = 1;
    {PROTOBUF_FIELD_OFFSET(TxHashes, _impl_.hashes_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::types::H256>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void TxHashes::Clear() {
// @@protoc_insertion_point(message_clear_start:txpool.TxHashes)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.hashes_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* TxHashes::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:txpool.TxHashes)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .types.H256 hashes = 1;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_hashes_size());
       i < n; i++) {
    const auto& repfield = this->_internal_hashes().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:txpool.TxHashes)
  return target;
}

::size_t TxHashes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:txpool.TxHashes)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated .types.H256 hashes = 1;
  total_size += 1UL * this->_internal_hashes_size();
  for (const auto& msg : this->_internal_hashes()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void TxHashes::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TxHashes*>(&to_msg);
  auto& from = static_cast<const TxHashes&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:txpool.TxHashes)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_hashes()->MergeFrom(
      from._internal_hashes());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TxHashes::CopyFrom(const TxHashes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:txpool.TxHashes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TxHashes::InternalSwap(TxHashes* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.hashes_.InternalSwap(&other->_impl_.hashes_);
}

::google::protobuf::Metadata TxHashes::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class AddRequest::_Internal {
 public:
};

AddRequest::AddRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:txpool.AddRequest)
}
inline PROTOBUF_NDEBUG_INLINE AddRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::txpool::AddRequest& from_msg)
      : rlp_txs_{visibility, arena, from.rlp_txs_},
        _cached_size_{0} {}

AddRequest::AddRequest(
    ::google::protobuf::Arena* arena,
    const AddRequest& from)
    : ::google::protobuf::Message(arena) {
  AddRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:txpool.AddRequest)
}
inline PROTOBUF_NDEBUG_INLINE AddRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : rlp_txs_{visibility, arena},
        _cached_size_{0} {}

inline void AddRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
AddRequest::~AddRequest() {
  // @@protoc_insertion_point(destructor:txpool.AddRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AddRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
AddRequest::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(AddRequest, _impl_._cached_size_),
              false,
          },
          &AddRequest::MergeImpl,
          &AddRequest::kDescriptorMethods,
          &descriptor_table_txpool_2ftxpool_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> AddRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_AddRequest_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::txpool::AddRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated bytes rlp_txs = 1;
    {::_pbi::TcParser::FastBR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(AddRequest, _impl_.rlp_txs_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated bytes rlp_txs = 1;
    {PROTOBUF_FIELD_OFFSET(AddRequest, _impl_.rlp_txs_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kBytes | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void AddRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:txpool.AddRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.rlp_txs_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* AddRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:txpool.AddRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated bytes rlp_txs = 1;
  for (int i = 0, n = this->_internal_rlp_txs_size(); i < n; ++i) {
    const auto& s = this->_internal_rlp_txs().Get(i);
    target = stream->WriteBytes(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:txpool.AddRequest)
  return target;
}

::size_t AddRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:txpool.AddRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated bytes rlp_txs = 1;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_rlp_txs().size());
  for (int i = 0, n = _internal_rlp_txs().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
        _internal_rlp_txs().Get(i));
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void AddRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AddRequest*>(&to_msg);
  auto& from = static_cast<const AddRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:txpool.AddRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_rlp_txs()->MergeFrom(from._internal_rlp_txs());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AddRequest::CopyFrom(const AddRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:txpool.AddRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AddRequest::InternalSwap(AddRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.rlp_txs_.InternalSwap(&other->_impl_.rlp_txs_);
}

::google::protobuf::Metadata AddRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class AddReply::_Internal {
 public:
};

AddReply::AddReply(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:txpool.AddReply)
}
inline PROTOBUF_NDEBUG_INLINE AddReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::txpool::AddReply& from_msg)
      : imported_{visibility, arena, from.imported_},
        _imported_cached_byte_size_{0},
        errors_{visibility, arena, from.errors_},
        _cached_size_{0} {}

AddReply::AddReply(
    ::google::protobuf::Arena* arena,
    const AddReply& from)
    : ::google::protobuf::Message(arena) {
  AddReply* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:txpool.AddReply)
}
inline PROTOBUF_NDEBUG_INLINE AddReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : imported_{visibility, arena},
        _imported_cached_byte_size_{0},
        errors_{visibility, arena},
        _cached_size_{0} {}

inline void AddReply::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
AddReply::~AddReply() {
  // @@protoc_insertion_point(destructor:txpool.AddReply)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AddReply::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
AddReply::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(AddReply, _impl_._cached_size_),
              false,
          },
          &AddReply::MergeImpl,
          &AddReply::kDescriptorMethods,
          &descriptor_table_txpool_2ftxpool_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 30, 2> AddReply::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_AddReply_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::txpool::AddReply>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated string errors = 2;
    {::_pbi::TcParser::FastUR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(AddReply, _impl_.errors_)}},
    // repeated .txpool.ImportResult imported = 1;
    {::_pbi::TcParser::FastV32P1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(AddReply, _impl_.imported_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .txpool.ImportResult imported = 1;
    {PROTOBUF_FIELD_OFFSET(AddReply, _impl_.imported_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedOpenEnum)},
    // repeated string errors = 2;
    {PROTOBUF_FIELD_OFFSET(AddReply, _impl_.errors_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\17\0\6\0\0\0\0\0"
    "txpool.AddReply"
    "errors"
  }},
};

PROTOBUF_NOINLINE void AddReply::Clear() {
// @@protoc_insertion_point(message_clear_start:txpool.AddReply)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.imported_.Clear();
  _impl_.errors_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* AddReply::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:txpool.AddReply)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .txpool.ImportResult imported = 1;
  {
    std::size_t byte_size = _impl_._imported_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(1, _internal_imported(),
                                       byte_size, target);
    }
  }

  // repeated string errors = 2;
  for (int i = 0, n = this->_internal_errors_size(); i < n; ++i) {
    const auto& s = this->_internal_errors().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "txpool.AddReply.errors");
    target = stream->WriteString(2, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:txpool.AddReply)
  return target;
}

::size_t AddReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:txpool.AddReply)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated .txpool.ImportResult imported = 1;
  {
    std::size_t data_size = 0;
    auto count = static_cast<std::size_t>(this->_internal_imported_size());

    for (std::size_t i = 0; i < count; ++i) {
      data_size += ::_pbi::WireFormatLite::EnumSize(
          this->_internal_imported().Get(static_cast<int>(i)));
    }
    total_size += data_size;
    if (data_size > 0) {
      total_size += 1;
      total_size += ::_pbi::WireFormatLite::Int32Size(
          static_cast<int32_t>(data_size));
    }
    _impl_._imported_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
  }
  // repeated string errors = 2;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_errors().size());
  for (int i = 0, n = _internal_errors().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_errors().Get(i));
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void AddReply::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AddReply*>(&to_msg);
  auto& from = static_cast<const AddReply&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:txpool.AddReply)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_imported()->MergeFrom(from._internal_imported());
  _this->_internal_mutable_errors()->MergeFrom(from._internal_errors());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AddReply::CopyFrom(const AddReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:txpool.AddReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AddReply::InternalSwap(AddReply* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.imported_.InternalSwap(&other->_impl_.imported_);
  _impl_.errors_.InternalSwap(&other->_impl_.errors_);
}

::google::protobuf::Metadata AddReply::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TransactionsRequest::_Internal {
 public:
};

void TransactionsRequest::clear_hashes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.hashes_.Clear();
}
TransactionsRequest::TransactionsRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:txpool.TransactionsRequest)
}
inline PROTOBUF_NDEBUG_INLINE TransactionsRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::txpool::TransactionsRequest& from_msg)
      : hashes_{visibility, arena, from.hashes_},
        _cached_size_{0} {}

TransactionsRequest::TransactionsRequest(
    ::google::protobuf::Arena* arena,
    const TransactionsRequest& from)
    : ::google::protobuf::Message(arena) {
  TransactionsRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:txpool.TransactionsRequest)
}
inline PROTOBUF_NDEBUG_INLINE TransactionsRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : hashes_{visibility, arena},
        _cached_size_{0} {}

inline void TransactionsRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
TransactionsRequest::~TransactionsRequest() {
  // @@protoc_insertion_point(destructor:txpool.TransactionsRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TransactionsRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
TransactionsRequest::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(TransactionsRequest, _impl_._cached_size_),
              false,
          },
          &TransactionsRequest::MergeImpl,
          &TransactionsRequest::kDescriptorMethods,
          &descriptor_table_txpool_2ftxpool_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> TransactionsRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_TransactionsRequest_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::txpool::TransactionsRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .types.H256 hashes = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(TransactionsRequest, _impl_.hashes_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .types.H256 hashes = 1;
    {PROTOBUF_FIELD_OFFSET(TransactionsRequest, _impl_.hashes_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::types::H256>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void TransactionsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:txpool.TransactionsRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.hashes_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* TransactionsRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:txpool.TransactionsRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .types.H256 hashes = 1;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_hashes_size());
       i < n; i++) {
    const auto& repfield = this->_internal_hashes().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:txpool.TransactionsRequest)
  return target;
}

::size_t TransactionsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:txpool.TransactionsRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated .types.H256 hashes = 1;
  total_size += 1UL * this->_internal_hashes_size();
  for (const auto& msg : this->_internal_hashes()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void TransactionsRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TransactionsRequest*>(&to_msg);
  auto& from = static_cast<const TransactionsRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:txpool.TransactionsRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_hashes()->MergeFrom(
      from._internal_hashes());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TransactionsRequest::CopyFrom(const TransactionsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:txpool.TransactionsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TransactionsRequest::InternalSwap(TransactionsRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.hashes_.InternalSwap(&other->_impl_.hashes_);
}

::google::protobuf::Metadata TransactionsRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TransactionsReply::_Internal {
 public:
};

TransactionsReply::TransactionsReply(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:txpool.TransactionsReply)
}
inline PROTOBUF_NDEBUG_INLINE TransactionsReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::txpool::TransactionsReply& from_msg)
      : rlp_txs_{visibility, arena, from.rlp_txs_},
        _cached_size_{0} {}

TransactionsReply::TransactionsReply(
    ::google::protobuf::Arena* arena,
    const TransactionsReply& from)
    : ::google::protobuf::Message(arena) {
  TransactionsReply* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:txpool.TransactionsReply)
}
inline PROTOBUF_NDEBUG_INLINE TransactionsReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : rlp_txs_{visibility, arena},
        _cached_size_{0} {}

inline void TransactionsReply::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
TransactionsReply::~TransactionsReply() {
  // @@protoc_insertion_point(destructor:txpool.TransactionsReply)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TransactionsReply::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
TransactionsReply::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(TransactionsReply, _impl_._cached_size_),
              false,
          },
          &TransactionsReply::MergeImpl,
          &TransactionsReply::kDescriptorMethods,
          &descriptor_table_txpool_2ftxpool_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> TransactionsReply::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_TransactionsReply_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::txpool::TransactionsReply>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated bytes rlp_txs = 1;
    {::_pbi::TcParser::FastBR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(TransactionsReply, _impl_.rlp_txs_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated bytes rlp_txs = 1;
    {PROTOBUF_FIELD_OFFSET(TransactionsReply, _impl_.rlp_txs_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kBytes | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void TransactionsReply::Clear() {
// @@protoc_insertion_point(message_clear_start:txpool.TransactionsReply)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.rlp_txs_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* TransactionsReply::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:txpool.TransactionsReply)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated bytes rlp_txs = 1;
  for (int i = 0, n = this->_internal_rlp_txs_size(); i < n; ++i) {
    const auto& s = this->_internal_rlp_txs().Get(i);
    target = stream->WriteBytes(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:txpool.TransactionsReply)
  return target;
}

::size_t TransactionsReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:txpool.TransactionsReply)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated bytes rlp_txs = 1;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_rlp_txs().size());
  for (int i = 0, n = _internal_rlp_txs().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
        _internal_rlp_txs().Get(i));
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void TransactionsReply::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TransactionsReply*>(&to_msg);
  auto& from = static_cast<const TransactionsReply&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:txpool.TransactionsReply)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_rlp_txs()->MergeFrom(from._internal_rlp_txs());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TransactionsReply::CopyFrom(const TransactionsReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:txpool.TransactionsReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TransactionsReply::InternalSwap(TransactionsReply* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.rlp_txs_.InternalSwap(&other->_impl_.rlp_txs_);
}

::google::protobuf::Metadata TransactionsReply::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class OnAddRequest::_Internal {
 public:
};

OnAddRequest::OnAddRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:txpool.OnAddRequest)
}
OnAddRequest::OnAddRequest(
    ::google::protobuf::Arena* arena,
    const OnAddRequest& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  OnAddRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:txpool.OnAddRequest)
}

const ::google::protobuf::MessageLite::ClassData*
OnAddRequest::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(OnAddRequest, _impl_._cached_size_),
              false,
          },
          &OnAddRequest::MergeImpl,
          &OnAddRequest::kDescriptorMethods,
          &descriptor_table_txpool_2ftxpool_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> OnAddRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_OnAddRequest_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::txpool::OnAddRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};









::google::protobuf::Metadata OnAddRequest::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class OnAddReply::_Internal {
 public:
};

OnAddReply::OnAddReply(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:txpool.OnAddReply)
}
inline PROTOBUF_NDEBUG_INLINE OnAddReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::txpool::OnAddReply& from_msg)
      : rpl_txs_{visibility, arena, from.rpl_txs_},
        _cached_size_{0} {}

OnAddReply::OnAddReply(
    ::google::protobuf::Arena* arena,
    const OnAddReply& from)
    : ::google::protobuf::Message(arena) {
  OnAddReply* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:txpool.OnAddReply)
}
inline PROTOBUF_NDEBUG_INLINE OnAddReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : rpl_txs_{visibility, arena},
        _cached_size_{0} {}

inline void OnAddReply::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
OnAddReply::~OnAddReply() {
  // @@protoc_insertion_point(destructor:txpool.OnAddReply)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void OnAddReply::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
OnAddReply::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(OnAddReply, _impl_._cached_size_),
              false,
          },
          &OnAddReply::MergeImpl,
          &OnAddReply::kDescriptorMethods,
          &descriptor_table_txpool_2ftxpool_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> OnAddReply::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_OnAddReply_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::txpool::OnAddReply>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated bytes rpl_txs = 1;
    {::_pbi::TcParser::FastBR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(OnAddReply, _impl_.rpl_txs_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated bytes rpl_txs = 1;
    {PROTOBUF_FIELD_OFFSET(OnAddReply, _impl_.rpl_txs_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kBytes | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void OnAddReply::Clear() {
// @@protoc_insertion_point(message_clear_start:txpool.OnAddReply)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.rpl_txs_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* OnAddReply::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:txpool.OnAddReply)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated bytes rpl_txs = 1;
  for (int i = 0, n = this->_internal_rpl_txs_size(); i < n; ++i) {
    const auto& s = this->_internal_rpl_txs().Get(i);
    target = stream->WriteBytes(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:txpool.OnAddReply)
  return target;
}

::size_t OnAddReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:txpool.OnAddReply)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated bytes rpl_txs = 1;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_rpl_txs().size());
  for (int i = 0, n = _internal_rpl_txs().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
        _internal_rpl_txs().Get(i));
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void OnAddReply::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<OnAddReply*>(&to_msg);
  auto& from = static_cast<const OnAddReply&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:txpool.OnAddReply)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_rpl_txs()->MergeFrom(from._internal_rpl_txs());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void OnAddReply::CopyFrom(const OnAddReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:txpool.OnAddReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void OnAddReply::InternalSwap(OnAddReply* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.rpl_txs_.InternalSwap(&other->_impl_.rpl_txs_);
}

::google::protobuf::Metadata OnAddReply::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class AllRequest::_Internal {
 public:
};

AllRequest::AllRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:txpool.AllRequest)
}
AllRequest::AllRequest(
    ::google::protobuf::Arena* arena,
    const AllRequest& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  AllRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:txpool.AllRequest)
}

const ::google::protobuf::MessageLite::ClassData*
AllRequest::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(AllRequest, _impl_._cached_size_),
              false,
          },
          &AllRequest::MergeImpl,
          &AllRequest::kDescriptorMethods,
          &descriptor_table_txpool_2ftxpool_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> AllRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_AllRequest_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::txpool::AllRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};









::google::protobuf::Metadata AllRequest::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class AllReply_Tx::_Internal {
 public:
  using HasBits =
      decltype(std::declval<AllReply_Tx>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(AllReply_Tx, _impl_._has_bits_);
};

void AllReply_Tx::clear_sender() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.sender_ != nullptr) _impl_.sender_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
AllReply_Tx::AllReply_Tx(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:txpool.AllReply.Tx)
}
inline PROTOBUF_NDEBUG_INLINE AllReply_Tx::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::txpool::AllReply_Tx& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        rlp_tx_(arena, from.rlp_tx_) {}

AllReply_Tx::AllReply_Tx(
    ::google::protobuf::Arena* arena,
    const AllReply_Tx& from)
    : ::google::protobuf::Message(arena) {
  AllReply_Tx* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.sender_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::types::H160>(
                              arena, *from._impl_.sender_)
                        : nullptr;
  _impl_.txn_type_ = from._impl_.txn_type_;

  // @@protoc_insertion_point(copy_constructor:txpool.AllReply.Tx)
}
inline PROTOBUF_NDEBUG_INLINE AllReply_Tx::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        rlp_tx_(arena) {}

inline void AllReply_Tx::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, sender_),
           0,
           offsetof(Impl_, txn_type_) -
               offsetof(Impl_, sender_) +
               sizeof(Impl_::txn_type_));
}
AllReply_Tx::~AllReply_Tx() {
  // @@protoc_insertion_point(destructor:txpool.AllReply.Tx)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AllReply_Tx::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.rlp_tx_.Destroy();
  delete _impl_.sender_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
AllReply_Tx::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(AllReply_Tx, _impl_._cached_size_),
              false,
          },
          &AllReply_Tx::MergeImpl,
          &AllReply_Tx::kDescriptorMethods,
          &descriptor_table_txpool_2ftxpool_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 0, 2> AllReply_Tx::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AllReply_Tx, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_AllReply_Tx_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::txpool::AllReply_Tx>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .txpool.AllReply.TxnType txn_type = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AllReply_Tx, _impl_.txn_type_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(AllReply_Tx, _impl_.txn_type_)}},
    // .types.H160 sender = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(AllReply_Tx, _impl_.sender_)}},
    // bytes rlp_tx = 3;
    {::_pbi::TcParser::FastBS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(AllReply_Tx, _impl_.rlp_tx_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .txpool.AllReply.TxnType txn_type = 1;
    {PROTOBUF_FIELD_OFFSET(AllReply_Tx, _impl_.txn_type_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .types.H160 sender = 2;
    {PROTOBUF_FIELD_OFFSET(AllReply_Tx, _impl_.sender_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // bytes rlp_tx = 3;
    {PROTOBUF_FIELD_OFFSET(AllReply_Tx, _impl_.rlp_tx_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::types::H160>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void AllReply_Tx::Clear() {
// @@protoc_insertion_point(message_clear_start:txpool.AllReply.Tx)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.rlp_tx_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.sender_ != nullptr);
    _impl_.sender_->Clear();
  }
  _impl_.txn_type_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* AllReply_Tx::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:txpool.AllReply.Tx)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .txpool.AllReply.TxnType txn_type = 1;
  if (this->_internal_txn_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_txn_type(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .types.H160 sender = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *_impl_.sender_, _impl_.sender_->GetCachedSize(), target, stream);
  }

  // bytes rlp_tx = 3;
  if (!this->_internal_rlp_tx().empty()) {
    const std::string& _s = this->_internal_rlp_tx();
    target = stream->WriteBytesMaybeAliased(3, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:txpool.AllReply.Tx)
  return target;
}

::size_t AllReply_Tx::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:txpool.AllReply.Tx)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // bytes rlp_tx = 3;
  if (!this->_internal_rlp_tx().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_rlp_tx());
  }

  // .types.H160 sender = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.sender_);
  }

  // .txpool.AllReply.TxnType txn_type = 1;
  if (this->_internal_txn_type() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_txn_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void AllReply_Tx::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AllReply_Tx*>(&to_msg);
  auto& from = static_cast<const AllReply_Tx&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:txpool.AllReply.Tx)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_rlp_tx().empty()) {
    _this->_internal_set_rlp_tx(from._internal_rlp_tx());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.sender_ != nullptr);
    if (_this->_impl_.sender_ == nullptr) {
      _this->_impl_.sender_ =
          ::google::protobuf::Message::CopyConstruct<::types::H160>(arena, *from._impl_.sender_);
    } else {
      _this->_impl_.sender_->MergeFrom(*from._impl_.sender_);
    }
  }
  if (from._internal_txn_type() != 0) {
    _this->_impl_.txn_type_ = from._impl_.txn_type_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AllReply_Tx::CopyFrom(const AllReply_Tx& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:txpool.AllReply.Tx)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AllReply_Tx::InternalSwap(AllReply_Tx* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.rlp_tx_, &other->_impl_.rlp_tx_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AllReply_Tx, _impl_.txn_type_)
      + sizeof(AllReply_Tx::_impl_.txn_type_)
      - PROTOBUF_FIELD_OFFSET(AllReply_Tx, _impl_.sender_)>(
          reinterpret_cast<char*>(&_impl_.sender_),
          reinterpret_cast<char*>(&other->_impl_.sender_));
}

::google::protobuf::Metadata AllReply_Tx::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class AllReply::_Internal {
 public:
};

AllReply::AllReply(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:txpool.AllReply)
}
inline PROTOBUF_NDEBUG_INLINE AllReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::txpool::AllReply& from_msg)
      : txs_{visibility, arena, from.txs_},
        _cached_size_{0} {}

AllReply::AllReply(
    ::google::protobuf::Arena* arena,
    const AllReply& from)
    : ::google::protobuf::Message(arena) {
  AllReply* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:txpool.AllReply)
}
inline PROTOBUF_NDEBUG_INLINE AllReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : txs_{visibility, arena},
        _cached_size_{0} {}

inline void AllReply::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
AllReply::~AllReply() {
  // @@protoc_insertion_point(destructor:txpool.AllReply)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AllReply::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
AllReply::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(AllReply, _impl_._cached_size_),
              false,
          },
          &AllReply::MergeImpl,
          &AllReply::kDescriptorMethods,
          &descriptor_table_txpool_2ftxpool_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> AllReply::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_AllReply_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::txpool::AllReply>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .txpool.AllReply.Tx txs = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(AllReply, _impl_.txs_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .txpool.AllReply.Tx txs = 1;
    {PROTOBUF_FIELD_OFFSET(AllReply, _impl_.txs_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::txpool::AllReply_Tx>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void AllReply::Clear() {
// @@protoc_insertion_point(message_clear_start:txpool.AllReply)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.txs_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* AllReply::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:txpool.AllReply)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .txpool.AllReply.Tx txs = 1;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_txs_size());
       i < n; i++) {
    const auto& repfield = this->_internal_txs().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:txpool.AllReply)
  return target;
}

::size_t AllReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:txpool.AllReply)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated .txpool.AllReply.Tx txs = 1;
  total_size += 1UL * this->_internal_txs_size();
  for (const auto& msg : this->_internal_txs()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void AllReply::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AllReply*>(&to_msg);
  auto& from = static_cast<const AllReply&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:txpool.AllReply)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_txs()->MergeFrom(
      from._internal_txs());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AllReply::CopyFrom(const AllReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:txpool.AllReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AllReply::InternalSwap(AllReply* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.txs_.InternalSwap(&other->_impl_.txs_);
}

::google::protobuf::Metadata AllReply::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PendingReply_Tx::_Internal {
 public:
  using HasBits =
      decltype(std::declval<PendingReply_Tx>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PendingReply_Tx, _impl_._has_bits_);
};

void PendingReply_Tx::clear_sender() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.sender_ != nullptr) _impl_.sender_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
PendingReply_Tx::PendingReply_Tx(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:txpool.PendingReply.Tx)
}
inline PROTOBUF_NDEBUG_INLINE PendingReply_Tx::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::txpool::PendingReply_Tx& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        rlp_tx_(arena, from.rlp_tx_) {}

PendingReply_Tx::PendingReply_Tx(
    ::google::protobuf::Arena* arena,
    const PendingReply_Tx& from)
    : ::google::protobuf::Message(arena) {
  PendingReply_Tx* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.sender_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::types::H160>(
                              arena, *from._impl_.sender_)
                        : nullptr;
  _impl_.is_local_ = from._impl_.is_local_;

  // @@protoc_insertion_point(copy_constructor:txpool.PendingReply.Tx)
}
inline PROTOBUF_NDEBUG_INLINE PendingReply_Tx::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        rlp_tx_(arena) {}

inline void PendingReply_Tx::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, sender_),
           0,
           offsetof(Impl_, is_local_) -
               offsetof(Impl_, sender_) +
               sizeof(Impl_::is_local_));
}
PendingReply_Tx::~PendingReply_Tx() {
  // @@protoc_insertion_point(destructor:txpool.PendingReply.Tx)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PendingReply_Tx::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.rlp_tx_.Destroy();
  delete _impl_.sender_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
PendingReply_Tx::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(PendingReply_Tx, _impl_._cached_size_),
              false,
          },
          &PendingReply_Tx::MergeImpl,
          &PendingReply_Tx::kDescriptorMethods,
          &descriptor_table_txpool_2ftxpool_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 0, 2> PendingReply_Tx::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PendingReply_Tx, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_PendingReply_Tx_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::txpool::PendingReply_Tx>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .types.H160 sender = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(PendingReply_Tx, _impl_.sender_)}},
    // bytes rlp_tx = 2;
    {::_pbi::TcParser::FastBS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(PendingReply_Tx, _impl_.rlp_tx_)}},
    // bool is_local = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(PendingReply_Tx, _impl_.is_local_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(PendingReply_Tx, _impl_.is_local_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .types.H160 sender = 1;
    {PROTOBUF_FIELD_OFFSET(PendingReply_Tx, _impl_.sender_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // bytes rlp_tx = 2;
    {PROTOBUF_FIELD_OFFSET(PendingReply_Tx, _impl_.rlp_tx_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // bool is_local = 3;
    {PROTOBUF_FIELD_OFFSET(PendingReply_Tx, _impl_.is_local_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }}, {{
    {::_pbi::TcParser::GetTable<::types::H160>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void PendingReply_Tx::Clear() {
// @@protoc_insertion_point(message_clear_start:txpool.PendingReply.Tx)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.rlp_tx_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.sender_ != nullptr);
    _impl_.sender_->Clear();
  }
  _impl_.is_local_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* PendingReply_Tx::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:txpool.PendingReply.Tx)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .types.H160 sender = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *_impl_.sender_, _impl_.sender_->GetCachedSize(), target, stream);
  }

  // bytes rlp_tx = 2;
  if (!this->_internal_rlp_tx().empty()) {
    const std::string& _s = this->_internal_rlp_tx();
    target = stream->WriteBytesMaybeAliased(2, _s, target);
  }

  // bool is_local = 3;
  if (this->_internal_is_local() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        3, this->_internal_is_local(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:txpool.PendingReply.Tx)
  return target;
}

::size_t PendingReply_Tx::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:txpool.PendingReply.Tx)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // bytes rlp_tx = 2;
  if (!this->_internal_rlp_tx().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_rlp_tx());
  }

  // .types.H160 sender = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.sender_);
  }

  // bool is_local = 3;
  if (this->_internal_is_local() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void PendingReply_Tx::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PendingReply_Tx*>(&to_msg);
  auto& from = static_cast<const PendingReply_Tx&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:txpool.PendingReply.Tx)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_rlp_tx().empty()) {
    _this->_internal_set_rlp_tx(from._internal_rlp_tx());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.sender_ != nullptr);
    if (_this->_impl_.sender_ == nullptr) {
      _this->_impl_.sender_ =
          ::google::protobuf::Message::CopyConstruct<::types::H160>(arena, *from._impl_.sender_);
    } else {
      _this->_impl_.sender_->MergeFrom(*from._impl_.sender_);
    }
  }
  if (from._internal_is_local() != 0) {
    _this->_impl_.is_local_ = from._impl_.is_local_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PendingReply_Tx::CopyFrom(const PendingReply_Tx& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:txpool.PendingReply.Tx)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PendingReply_Tx::InternalSwap(PendingReply_Tx* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.rlp_tx_, &other->_impl_.rlp_tx_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PendingReply_Tx, _impl_.is_local_)
      + sizeof(PendingReply_Tx::_impl_.is_local_)
      - PROTOBUF_FIELD_OFFSET(PendingReply_Tx, _impl_.sender_)>(
          reinterpret_cast<char*>(&_impl_.sender_),
          reinterpret_cast<char*>(&other->_impl_.sender_));
}

::google::protobuf::Metadata PendingReply_Tx::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PendingReply::_Internal {
 public:
};

PendingReply::PendingReply(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:txpool.PendingReply)
}
inline PROTOBUF_NDEBUG_INLINE PendingReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::txpool::PendingReply& from_msg)
      : txs_{visibility, arena, from.txs_},
        _cached_size_{0} {}

PendingReply::PendingReply(
    ::google::protobuf::Arena* arena,
    const PendingReply& from)
    : ::google::protobuf::Message(arena) {
  PendingReply* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:txpool.PendingReply)
}
inline PROTOBUF_NDEBUG_INLINE PendingReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : txs_{visibility, arena},
        _cached_size_{0} {}

inline void PendingReply::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
PendingReply::~PendingReply() {
  // @@protoc_insertion_point(destructor:txpool.PendingReply)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PendingReply::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
PendingReply::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(PendingReply, _impl_._cached_size_),
              false,
          },
          &PendingReply::MergeImpl,
          &PendingReply::kDescriptorMethods,
          &descriptor_table_txpool_2ftxpool_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> PendingReply::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_PendingReply_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::txpool::PendingReply>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .txpool.PendingReply.Tx txs = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PendingReply, _impl_.txs_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .txpool.PendingReply.Tx txs = 1;
    {PROTOBUF_FIELD_OFFSET(PendingReply, _impl_.txs_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::txpool::PendingReply_Tx>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void PendingReply::Clear() {
// @@protoc_insertion_point(message_clear_start:txpool.PendingReply)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.txs_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* PendingReply::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:txpool.PendingReply)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .txpool.PendingReply.Tx txs = 1;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_txs_size());
       i < n; i++) {
    const auto& repfield = this->_internal_txs().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:txpool.PendingReply)
  return target;
}

::size_t PendingReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:txpool.PendingReply)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated .txpool.PendingReply.Tx txs = 1;
  total_size += 1UL * this->_internal_txs_size();
  for (const auto& msg : this->_internal_txs()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void PendingReply::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PendingReply*>(&to_msg);
  auto& from = static_cast<const PendingReply&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:txpool.PendingReply)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_txs()->MergeFrom(
      from._internal_txs());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PendingReply::CopyFrom(const PendingReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:txpool.PendingReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PendingReply::InternalSwap(PendingReply* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.txs_.InternalSwap(&other->_impl_.txs_);
}

::google::protobuf::Metadata PendingReply::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class StatusRequest::_Internal {
 public:
};

StatusRequest::StatusRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:txpool.StatusRequest)
}
StatusRequest::StatusRequest(
    ::google::protobuf::Arena* arena,
    const StatusRequest& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  StatusRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:txpool.StatusRequest)
}

const ::google::protobuf::MessageLite::ClassData*
StatusRequest::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(StatusRequest, _impl_._cached_size_),
              false,
          },
          &StatusRequest::MergeImpl,
          &StatusRequest::kDescriptorMethods,
          &descriptor_table_txpool_2ftxpool_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> StatusRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_StatusRequest_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::txpool::StatusRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};









::google::protobuf::Metadata StatusRequest::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class StatusReply::_Internal {
 public:
};

StatusReply::StatusReply(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:txpool.StatusReply)
}
StatusReply::StatusReply(
    ::google::protobuf::Arena* arena, const StatusReply& from)
    : StatusReply(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE StatusReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void StatusReply::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, pending_count_),
           0,
           offsetof(Impl_, base_fee_count_) -
               offsetof(Impl_, pending_count_) +
               sizeof(Impl_::base_fee_count_));
}
StatusReply::~StatusReply() {
  // @@protoc_insertion_point(destructor:txpool.StatusReply)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void StatusReply::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
StatusReply::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(StatusReply, _impl_._cached_size_),
              false,
          },
          &StatusReply::MergeImpl,
          &StatusReply::kDescriptorMethods,
          &descriptor_table_txpool_2ftxpool_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> StatusReply::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_StatusReply_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::txpool::StatusReply>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 pending_count = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(StatusReply, _impl_.pending_count_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(StatusReply, _impl_.pending_count_)}},
    // uint32 queued_count = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(StatusReply, _impl_.queued_count_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(StatusReply, _impl_.queued_count_)}},
    // uint32 base_fee_count = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(StatusReply, _impl_.base_fee_count_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(StatusReply, _impl_.base_fee_count_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 pending_count = 1;
    {PROTOBUF_FIELD_OFFSET(StatusReply, _impl_.pending_count_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 queued_count = 2;
    {PROTOBUF_FIELD_OFFSET(StatusReply, _impl_.queued_count_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 base_fee_count = 3;
    {PROTOBUF_FIELD_OFFSET(StatusReply, _impl_.base_fee_count_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void StatusReply::Clear() {
// @@protoc_insertion_point(message_clear_start:txpool.StatusReply)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.pending_count_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.base_fee_count_) -
      reinterpret_cast<char*>(&_impl_.pending_count_)) + sizeof(_impl_.base_fee_count_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* StatusReply::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:txpool.StatusReply)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 pending_count = 1;
  if (this->_internal_pending_count() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_pending_count(), target);
  }

  // uint32 queued_count = 2;
  if (this->_internal_queued_count() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_queued_count(), target);
  }

  // uint32 base_fee_count = 3;
  if (this->_internal_base_fee_count() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this->_internal_base_fee_count(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:txpool.StatusReply)
  return target;
}

::size_t StatusReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:txpool.StatusReply)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // uint32 pending_count = 1;
  if (this->_internal_pending_count() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_pending_count());
  }

  // uint32 queued_count = 2;
  if (this->_internal_queued_count() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_queued_count());
  }

  // uint32 base_fee_count = 3;
  if (this->_internal_base_fee_count() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_base_fee_count());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void StatusReply::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<StatusReply*>(&to_msg);
  auto& from = static_cast<const StatusReply&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:txpool.StatusReply)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_pending_count() != 0) {
    _this->_impl_.pending_count_ = from._impl_.pending_count_;
  }
  if (from._internal_queued_count() != 0) {
    _this->_impl_.queued_count_ = from._impl_.queued_count_;
  }
  if (from._internal_base_fee_count() != 0) {
    _this->_impl_.base_fee_count_ = from._impl_.base_fee_count_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void StatusReply::CopyFrom(const StatusReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:txpool.StatusReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void StatusReply::InternalSwap(StatusReply* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(StatusReply, _impl_.base_fee_count_)
      + sizeof(StatusReply::_impl_.base_fee_count_)
      - PROTOBUF_FIELD_OFFSET(StatusReply, _impl_.pending_count_)>(
          reinterpret_cast<char*>(&_impl_.pending_count_),
          reinterpret_cast<char*>(&other->_impl_.pending_count_));
}

::google::protobuf::Metadata StatusReply::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class NonceRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<NonceRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(NonceRequest, _impl_._has_bits_);
};

void NonceRequest::clear_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.address_ != nullptr) _impl_.address_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
NonceRequest::NonceRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:txpool.NonceRequest)
}
inline PROTOBUF_NDEBUG_INLINE NonceRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::txpool::NonceRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

NonceRequest::NonceRequest(
    ::google::protobuf::Arena* arena,
    const NonceRequest& from)
    : ::google::protobuf::Message(arena) {
  NonceRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.address_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::types::H160>(
                              arena, *from._impl_.address_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:txpool.NonceRequest)
}
inline PROTOBUF_NDEBUG_INLINE NonceRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void NonceRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.address_ = {};
}
NonceRequest::~NonceRequest() {
  // @@protoc_insertion_point(destructor:txpool.NonceRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void NonceRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.address_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
NonceRequest::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(NonceRequest, _impl_._cached_size_),
              false,
          },
          &NonceRequest::MergeImpl,
          &NonceRequest::kDescriptorMethods,
          &descriptor_table_txpool_2ftxpool_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> NonceRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(NonceRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_NonceRequest_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::txpool::NonceRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .types.H160 address = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(NonceRequest, _impl_.address_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .types.H160 address = 1;
    {PROTOBUF_FIELD_OFFSET(NonceRequest, _impl_.address_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::types::H160>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void NonceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:txpool.NonceRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.address_ != nullptr);
    _impl_.address_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* NonceRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:txpool.NonceRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .types.H160 address = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *_impl_.address_, _impl_.address_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:txpool.NonceRequest)
  return target;
}

::size_t NonceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:txpool.NonceRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .types.H160 address = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.address_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void NonceRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<NonceRequest*>(&to_msg);
  auto& from = static_cast<const NonceRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:txpool.NonceRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.address_ != nullptr);
    if (_this->_impl_.address_ == nullptr) {
      _this->_impl_.address_ =
          ::google::protobuf::Message::CopyConstruct<::types::H160>(arena, *from._impl_.address_);
    } else {
      _this->_impl_.address_->MergeFrom(*from._impl_.address_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NonceRequest::CopyFrom(const NonceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:txpool.NonceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void NonceRequest::InternalSwap(NonceRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.address_, other->_impl_.address_);
}

::google::protobuf::Metadata NonceRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class NonceReply::_Internal {
 public:
};

NonceReply::NonceReply(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:txpool.NonceReply)
}
NonceReply::NonceReply(
    ::google::protobuf::Arena* arena, const NonceReply& from)
    : NonceReply(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE NonceReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void NonceReply::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, nonce_),
           0,
           offsetof(Impl_, found_) -
               offsetof(Impl_, nonce_) +
               sizeof(Impl_::found_));
}
NonceReply::~NonceReply() {
  // @@protoc_insertion_point(destructor:txpool.NonceReply)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void NonceReply::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
NonceReply::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(NonceReply, _impl_._cached_size_),
              false,
          },
          &NonceReply::MergeImpl,
          &NonceReply::kDescriptorMethods,
          &descriptor_table_txpool_2ftxpool_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> NonceReply::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_NonceReply_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::txpool::NonceReply>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint64 nonce = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(NonceReply, _impl_.nonce_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(NonceReply, _impl_.nonce_)}},
    // bool found = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(NonceReply, _impl_.found_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(NonceReply, _impl_.found_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool found = 1;
    {PROTOBUF_FIELD_OFFSET(NonceReply, _impl_.found_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // uint64 nonce = 2;
    {PROTOBUF_FIELD_OFFSET(NonceReply, _impl_.nonce_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void NonceReply::Clear() {
// @@protoc_insertion_point(message_clear_start:txpool.NonceReply)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.nonce_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.found_) -
      reinterpret_cast<char*>(&_impl_.nonce_)) + sizeof(_impl_.found_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* NonceReply::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:txpool.NonceReply)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bool found = 1;
  if (this->_internal_found() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1, this->_internal_found(), target);
  }

  // uint64 nonce = 2;
  if (this->_internal_nonce() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        2, this->_internal_nonce(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:txpool.NonceReply)
  return target;
}

::size_t NonceReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:txpool.NonceReply)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // uint64 nonce = 2;
  if (this->_internal_nonce() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_nonce());
  }

  // bool found = 1;
  if (this->_internal_found() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void NonceReply::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<NonceReply*>(&to_msg);
  auto& from = static_cast<const NonceReply&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:txpool.NonceReply)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_nonce() != 0) {
    _this->_impl_.nonce_ = from._impl_.nonce_;
  }
  if (from._internal_found() != 0) {
    _this->_impl_.found_ = from._impl_.found_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NonceReply::CopyFrom(const NonceReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:txpool.NonceReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void NonceReply::InternalSwap(NonceReply* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(NonceReply, _impl_.found_)
      + sizeof(NonceReply::_impl_.found_)
      - PROTOBUF_FIELD_OFFSET(NonceReply, _impl_.nonce_)>(
          reinterpret_cast<char*>(&_impl_.nonce_),
          reinterpret_cast<char*>(&other->_impl_.nonce_));
}

::google::protobuf::Metadata NonceReply::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace txpool
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_txpool_2ftxpool_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
