// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: p2psentry/sentry.proto
// Protobuf C++ Version: 5.27.0

#ifndef GOOGLE_PROTOBUF_INCLUDED_p2psentry_2fsentry_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_p2psentry_2fsentry_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5027000
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "google/protobuf/empty.pb.h"
#include "types/types.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_p2psentry_2fsentry_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_p2psentry_2fsentry_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_p2psentry_2fsentry_2eproto;
namespace sentry {
class AddPeerReply;
struct AddPeerReplyDefaultTypeInternal;
extern AddPeerReplyDefaultTypeInternal _AddPeerReply_default_instance_;
class AddPeerRequest;
struct AddPeerRequestDefaultTypeInternal;
extern AddPeerRequestDefaultTypeInternal _AddPeerRequest_default_instance_;
class Forks;
struct ForksDefaultTypeInternal;
extern ForksDefaultTypeInternal _Forks_default_instance_;
class HandShakeReply;
struct HandShakeReplyDefaultTypeInternal;
extern HandShakeReplyDefaultTypeInternal _HandShakeReply_default_instance_;
class InboundMessage;
struct InboundMessageDefaultTypeInternal;
extern InboundMessageDefaultTypeInternal _InboundMessage_default_instance_;
class MessagesRequest;
struct MessagesRequestDefaultTypeInternal;
extern MessagesRequestDefaultTypeInternal _MessagesRequest_default_instance_;
class OutboundMessageData;
struct OutboundMessageDataDefaultTypeInternal;
extern OutboundMessageDataDefaultTypeInternal _OutboundMessageData_default_instance_;
class PeerByIdReply;
struct PeerByIdReplyDefaultTypeInternal;
extern PeerByIdReplyDefaultTypeInternal _PeerByIdReply_default_instance_;
class PeerByIdRequest;
struct PeerByIdRequestDefaultTypeInternal;
extern PeerByIdRequestDefaultTypeInternal _PeerByIdRequest_default_instance_;
class PeerCountPerProtocol;
struct PeerCountPerProtocolDefaultTypeInternal;
extern PeerCountPerProtocolDefaultTypeInternal _PeerCountPerProtocol_default_instance_;
class PeerCountReply;
struct PeerCountReplyDefaultTypeInternal;
extern PeerCountReplyDefaultTypeInternal _PeerCountReply_default_instance_;
class PeerCountRequest;
struct PeerCountRequestDefaultTypeInternal;
extern PeerCountRequestDefaultTypeInternal _PeerCountRequest_default_instance_;
class PeerEvent;
struct PeerEventDefaultTypeInternal;
extern PeerEventDefaultTypeInternal _PeerEvent_default_instance_;
class PeerEventsRequest;
struct PeerEventsRequestDefaultTypeInternal;
extern PeerEventsRequestDefaultTypeInternal _PeerEventsRequest_default_instance_;
class PeerMinBlockRequest;
struct PeerMinBlockRequestDefaultTypeInternal;
extern PeerMinBlockRequestDefaultTypeInternal _PeerMinBlockRequest_default_instance_;
class PeersReply;
struct PeersReplyDefaultTypeInternal;
extern PeersReplyDefaultTypeInternal _PeersReply_default_instance_;
class PenalizePeerRequest;
struct PenalizePeerRequestDefaultTypeInternal;
extern PenalizePeerRequestDefaultTypeInternal _PenalizePeerRequest_default_instance_;
class SendMessageByIdRequest;
struct SendMessageByIdRequestDefaultTypeInternal;
extern SendMessageByIdRequestDefaultTypeInternal _SendMessageByIdRequest_default_instance_;
class SendMessageByMinBlockRequest;
struct SendMessageByMinBlockRequestDefaultTypeInternal;
extern SendMessageByMinBlockRequestDefaultTypeInternal _SendMessageByMinBlockRequest_default_instance_;
class SendMessageToRandomPeersRequest;
struct SendMessageToRandomPeersRequestDefaultTypeInternal;
extern SendMessageToRandomPeersRequestDefaultTypeInternal _SendMessageToRandomPeersRequest_default_instance_;
class SentPeers;
struct SentPeersDefaultTypeInternal;
extern SentPeersDefaultTypeInternal _SentPeers_default_instance_;
class SetStatusReply;
struct SetStatusReplyDefaultTypeInternal;
extern SetStatusReplyDefaultTypeInternal _SetStatusReply_default_instance_;
class StatusData;
struct StatusDataDefaultTypeInternal;
extern StatusDataDefaultTypeInternal _StatusData_default_instance_;
}  // namespace sentry
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace sentry {
enum PeerEvent_PeerEventId : int {
  PeerEvent_PeerEventId_Connect = 0,
  PeerEvent_PeerEventId_Disconnect = 1,
  PeerEvent_PeerEventId_PeerEvent_PeerEventId_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  PeerEvent_PeerEventId_PeerEvent_PeerEventId_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool PeerEvent_PeerEventId_IsValid(int value);
extern const uint32_t PeerEvent_PeerEventId_internal_data_[];
constexpr PeerEvent_PeerEventId PeerEvent_PeerEventId_PeerEventId_MIN = static_cast<PeerEvent_PeerEventId>(0);
constexpr PeerEvent_PeerEventId PeerEvent_PeerEventId_PeerEventId_MAX = static_cast<PeerEvent_PeerEventId>(1);
constexpr int PeerEvent_PeerEventId_PeerEventId_ARRAYSIZE = 1 + 1;
const ::google::protobuf::EnumDescriptor*
PeerEvent_PeerEventId_descriptor();
template <typename T>
const std::string& PeerEvent_PeerEventId_Name(T value) {
  static_assert(std::is_same<T, PeerEvent_PeerEventId>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to PeerEventId_Name().");
  return PeerEvent_PeerEventId_Name(static_cast<PeerEvent_PeerEventId>(value));
}
template <>
inline const std::string& PeerEvent_PeerEventId_Name(PeerEvent_PeerEventId value) {
  return ::google::protobuf::internal::NameOfDenseEnum<PeerEvent_PeerEventId_descriptor,
                                                 0, 1>(
      static_cast<int>(value));
}
inline bool PeerEvent_PeerEventId_Parse(absl::string_view name, PeerEvent_PeerEventId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PeerEvent_PeerEventId>(
      PeerEvent_PeerEventId_descriptor(), name, value);
}
enum MessageId : int {
  STATUS_65 = 0,
  GET_BLOCK_HEADERS_65 = 1,
  BLOCK_HEADERS_65 = 2,
  BLOCK_HASHES_65 = 3,
  GET_BLOCK_BODIES_65 = 4,
  BLOCK_BODIES_65 = 5,
  GET_NODE_DATA_65 = 6,
  NODE_DATA_65 = 7,
  GET_RECEIPTS_65 = 8,
  RECEIPTS_65 = 9,
  NEW_BLOCK_HASHES_65 = 10,
  NEW_BLOCK_65 = 11,
  TRANSACTIONS_65 = 12,
  NEW_POOLED_TRANSACTION_HASHES_65 = 13,
  GET_POOLED_TRANSACTIONS_65 = 14,
  POOLED_TRANSACTIONS_65 = 15,
  STATUS_66 = 17,
  NEW_BLOCK_HASHES_66 = 18,
  NEW_BLOCK_66 = 19,
  TRANSACTIONS_66 = 20,
  NEW_POOLED_TRANSACTION_HASHES_66 = 21,
  GET_BLOCK_HEADERS_66 = 22,
  GET_BLOCK_BODIES_66 = 23,
  GET_NODE_DATA_66 = 24,
  GET_RECEIPTS_66 = 25,
  GET_POOLED_TRANSACTIONS_66 = 26,
  BLOCK_HEADERS_66 = 27,
  BLOCK_BODIES_66 = 28,
  NODE_DATA_66 = 29,
  RECEIPTS_66 = 30,
  POOLED_TRANSACTIONS_66 = 31,
  NEW_POOLED_TRANSACTION_HASHES_68 = 32,
  MessageId_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  MessageId_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool MessageId_IsValid(int value);
extern const uint32_t MessageId_internal_data_[];
constexpr MessageId MessageId_MIN = static_cast<MessageId>(0);
constexpr MessageId MessageId_MAX = static_cast<MessageId>(32);
constexpr int MessageId_ARRAYSIZE = 32 + 1;
const ::google::protobuf::EnumDescriptor*
MessageId_descriptor();
template <typename T>
const std::string& MessageId_Name(T value) {
  static_assert(std::is_same<T, MessageId>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to MessageId_Name().");
  return MessageId_Name(static_cast<MessageId>(value));
}
template <>
inline const std::string& MessageId_Name(MessageId value) {
  return ::google::protobuf::internal::NameOfDenseEnum<MessageId_descriptor,
                                                 0, 32>(
      static_cast<int>(value));
}
inline bool MessageId_Parse(absl::string_view name, MessageId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MessageId>(
      MessageId_descriptor(), name, value);
}
enum PenaltyKind : int {
  Kick = 0,
  PenaltyKind_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  PenaltyKind_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool PenaltyKind_IsValid(int value);
extern const uint32_t PenaltyKind_internal_data_[];
constexpr PenaltyKind PenaltyKind_MIN = static_cast<PenaltyKind>(0);
constexpr PenaltyKind PenaltyKind_MAX = static_cast<PenaltyKind>(0);
constexpr int PenaltyKind_ARRAYSIZE = 0 + 1;
const ::google::protobuf::EnumDescriptor*
PenaltyKind_descriptor();
template <typename T>
const std::string& PenaltyKind_Name(T value) {
  static_assert(std::is_same<T, PenaltyKind>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to PenaltyKind_Name().");
  return PenaltyKind_Name(static_cast<PenaltyKind>(value));
}
template <>
inline const std::string& PenaltyKind_Name(PenaltyKind value) {
  return ::google::protobuf::internal::NameOfDenseEnum<PenaltyKind_descriptor,
                                                 0, 0>(
      static_cast<int>(value));
}
inline bool PenaltyKind_Parse(absl::string_view name, PenaltyKind* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PenaltyKind>(
      PenaltyKind_descriptor(), name, value);
}
enum Protocol : int {
  ETH65 = 0,
  ETH66 = 1,
  ETH67 = 2,
  ETH68 = 3,
  Protocol_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  Protocol_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool Protocol_IsValid(int value);
extern const uint32_t Protocol_internal_data_[];
constexpr Protocol Protocol_MIN = static_cast<Protocol>(0);
constexpr Protocol Protocol_MAX = static_cast<Protocol>(3);
constexpr int Protocol_ARRAYSIZE = 3 + 1;
const ::google::protobuf::EnumDescriptor*
Protocol_descriptor();
template <typename T>
const std::string& Protocol_Name(T value) {
  static_assert(std::is_same<T, Protocol>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to Protocol_Name().");
  return Protocol_Name(static_cast<Protocol>(value));
}
template <>
inline const std::string& Protocol_Name(Protocol value) {
  return ::google::protobuf::internal::NameOfDenseEnum<Protocol_descriptor,
                                                 0, 3>(
      static_cast<int>(value));
}
inline bool Protocol_Parse(absl::string_view name, Protocol* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Protocol>(
      Protocol_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class SetStatusReply final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:sentry.SetStatusReply) */ {
 public:
  inline SetStatusReply() : SetStatusReply(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SetStatusReply(
      ::google::protobuf::internal::ConstantInitialized);

  inline SetStatusReply(const SetStatusReply& from) : SetStatusReply(nullptr, from) {}
  inline SetStatusReply(SetStatusReply&& from) noexcept
      : SetStatusReply(nullptr, std::move(from)) {}
  inline SetStatusReply& operator=(const SetStatusReply& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetStatusReply& operator=(SetStatusReply&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetStatusReply& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetStatusReply* internal_default_instance() {
    return reinterpret_cast<const SetStatusReply*>(
        &_SetStatusReply_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 11;
  friend void swap(SetStatusReply& a, SetStatusReply& b) { a.Swap(&b); }
  inline void Swap(SetStatusReply* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetStatusReply* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetStatusReply* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<SetStatusReply>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const SetStatusReply& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const SetStatusReply& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "sentry.SetStatusReply"; }

 protected:
  explicit SetStatusReply(::google::protobuf::Arena* arena);
  SetStatusReply(::google::protobuf::Arena* arena, const SetStatusReply& from);
  SetStatusReply(::google::protobuf::Arena* arena, SetStatusReply&& from) noexcept
      : SetStatusReply(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ZeroFieldsBase::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:sentry.SetStatusReply)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SetStatusReply_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SetStatusReply& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_p2psentry_2fsentry_2eproto;
};
// -------------------------------------------------------------------

class PeerEventsRequest final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:sentry.PeerEventsRequest) */ {
 public:
  inline PeerEventsRequest() : PeerEventsRequest(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PeerEventsRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline PeerEventsRequest(const PeerEventsRequest& from) : PeerEventsRequest(nullptr, from) {}
  inline PeerEventsRequest(PeerEventsRequest&& from) noexcept
      : PeerEventsRequest(nullptr, std::move(from)) {}
  inline PeerEventsRequest& operator=(const PeerEventsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline PeerEventsRequest& operator=(PeerEventsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PeerEventsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const PeerEventsRequest* internal_default_instance() {
    return reinterpret_cast<const PeerEventsRequest*>(
        &_PeerEventsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 20;
  friend void swap(PeerEventsRequest& a, PeerEventsRequest& b) { a.Swap(&b); }
  inline void Swap(PeerEventsRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PeerEventsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PeerEventsRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<PeerEventsRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const PeerEventsRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const PeerEventsRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "sentry.PeerEventsRequest"; }

 protected:
  explicit PeerEventsRequest(::google::protobuf::Arena* arena);
  PeerEventsRequest(::google::protobuf::Arena* arena, const PeerEventsRequest& from);
  PeerEventsRequest(::google::protobuf::Arena* arena, PeerEventsRequest&& from) noexcept
      : PeerEventsRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ZeroFieldsBase::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:sentry.PeerEventsRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_PeerEventsRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PeerEventsRequest& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_p2psentry_2fsentry_2eproto;
};
// -------------------------------------------------------------------

class PeerCountRequest final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:sentry.PeerCountRequest) */ {
 public:
  inline PeerCountRequest() : PeerCountRequest(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PeerCountRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline PeerCountRequest(const PeerCountRequest& from) : PeerCountRequest(nullptr, from) {}
  inline PeerCountRequest(PeerCountRequest&& from) noexcept
      : PeerCountRequest(nullptr, std::move(from)) {}
  inline PeerCountRequest& operator=(const PeerCountRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline PeerCountRequest& operator=(PeerCountRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PeerCountRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const PeerCountRequest* internal_default_instance() {
    return reinterpret_cast<const PeerCountRequest*>(
        &_PeerCountRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 15;
  friend void swap(PeerCountRequest& a, PeerCountRequest& b) { a.Swap(&b); }
  inline void Swap(PeerCountRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PeerCountRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PeerCountRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<PeerCountRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const PeerCountRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const PeerCountRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "sentry.PeerCountRequest"; }

 protected:
  explicit PeerCountRequest(::google::protobuf::Arena* arena);
  PeerCountRequest(::google::protobuf::Arena* arena, const PeerCountRequest& from);
  PeerCountRequest(::google::protobuf::Arena* arena, PeerCountRequest&& from) noexcept
      : PeerCountRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ZeroFieldsBase::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:sentry.PeerCountRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_PeerCountRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PeerCountRequest& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_p2psentry_2fsentry_2eproto;
};
// -------------------------------------------------------------------

class PeerCountPerProtocol final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:sentry.PeerCountPerProtocol) */ {
 public:
  inline PeerCountPerProtocol() : PeerCountPerProtocol(nullptr) {}
  ~PeerCountPerProtocol() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PeerCountPerProtocol(
      ::google::protobuf::internal::ConstantInitialized);

  inline PeerCountPerProtocol(const PeerCountPerProtocol& from) : PeerCountPerProtocol(nullptr, from) {}
  inline PeerCountPerProtocol(PeerCountPerProtocol&& from) noexcept
      : PeerCountPerProtocol(nullptr, std::move(from)) {}
  inline PeerCountPerProtocol& operator=(const PeerCountPerProtocol& from) {
    CopyFrom(from);
    return *this;
  }
  inline PeerCountPerProtocol& operator=(PeerCountPerProtocol&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PeerCountPerProtocol& default_instance() {
    return *internal_default_instance();
  }
  static inline const PeerCountPerProtocol* internal_default_instance() {
    return reinterpret_cast<const PeerCountPerProtocol*>(
        &_PeerCountPerProtocol_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 16;
  friend void swap(PeerCountPerProtocol& a, PeerCountPerProtocol& b) { a.Swap(&b); }
  inline void Swap(PeerCountPerProtocol* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PeerCountPerProtocol* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PeerCountPerProtocol* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<PeerCountPerProtocol>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PeerCountPerProtocol& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PeerCountPerProtocol& from) { PeerCountPerProtocol::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(PeerCountPerProtocol* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "sentry.PeerCountPerProtocol"; }

 protected:
  explicit PeerCountPerProtocol(::google::protobuf::Arena* arena);
  PeerCountPerProtocol(::google::protobuf::Arena* arena, const PeerCountPerProtocol& from);
  PeerCountPerProtocol(::google::protobuf::Arena* arena, PeerCountPerProtocol&& from) noexcept
      : PeerCountPerProtocol(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCountFieldNumber = 2,
    kProtocolFieldNumber = 1,
  };
  // uint64 count = 2;
  void clear_count() ;
  ::uint64_t count() const;
  void set_count(::uint64_t value);

  private:
  ::uint64_t _internal_count() const;
  void _internal_set_count(::uint64_t value);

  public:
  // .sentry.Protocol protocol = 1;
  void clear_protocol() ;
  ::sentry::Protocol protocol() const;
  void set_protocol(::sentry::Protocol value);

  private:
  ::sentry::Protocol _internal_protocol() const;
  void _internal_set_protocol(::sentry::Protocol value);

  public:
  // @@protoc_insertion_point(class_scope:sentry.PeerCountPerProtocol)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_PeerCountPerProtocol_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PeerCountPerProtocol& from_msg);
    ::uint64_t count_;
    int protocol_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_p2psentry_2fsentry_2eproto;
};
// -------------------------------------------------------------------

class OutboundMessageData final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:sentry.OutboundMessageData) */ {
 public:
  inline OutboundMessageData() : OutboundMessageData(nullptr) {}
  ~OutboundMessageData() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR OutboundMessageData(
      ::google::protobuf::internal::ConstantInitialized);

  inline OutboundMessageData(const OutboundMessageData& from) : OutboundMessageData(nullptr, from) {}
  inline OutboundMessageData(OutboundMessageData&& from) noexcept
      : OutboundMessageData(nullptr, std::move(from)) {}
  inline OutboundMessageData& operator=(const OutboundMessageData& from) {
    CopyFrom(from);
    return *this;
  }
  inline OutboundMessageData& operator=(OutboundMessageData&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const OutboundMessageData& default_instance() {
    return *internal_default_instance();
  }
  static inline const OutboundMessageData* internal_default_instance() {
    return reinterpret_cast<const OutboundMessageData*>(
        &_OutboundMessageData_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(OutboundMessageData& a, OutboundMessageData& b) { a.Swap(&b); }
  inline void Swap(OutboundMessageData* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(OutboundMessageData* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  OutboundMessageData* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<OutboundMessageData>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const OutboundMessageData& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const OutboundMessageData& from) { OutboundMessageData::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(OutboundMessageData* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "sentry.OutboundMessageData"; }

 protected:
  explicit OutboundMessageData(::google::protobuf::Arena* arena);
  OutboundMessageData(::google::protobuf::Arena* arena, const OutboundMessageData& from);
  OutboundMessageData(::google::protobuf::Arena* arena, OutboundMessageData&& from) noexcept
      : OutboundMessageData(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDataFieldNumber = 2,
    kIdFieldNumber = 1,
  };
  // bytes data = 2;
  void clear_data() ;
  const std::string& data() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_data(Arg_&& arg, Args_... args);
  std::string* mutable_data();
  PROTOBUF_NODISCARD std::string* release_data();
  void set_allocated_data(std::string* value);

  private:
  const std::string& _internal_data() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_data(
      const std::string& value);
  std::string* _internal_mutable_data();

  public:
  // .sentry.MessageId id = 1;
  void clear_id() ;
  ::sentry::MessageId id() const;
  void set_id(::sentry::MessageId value);

  private:
  ::sentry::MessageId _internal_id() const;
  void _internal_set_id(::sentry::MessageId value);

  public:
  // @@protoc_insertion_point(class_scope:sentry.OutboundMessageData)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_OutboundMessageData_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const OutboundMessageData& from_msg);
    ::google::protobuf::internal::ArenaStringPtr data_;
    int id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_p2psentry_2fsentry_2eproto;
};
// -------------------------------------------------------------------

class MessagesRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:sentry.MessagesRequest) */ {
 public:
  inline MessagesRequest() : MessagesRequest(nullptr) {}
  ~MessagesRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MessagesRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline MessagesRequest(const MessagesRequest& from) : MessagesRequest(nullptr, from) {}
  inline MessagesRequest(MessagesRequest&& from) noexcept
      : MessagesRequest(nullptr, std::move(from)) {}
  inline MessagesRequest& operator=(const MessagesRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline MessagesRequest& operator=(MessagesRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MessagesRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const MessagesRequest* internal_default_instance() {
    return reinterpret_cast<const MessagesRequest*>(
        &_MessagesRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 13;
  friend void swap(MessagesRequest& a, MessagesRequest& b) { a.Swap(&b); }
  inline void Swap(MessagesRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MessagesRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MessagesRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<MessagesRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MessagesRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MessagesRequest& from) { MessagesRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(MessagesRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "sentry.MessagesRequest"; }

 protected:
  explicit MessagesRequest(::google::protobuf::Arena* arena);
  MessagesRequest(::google::protobuf::Arena* arena, const MessagesRequest& from);
  MessagesRequest(::google::protobuf::Arena* arena, MessagesRequest&& from) noexcept
      : MessagesRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIdsFieldNumber = 1,
  };
  // repeated .sentry.MessageId ids = 1;
  int ids_size() const;
  private:
  int _internal_ids_size() const;

  public:
  void clear_ids() ;
  public:
  ::sentry::MessageId ids(int index) const;
  void set_ids(int index, ::sentry::MessageId value);
  void add_ids(::sentry::MessageId value);
  const ::google::protobuf::RepeatedField<int>& ids() const;
  ::google::protobuf::RepeatedField<int>* mutable_ids();

  private:
  const ::google::protobuf::RepeatedField<int>& _internal_ids() const;
  ::google::protobuf::RepeatedField<int>* _internal_mutable_ids();

  public:
  // @@protoc_insertion_point(class_scope:sentry.MessagesRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_MessagesRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MessagesRequest& from_msg);
    ::google::protobuf::RepeatedField<int> ids_;
    mutable ::google::protobuf::internal::CachedSize _ids_cached_byte_size_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_p2psentry_2fsentry_2eproto;
};
// -------------------------------------------------------------------

class HandShakeReply final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:sentry.HandShakeReply) */ {
 public:
  inline HandShakeReply() : HandShakeReply(nullptr) {}
  ~HandShakeReply() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR HandShakeReply(
      ::google::protobuf::internal::ConstantInitialized);

  inline HandShakeReply(const HandShakeReply& from) : HandShakeReply(nullptr, from) {}
  inline HandShakeReply(HandShakeReply&& from) noexcept
      : HandShakeReply(nullptr, std::move(from)) {}
  inline HandShakeReply& operator=(const HandShakeReply& from) {
    CopyFrom(from);
    return *this;
  }
  inline HandShakeReply& operator=(HandShakeReply&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const HandShakeReply& default_instance() {
    return *internal_default_instance();
  }
  static inline const HandShakeReply* internal_default_instance() {
    return reinterpret_cast<const HandShakeReply*>(
        &_HandShakeReply_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 12;
  friend void swap(HandShakeReply& a, HandShakeReply& b) { a.Swap(&b); }
  inline void Swap(HandShakeReply* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(HandShakeReply* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  HandShakeReply* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<HandShakeReply>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const HandShakeReply& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const HandShakeReply& from) { HandShakeReply::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(HandShakeReply* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "sentry.HandShakeReply"; }

 protected:
  explicit HandShakeReply(::google::protobuf::Arena* arena);
  HandShakeReply(::google::protobuf::Arena* arena, const HandShakeReply& from);
  HandShakeReply(::google::protobuf::Arena* arena, HandShakeReply&& from) noexcept
      : HandShakeReply(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kProtocolFieldNumber = 1,
  };
  // .sentry.Protocol protocol = 1;
  void clear_protocol() ;
  ::sentry::Protocol protocol() const;
  void set_protocol(::sentry::Protocol value);

  private:
  ::sentry::Protocol _internal_protocol() const;
  void _internal_set_protocol(::sentry::Protocol value);

  public:
  // @@protoc_insertion_point(class_scope:sentry.HandShakeReply)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_HandShakeReply_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const HandShakeReply& from_msg);
    int protocol_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_p2psentry_2fsentry_2eproto;
};
// -------------------------------------------------------------------

class AddPeerRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:sentry.AddPeerRequest) */ {
 public:
  inline AddPeerRequest() : AddPeerRequest(nullptr) {}
  ~AddPeerRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AddPeerRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline AddPeerRequest(const AddPeerRequest& from) : AddPeerRequest(nullptr, from) {}
  inline AddPeerRequest(AddPeerRequest&& from) noexcept
      : AddPeerRequest(nullptr, std::move(from)) {}
  inline AddPeerRequest& operator=(const AddPeerRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline AddPeerRequest& operator=(AddPeerRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AddPeerRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const AddPeerRequest* internal_default_instance() {
    return reinterpret_cast<const AddPeerRequest*>(
        &_AddPeerRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(AddPeerRequest& a, AddPeerRequest& b) { a.Swap(&b); }
  inline void Swap(AddPeerRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AddPeerRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AddPeerRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<AddPeerRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AddPeerRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AddPeerRequest& from) { AddPeerRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(AddPeerRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "sentry.AddPeerRequest"; }

 protected:
  explicit AddPeerRequest(::google::protobuf::Arena* arena);
  AddPeerRequest(::google::protobuf::Arena* arena, const AddPeerRequest& from);
  AddPeerRequest(::google::protobuf::Arena* arena, AddPeerRequest&& from) noexcept
      : AddPeerRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kUrlFieldNumber = 1,
  };
  // string url = 1;
  void clear_url() ;
  const std::string& url() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_url(Arg_&& arg, Args_... args);
  std::string* mutable_url();
  PROTOBUF_NODISCARD std::string* release_url();
  void set_allocated_url(std::string* value);

  private:
  const std::string& _internal_url() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_url(
      const std::string& value);
  std::string* _internal_mutable_url();

  public:
  // @@protoc_insertion_point(class_scope:sentry.AddPeerRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      33, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_AddPeerRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const AddPeerRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr url_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_p2psentry_2fsentry_2eproto;
};
// -------------------------------------------------------------------

class AddPeerReply final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:sentry.AddPeerReply) */ {
 public:
  inline AddPeerReply() : AddPeerReply(nullptr) {}
  ~AddPeerReply() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AddPeerReply(
      ::google::protobuf::internal::ConstantInitialized);

  inline AddPeerReply(const AddPeerReply& from) : AddPeerReply(nullptr, from) {}
  inline AddPeerReply(AddPeerReply&& from) noexcept
      : AddPeerReply(nullptr, std::move(from)) {}
  inline AddPeerReply& operator=(const AddPeerReply& from) {
    CopyFrom(from);
    return *this;
  }
  inline AddPeerReply& operator=(AddPeerReply&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AddPeerReply& default_instance() {
    return *internal_default_instance();
  }
  static inline const AddPeerReply* internal_default_instance() {
    return reinterpret_cast<const AddPeerReply*>(
        &_AddPeerReply_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 22;
  friend void swap(AddPeerReply& a, AddPeerReply& b) { a.Swap(&b); }
  inline void Swap(AddPeerReply* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AddPeerReply* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AddPeerReply* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<AddPeerReply>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AddPeerReply& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AddPeerReply& from) { AddPeerReply::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(AddPeerReply* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "sentry.AddPeerReply"; }

 protected:
  explicit AddPeerReply(::google::protobuf::Arena* arena);
  AddPeerReply(::google::protobuf::Arena* arena, const AddPeerReply& from);
  AddPeerReply(::google::protobuf::Arena* arena, AddPeerReply&& from) noexcept
      : AddPeerReply(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSuccessFieldNumber = 1,
  };
  // bool success = 1;
  void clear_success() ;
  bool success() const;
  void set_success(bool value);

  private:
  bool _internal_success() const;
  void _internal_set_success(bool value);

  public:
  // @@protoc_insertion_point(class_scope:sentry.AddPeerReply)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_AddPeerReply_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const AddPeerReply& from_msg);
    bool success_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_p2psentry_2fsentry_2eproto;
};
// -------------------------------------------------------------------

class SendMessageToRandomPeersRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:sentry.SendMessageToRandomPeersRequest) */ {
 public:
  inline SendMessageToRandomPeersRequest() : SendMessageToRandomPeersRequest(nullptr) {}
  ~SendMessageToRandomPeersRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SendMessageToRandomPeersRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline SendMessageToRandomPeersRequest(const SendMessageToRandomPeersRequest& from) : SendMessageToRandomPeersRequest(nullptr, from) {}
  inline SendMessageToRandomPeersRequest(SendMessageToRandomPeersRequest&& from) noexcept
      : SendMessageToRandomPeersRequest(nullptr, std::move(from)) {}
  inline SendMessageToRandomPeersRequest& operator=(const SendMessageToRandomPeersRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SendMessageToRandomPeersRequest& operator=(SendMessageToRandomPeersRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SendMessageToRandomPeersRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SendMessageToRandomPeersRequest* internal_default_instance() {
    return reinterpret_cast<const SendMessageToRandomPeersRequest*>(
        &_SendMessageToRandomPeersRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(SendMessageToRandomPeersRequest& a, SendMessageToRandomPeersRequest& b) { a.Swap(&b); }
  inline void Swap(SendMessageToRandomPeersRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SendMessageToRandomPeersRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SendMessageToRandomPeersRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<SendMessageToRandomPeersRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SendMessageToRandomPeersRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SendMessageToRandomPeersRequest& from) { SendMessageToRandomPeersRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SendMessageToRandomPeersRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "sentry.SendMessageToRandomPeersRequest"; }

 protected:
  explicit SendMessageToRandomPeersRequest(::google::protobuf::Arena* arena);
  SendMessageToRandomPeersRequest(::google::protobuf::Arena* arena, const SendMessageToRandomPeersRequest& from);
  SendMessageToRandomPeersRequest(::google::protobuf::Arena* arena, SendMessageToRandomPeersRequest&& from) noexcept
      : SendMessageToRandomPeersRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDataFieldNumber = 1,
    kMaxPeersFieldNumber = 2,
  };
  // .sentry.OutboundMessageData data = 1;
  bool has_data() const;
  void clear_data() ;
  const ::sentry::OutboundMessageData& data() const;
  PROTOBUF_NODISCARD ::sentry::OutboundMessageData* release_data();
  ::sentry::OutboundMessageData* mutable_data();
  void set_allocated_data(::sentry::OutboundMessageData* value);
  void unsafe_arena_set_allocated_data(::sentry::OutboundMessageData* value);
  ::sentry::OutboundMessageData* unsafe_arena_release_data();

  private:
  const ::sentry::OutboundMessageData& _internal_data() const;
  ::sentry::OutboundMessageData* _internal_mutable_data();

  public:
  // uint64 max_peers = 2;
  void clear_max_peers() ;
  ::uint64_t max_peers() const;
  void set_max_peers(::uint64_t value);

  private:
  ::uint64_t _internal_max_peers() const;
  void _internal_set_max_peers(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:sentry.SendMessageToRandomPeersRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SendMessageToRandomPeersRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SendMessageToRandomPeersRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::sentry::OutboundMessageData* data_;
    ::uint64_t max_peers_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_p2psentry_2fsentry_2eproto;
};
// -------------------------------------------------------------------

class SendMessageByMinBlockRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:sentry.SendMessageByMinBlockRequest) */ {
 public:
  inline SendMessageByMinBlockRequest() : SendMessageByMinBlockRequest(nullptr) {}
  ~SendMessageByMinBlockRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SendMessageByMinBlockRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline SendMessageByMinBlockRequest(const SendMessageByMinBlockRequest& from) : SendMessageByMinBlockRequest(nullptr, from) {}
  inline SendMessageByMinBlockRequest(SendMessageByMinBlockRequest&& from) noexcept
      : SendMessageByMinBlockRequest(nullptr, std::move(from)) {}
  inline SendMessageByMinBlockRequest& operator=(const SendMessageByMinBlockRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SendMessageByMinBlockRequest& operator=(SendMessageByMinBlockRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SendMessageByMinBlockRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SendMessageByMinBlockRequest* internal_default_instance() {
    return reinterpret_cast<const SendMessageByMinBlockRequest*>(
        &_SendMessageByMinBlockRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(SendMessageByMinBlockRequest& a, SendMessageByMinBlockRequest& b) { a.Swap(&b); }
  inline void Swap(SendMessageByMinBlockRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SendMessageByMinBlockRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SendMessageByMinBlockRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<SendMessageByMinBlockRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SendMessageByMinBlockRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SendMessageByMinBlockRequest& from) { SendMessageByMinBlockRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SendMessageByMinBlockRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "sentry.SendMessageByMinBlockRequest"; }

 protected:
  explicit SendMessageByMinBlockRequest(::google::protobuf::Arena* arena);
  SendMessageByMinBlockRequest(::google::protobuf::Arena* arena, const SendMessageByMinBlockRequest& from);
  SendMessageByMinBlockRequest(::google::protobuf::Arena* arena, SendMessageByMinBlockRequest&& from) noexcept
      : SendMessageByMinBlockRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDataFieldNumber = 1,
    kMinBlockFieldNumber = 2,
    kMaxPeersFieldNumber = 3,
  };
  // .sentry.OutboundMessageData data = 1;
  bool has_data() const;
  void clear_data() ;
  const ::sentry::OutboundMessageData& data() const;
  PROTOBUF_NODISCARD ::sentry::OutboundMessageData* release_data();
  ::sentry::OutboundMessageData* mutable_data();
  void set_allocated_data(::sentry::OutboundMessageData* value);
  void unsafe_arena_set_allocated_data(::sentry::OutboundMessageData* value);
  ::sentry::OutboundMessageData* unsafe_arena_release_data();

  private:
  const ::sentry::OutboundMessageData& _internal_data() const;
  ::sentry::OutboundMessageData* _internal_mutable_data();

  public:
  // uint64 min_block = 2;
  void clear_min_block() ;
  ::uint64_t min_block() const;
  void set_min_block(::uint64_t value);

  private:
  ::uint64_t _internal_min_block() const;
  void _internal_set_min_block(::uint64_t value);

  public:
  // uint64 max_peers = 3;
  void clear_max_peers() ;
  ::uint64_t max_peers() const;
  void set_max_peers(::uint64_t value);

  private:
  ::uint64_t _internal_max_peers() const;
  void _internal_set_max_peers(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:sentry.SendMessageByMinBlockRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SendMessageByMinBlockRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SendMessageByMinBlockRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::sentry::OutboundMessageData* data_;
    ::uint64_t min_block_;
    ::uint64_t max_peers_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_p2psentry_2fsentry_2eproto;
};
// -------------------------------------------------------------------

class PeersReply final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:sentry.PeersReply) */ {
 public:
  inline PeersReply() : PeersReply(nullptr) {}
  ~PeersReply() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PeersReply(
      ::google::protobuf::internal::ConstantInitialized);

  inline PeersReply(const PeersReply& from) : PeersReply(nullptr, from) {}
  inline PeersReply(PeersReply&& from) noexcept
      : PeersReply(nullptr, std::move(from)) {}
  inline PeersReply& operator=(const PeersReply& from) {
    CopyFrom(from);
    return *this;
  }
  inline PeersReply& operator=(PeersReply&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PeersReply& default_instance() {
    return *internal_default_instance();
  }
  static inline const PeersReply* internal_default_instance() {
    return reinterpret_cast<const PeersReply*>(
        &_PeersReply_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 14;
  friend void swap(PeersReply& a, PeersReply& b) { a.Swap(&b); }
  inline void Swap(PeersReply* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PeersReply* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PeersReply* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<PeersReply>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PeersReply& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PeersReply& from) { PeersReply::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(PeersReply* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "sentry.PeersReply"; }

 protected:
  explicit PeersReply(::google::protobuf::Arena* arena);
  PeersReply(::google::protobuf::Arena* arena, const PeersReply& from);
  PeersReply(::google::protobuf::Arena* arena, PeersReply&& from) noexcept
      : PeersReply(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPeersFieldNumber = 1,
  };
  // repeated .types.PeerInfo peers = 1;
  int peers_size() const;
  private:
  int _internal_peers_size() const;

  public:
  void clear_peers() ;
  ::types::PeerInfo* mutable_peers(int index);
  ::google::protobuf::RepeatedPtrField<::types::PeerInfo>* mutable_peers();

  private:
  const ::google::protobuf::RepeatedPtrField<::types::PeerInfo>& _internal_peers() const;
  ::google::protobuf::RepeatedPtrField<::types::PeerInfo>* _internal_mutable_peers();
  public:
  const ::types::PeerInfo& peers(int index) const;
  ::types::PeerInfo* add_peers();
  const ::google::protobuf::RepeatedPtrField<::types::PeerInfo>& peers() const;
  // @@protoc_insertion_point(class_scope:sentry.PeersReply)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_PeersReply_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PeersReply& from_msg);
    ::google::protobuf::RepeatedPtrField< ::types::PeerInfo > peers_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_p2psentry_2fsentry_2eproto;
};
// -------------------------------------------------------------------

class PeerCountReply final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:sentry.PeerCountReply) */ {
 public:
  inline PeerCountReply() : PeerCountReply(nullptr) {}
  ~PeerCountReply() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PeerCountReply(
      ::google::protobuf::internal::ConstantInitialized);

  inline PeerCountReply(const PeerCountReply& from) : PeerCountReply(nullptr, from) {}
  inline PeerCountReply(PeerCountReply&& from) noexcept
      : PeerCountReply(nullptr, std::move(from)) {}
  inline PeerCountReply& operator=(const PeerCountReply& from) {
    CopyFrom(from);
    return *this;
  }
  inline PeerCountReply& operator=(PeerCountReply&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PeerCountReply& default_instance() {
    return *internal_default_instance();
  }
  static inline const PeerCountReply* internal_default_instance() {
    return reinterpret_cast<const PeerCountReply*>(
        &_PeerCountReply_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 17;
  friend void swap(PeerCountReply& a, PeerCountReply& b) { a.Swap(&b); }
  inline void Swap(PeerCountReply* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PeerCountReply* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PeerCountReply* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<PeerCountReply>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PeerCountReply& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PeerCountReply& from) { PeerCountReply::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(PeerCountReply* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "sentry.PeerCountReply"; }

 protected:
  explicit PeerCountReply(::google::protobuf::Arena* arena);
  PeerCountReply(::google::protobuf::Arena* arena, const PeerCountReply& from);
  PeerCountReply(::google::protobuf::Arena* arena, PeerCountReply&& from) noexcept
      : PeerCountReply(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCountsPerProtocolFieldNumber = 2,
    kCountFieldNumber = 1,
  };
  // repeated .sentry.PeerCountPerProtocol counts_per_protocol = 2;
  int counts_per_protocol_size() const;
  private:
  int _internal_counts_per_protocol_size() const;

  public:
  void clear_counts_per_protocol() ;
  ::sentry::PeerCountPerProtocol* mutable_counts_per_protocol(int index);
  ::google::protobuf::RepeatedPtrField<::sentry::PeerCountPerProtocol>* mutable_counts_per_protocol();

  private:
  const ::google::protobuf::RepeatedPtrField<::sentry::PeerCountPerProtocol>& _internal_counts_per_protocol() const;
  ::google::protobuf::RepeatedPtrField<::sentry::PeerCountPerProtocol>* _internal_mutable_counts_per_protocol();
  public:
  const ::sentry::PeerCountPerProtocol& counts_per_protocol(int index) const;
  ::sentry::PeerCountPerProtocol* add_counts_per_protocol();
  const ::google::protobuf::RepeatedPtrField<::sentry::PeerCountPerProtocol>& counts_per_protocol() const;
  // uint64 count = 1;
  void clear_count() ;
  ::uint64_t count() const;
  void set_count(::uint64_t value);

  private:
  ::uint64_t _internal_count() const;
  void _internal_set_count(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:sentry.PeerCountReply)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_PeerCountReply_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PeerCountReply& from_msg);
    ::google::protobuf::RepeatedPtrField< ::sentry::PeerCountPerProtocol > counts_per_protocol_;
    ::uint64_t count_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_p2psentry_2fsentry_2eproto;
};
// -------------------------------------------------------------------

class PeerByIdReply final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:sentry.PeerByIdReply) */ {
 public:
  inline PeerByIdReply() : PeerByIdReply(nullptr) {}
  ~PeerByIdReply() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PeerByIdReply(
      ::google::protobuf::internal::ConstantInitialized);

  inline PeerByIdReply(const PeerByIdReply& from) : PeerByIdReply(nullptr, from) {}
  inline PeerByIdReply(PeerByIdReply&& from) noexcept
      : PeerByIdReply(nullptr, std::move(from)) {}
  inline PeerByIdReply& operator=(const PeerByIdReply& from) {
    CopyFrom(from);
    return *this;
  }
  inline PeerByIdReply& operator=(PeerByIdReply&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PeerByIdReply& default_instance() {
    return *internal_default_instance();
  }
  static inline const PeerByIdReply* internal_default_instance() {
    return reinterpret_cast<const PeerByIdReply*>(
        &_PeerByIdReply_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 19;
  friend void swap(PeerByIdReply& a, PeerByIdReply& b) { a.Swap(&b); }
  inline void Swap(PeerByIdReply* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PeerByIdReply* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PeerByIdReply* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<PeerByIdReply>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PeerByIdReply& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PeerByIdReply& from) { PeerByIdReply::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(PeerByIdReply* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "sentry.PeerByIdReply"; }

 protected:
  explicit PeerByIdReply(::google::protobuf::Arena* arena);
  PeerByIdReply(::google::protobuf::Arena* arena, const PeerByIdReply& from);
  PeerByIdReply(::google::protobuf::Arena* arena, PeerByIdReply&& from) noexcept
      : PeerByIdReply(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPeerFieldNumber = 1,
  };
  // optional .types.PeerInfo peer = 1;
  bool has_peer() const;
  void clear_peer() ;
  const ::types::PeerInfo& peer() const;
  PROTOBUF_NODISCARD ::types::PeerInfo* release_peer();
  ::types::PeerInfo* mutable_peer();
  void set_allocated_peer(::types::PeerInfo* value);
  void unsafe_arena_set_allocated_peer(::types::PeerInfo* value);
  ::types::PeerInfo* unsafe_arena_release_peer();

  private:
  const ::types::PeerInfo& _internal_peer() const;
  ::types::PeerInfo* _internal_mutable_peer();

  public:
  // @@protoc_insertion_point(class_scope:sentry.PeerByIdReply)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_PeerByIdReply_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PeerByIdReply& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::types::PeerInfo* peer_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_p2psentry_2fsentry_2eproto;
};
// -------------------------------------------------------------------

class Forks final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:sentry.Forks) */ {
 public:
  inline Forks() : Forks(nullptr) {}
  ~Forks() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Forks(
      ::google::protobuf::internal::ConstantInitialized);

  inline Forks(const Forks& from) : Forks(nullptr, from) {}
  inline Forks(Forks&& from) noexcept
      : Forks(nullptr, std::move(from)) {}
  inline Forks& operator=(const Forks& from) {
    CopyFrom(from);
    return *this;
  }
  inline Forks& operator=(Forks&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Forks& default_instance() {
    return *internal_default_instance();
  }
  static inline const Forks* internal_default_instance() {
    return reinterpret_cast<const Forks*>(
        &_Forks_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(Forks& a, Forks& b) { a.Swap(&b); }
  inline void Swap(Forks* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Forks* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Forks* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Forks>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Forks& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Forks& from) { Forks::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Forks* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "sentry.Forks"; }

 protected:
  explicit Forks(::google::protobuf::Arena* arena);
  Forks(::google::protobuf::Arena* arena, const Forks& from);
  Forks(::google::protobuf::Arena* arena, Forks&& from) noexcept
      : Forks(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kHeightForksFieldNumber = 2,
    kTimeForksFieldNumber = 3,
    kGenesisFieldNumber = 1,
  };
  // repeated uint64 height_forks = 2;
  int height_forks_size() const;
  private:
  int _internal_height_forks_size() const;

  public:
  void clear_height_forks() ;
  ::uint64_t height_forks(int index) const;
  void set_height_forks(int index, ::uint64_t value);
  void add_height_forks(::uint64_t value);
  const ::google::protobuf::RepeatedField<::uint64_t>& height_forks() const;
  ::google::protobuf::RepeatedField<::uint64_t>* mutable_height_forks();

  private:
  const ::google::protobuf::RepeatedField<::uint64_t>& _internal_height_forks() const;
  ::google::protobuf::RepeatedField<::uint64_t>* _internal_mutable_height_forks();

  public:
  // repeated uint64 time_forks = 3;
  int time_forks_size() const;
  private:
  int _internal_time_forks_size() const;

  public:
  void clear_time_forks() ;
  ::uint64_t time_forks(int index) const;
  void set_time_forks(int index, ::uint64_t value);
  void add_time_forks(::uint64_t value);
  const ::google::protobuf::RepeatedField<::uint64_t>& time_forks() const;
  ::google::protobuf::RepeatedField<::uint64_t>* mutable_time_forks();

  private:
  const ::google::protobuf::RepeatedField<::uint64_t>& _internal_time_forks() const;
  ::google::protobuf::RepeatedField<::uint64_t>* _internal_mutable_time_forks();

  public:
  // .types.H256 genesis = 1;
  bool has_genesis() const;
  void clear_genesis() ;
  const ::types::H256& genesis() const;
  PROTOBUF_NODISCARD ::types::H256* release_genesis();
  ::types::H256* mutable_genesis();
  void set_allocated_genesis(::types::H256* value);
  void unsafe_arena_set_allocated_genesis(::types::H256* value);
  ::types::H256* unsafe_arena_release_genesis();

  private:
  const ::types::H256& _internal_genesis() const;
  ::types::H256* _internal_mutable_genesis();

  public:
  // @@protoc_insertion_point(class_scope:sentry.Forks)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Forks_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Forks& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedField<::uint64_t> height_forks_;
    mutable ::google::protobuf::internal::CachedSize _height_forks_cached_byte_size_;
    ::google::protobuf::RepeatedField<::uint64_t> time_forks_;
    mutable ::google::protobuf::internal::CachedSize _time_forks_cached_byte_size_;
    ::types::H256* genesis_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_p2psentry_2fsentry_2eproto;
};
// -------------------------------------------------------------------

class StatusData final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:sentry.StatusData) */ {
 public:
  inline StatusData() : StatusData(nullptr) {}
  ~StatusData() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR StatusData(
      ::google::protobuf::internal::ConstantInitialized);

  inline StatusData(const StatusData& from) : StatusData(nullptr, from) {}
  inline StatusData(StatusData&& from) noexcept
      : StatusData(nullptr, std::move(from)) {}
  inline StatusData& operator=(const StatusData& from) {
    CopyFrom(from);
    return *this;
  }
  inline StatusData& operator=(StatusData&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StatusData& default_instance() {
    return *internal_default_instance();
  }
  static inline const StatusData* internal_default_instance() {
    return reinterpret_cast<const StatusData*>(
        &_StatusData_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 10;
  friend void swap(StatusData& a, StatusData& b) { a.Swap(&b); }
  inline void Swap(StatusData* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StatusData* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StatusData* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<StatusData>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const StatusData& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const StatusData& from) { StatusData::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(StatusData* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "sentry.StatusData"; }

 protected:
  explicit StatusData(::google::protobuf::Arena* arena);
  StatusData(::google::protobuf::Arena* arena, const StatusData& from);
  StatusData(::google::protobuf::Arena* arena, StatusData&& from) noexcept
      : StatusData(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTotalDifficultyFieldNumber = 2,
    kBestHashFieldNumber = 3,
    kForkDataFieldNumber = 4,
    kNetworkIdFieldNumber = 1,
    kMaxBlockHeightFieldNumber = 5,
    kMaxBlockTimeFieldNumber = 6,
  };
  // .types.H256 total_difficulty = 2;
  bool has_total_difficulty() const;
  void clear_total_difficulty() ;
  const ::types::H256& total_difficulty() const;
  PROTOBUF_NODISCARD ::types::H256* release_total_difficulty();
  ::types::H256* mutable_total_difficulty();
  void set_allocated_total_difficulty(::types::H256* value);
  void unsafe_arena_set_allocated_total_difficulty(::types::H256* value);
  ::types::H256* unsafe_arena_release_total_difficulty();

  private:
  const ::types::H256& _internal_total_difficulty() const;
  ::types::H256* _internal_mutable_total_difficulty();

  public:
  // .types.H256 best_hash = 3;
  bool has_best_hash() const;
  void clear_best_hash() ;
  const ::types::H256& best_hash() const;
  PROTOBUF_NODISCARD ::types::H256* release_best_hash();
  ::types::H256* mutable_best_hash();
  void set_allocated_best_hash(::types::H256* value);
  void unsafe_arena_set_allocated_best_hash(::types::H256* value);
  ::types::H256* unsafe_arena_release_best_hash();

  private:
  const ::types::H256& _internal_best_hash() const;
  ::types::H256* _internal_mutable_best_hash();

  public:
  // .sentry.Forks fork_data = 4;
  bool has_fork_data() const;
  void clear_fork_data() ;
  const ::sentry::Forks& fork_data() const;
  PROTOBUF_NODISCARD ::sentry::Forks* release_fork_data();
  ::sentry::Forks* mutable_fork_data();
  void set_allocated_fork_data(::sentry::Forks* value);
  void unsafe_arena_set_allocated_fork_data(::sentry::Forks* value);
  ::sentry::Forks* unsafe_arena_release_fork_data();

  private:
  const ::sentry::Forks& _internal_fork_data() const;
  ::sentry::Forks* _internal_mutable_fork_data();

  public:
  // uint64 network_id = 1;
  void clear_network_id() ;
  ::uint64_t network_id() const;
  void set_network_id(::uint64_t value);

  private:
  ::uint64_t _internal_network_id() const;
  void _internal_set_network_id(::uint64_t value);

  public:
  // uint64 max_block_height = 5;
  void clear_max_block_height() ;
  ::uint64_t max_block_height() const;
  void set_max_block_height(::uint64_t value);

  private:
  ::uint64_t _internal_max_block_height() const;
  void _internal_set_max_block_height(::uint64_t value);

  public:
  // uint64 max_block_time = 6;
  void clear_max_block_time() ;
  ::uint64_t max_block_time() const;
  void set_max_block_time(::uint64_t value);

  private:
  ::uint64_t _internal_max_block_time() const;
  void _internal_set_max_block_time(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:sentry.StatusData)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 3,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_StatusData_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const StatusData& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::types::H256* total_difficulty_;
    ::types::H256* best_hash_;
    ::sentry::Forks* fork_data_;
    ::uint64_t network_id_;
    ::uint64_t max_block_height_;
    ::uint64_t max_block_time_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_p2psentry_2fsentry_2eproto;
};
// -------------------------------------------------------------------

class SentPeers final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:sentry.SentPeers) */ {
 public:
  inline SentPeers() : SentPeers(nullptr) {}
  ~SentPeers() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SentPeers(
      ::google::protobuf::internal::ConstantInitialized);

  inline SentPeers(const SentPeers& from) : SentPeers(nullptr, from) {}
  inline SentPeers(SentPeers&& from) noexcept
      : SentPeers(nullptr, std::move(from)) {}
  inline SentPeers& operator=(const SentPeers& from) {
    CopyFrom(from);
    return *this;
  }
  inline SentPeers& operator=(SentPeers&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SentPeers& default_instance() {
    return *internal_default_instance();
  }
  static inline const SentPeers* internal_default_instance() {
    return reinterpret_cast<const SentPeers*>(
        &_SentPeers_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(SentPeers& a, SentPeers& b) { a.Swap(&b); }
  inline void Swap(SentPeers* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SentPeers* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SentPeers* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<SentPeers>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SentPeers& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SentPeers& from) { SentPeers::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SentPeers* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "sentry.SentPeers"; }

 protected:
  explicit SentPeers(::google::protobuf::Arena* arena);
  SentPeers(::google::protobuf::Arena* arena, const SentPeers& from);
  SentPeers(::google::protobuf::Arena* arena, SentPeers&& from) noexcept
      : SentPeers(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPeersFieldNumber = 1,
  };
  // repeated .types.H512 peers = 1;
  int peers_size() const;
  private:
  int _internal_peers_size() const;

  public:
  void clear_peers() ;
  ::types::H512* mutable_peers(int index);
  ::google::protobuf::RepeatedPtrField<::types::H512>* mutable_peers();

  private:
  const ::google::protobuf::RepeatedPtrField<::types::H512>& _internal_peers() const;
  ::google::protobuf::RepeatedPtrField<::types::H512>* _internal_mutable_peers();
  public:
  const ::types::H512& peers(int index) const;
  ::types::H512* add_peers();
  const ::google::protobuf::RepeatedPtrField<::types::H512>& peers() const;
  // @@protoc_insertion_point(class_scope:sentry.SentPeers)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SentPeers_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SentPeers& from_msg);
    ::google::protobuf::RepeatedPtrField< ::types::H512 > peers_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_p2psentry_2fsentry_2eproto;
};
// -------------------------------------------------------------------

class SendMessageByIdRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:sentry.SendMessageByIdRequest) */ {
 public:
  inline SendMessageByIdRequest() : SendMessageByIdRequest(nullptr) {}
  ~SendMessageByIdRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SendMessageByIdRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline SendMessageByIdRequest(const SendMessageByIdRequest& from) : SendMessageByIdRequest(nullptr, from) {}
  inline SendMessageByIdRequest(SendMessageByIdRequest&& from) noexcept
      : SendMessageByIdRequest(nullptr, std::move(from)) {}
  inline SendMessageByIdRequest& operator=(const SendMessageByIdRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SendMessageByIdRequest& operator=(SendMessageByIdRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SendMessageByIdRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SendMessageByIdRequest* internal_default_instance() {
    return reinterpret_cast<const SendMessageByIdRequest*>(
        &_SendMessageByIdRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(SendMessageByIdRequest& a, SendMessageByIdRequest& b) { a.Swap(&b); }
  inline void Swap(SendMessageByIdRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SendMessageByIdRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SendMessageByIdRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<SendMessageByIdRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SendMessageByIdRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SendMessageByIdRequest& from) { SendMessageByIdRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SendMessageByIdRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "sentry.SendMessageByIdRequest"; }

 protected:
  explicit SendMessageByIdRequest(::google::protobuf::Arena* arena);
  SendMessageByIdRequest(::google::protobuf::Arena* arena, const SendMessageByIdRequest& from);
  SendMessageByIdRequest(::google::protobuf::Arena* arena, SendMessageByIdRequest&& from) noexcept
      : SendMessageByIdRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDataFieldNumber = 1,
    kPeerIdFieldNumber = 2,
  };
  // .sentry.OutboundMessageData data = 1;
  bool has_data() const;
  void clear_data() ;
  const ::sentry::OutboundMessageData& data() const;
  PROTOBUF_NODISCARD ::sentry::OutboundMessageData* release_data();
  ::sentry::OutboundMessageData* mutable_data();
  void set_allocated_data(::sentry::OutboundMessageData* value);
  void unsafe_arena_set_allocated_data(::sentry::OutboundMessageData* value);
  ::sentry::OutboundMessageData* unsafe_arena_release_data();

  private:
  const ::sentry::OutboundMessageData& _internal_data() const;
  ::sentry::OutboundMessageData* _internal_mutable_data();

  public:
  // .types.H512 peer_id = 2;
  bool has_peer_id() const;
  void clear_peer_id() ;
  const ::types::H512& peer_id() const;
  PROTOBUF_NODISCARD ::types::H512* release_peer_id();
  ::types::H512* mutable_peer_id();
  void set_allocated_peer_id(::types::H512* value);
  void unsafe_arena_set_allocated_peer_id(::types::H512* value);
  ::types::H512* unsafe_arena_release_peer_id();

  private:
  const ::types::H512& _internal_peer_id() const;
  ::types::H512* _internal_mutable_peer_id();

  public:
  // @@protoc_insertion_point(class_scope:sentry.SendMessageByIdRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SendMessageByIdRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SendMessageByIdRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::sentry::OutboundMessageData* data_;
    ::types::H512* peer_id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_p2psentry_2fsentry_2eproto;
};
// -------------------------------------------------------------------

class PenalizePeerRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:sentry.PenalizePeerRequest) */ {
 public:
  inline PenalizePeerRequest() : PenalizePeerRequest(nullptr) {}
  ~PenalizePeerRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PenalizePeerRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline PenalizePeerRequest(const PenalizePeerRequest& from) : PenalizePeerRequest(nullptr, from) {}
  inline PenalizePeerRequest(PenalizePeerRequest&& from) noexcept
      : PenalizePeerRequest(nullptr, std::move(from)) {}
  inline PenalizePeerRequest& operator=(const PenalizePeerRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline PenalizePeerRequest& operator=(PenalizePeerRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PenalizePeerRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const PenalizePeerRequest* internal_default_instance() {
    return reinterpret_cast<const PenalizePeerRequest*>(
        &_PenalizePeerRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(PenalizePeerRequest& a, PenalizePeerRequest& b) { a.Swap(&b); }
  inline void Swap(PenalizePeerRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PenalizePeerRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PenalizePeerRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<PenalizePeerRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PenalizePeerRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PenalizePeerRequest& from) { PenalizePeerRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(PenalizePeerRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "sentry.PenalizePeerRequest"; }

 protected:
  explicit PenalizePeerRequest(::google::protobuf::Arena* arena);
  PenalizePeerRequest(::google::protobuf::Arena* arena, const PenalizePeerRequest& from);
  PenalizePeerRequest(::google::protobuf::Arena* arena, PenalizePeerRequest&& from) noexcept
      : PenalizePeerRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPeerIdFieldNumber = 1,
    kPenaltyFieldNumber = 2,
  };
  // .types.H512 peer_id = 1;
  bool has_peer_id() const;
  void clear_peer_id() ;
  const ::types::H512& peer_id() const;
  PROTOBUF_NODISCARD ::types::H512* release_peer_id();
  ::types::H512* mutable_peer_id();
  void set_allocated_peer_id(::types::H512* value);
  void unsafe_arena_set_allocated_peer_id(::types::H512* value);
  ::types::H512* unsafe_arena_release_peer_id();

  private:
  const ::types::H512& _internal_peer_id() const;
  ::types::H512* _internal_mutable_peer_id();

  public:
  // .sentry.PenaltyKind penalty = 2;
  void clear_penalty() ;
  ::sentry::PenaltyKind penalty() const;
  void set_penalty(::sentry::PenaltyKind value);

  private:
  ::sentry::PenaltyKind _internal_penalty() const;
  void _internal_set_penalty(::sentry::PenaltyKind value);

  public:
  // @@protoc_insertion_point(class_scope:sentry.PenalizePeerRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_PenalizePeerRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PenalizePeerRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::types::H512* peer_id_;
    int penalty_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_p2psentry_2fsentry_2eproto;
};
// -------------------------------------------------------------------

class PeerMinBlockRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:sentry.PeerMinBlockRequest) */ {
 public:
  inline PeerMinBlockRequest() : PeerMinBlockRequest(nullptr) {}
  ~PeerMinBlockRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PeerMinBlockRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline PeerMinBlockRequest(const PeerMinBlockRequest& from) : PeerMinBlockRequest(nullptr, from) {}
  inline PeerMinBlockRequest(PeerMinBlockRequest&& from) noexcept
      : PeerMinBlockRequest(nullptr, std::move(from)) {}
  inline PeerMinBlockRequest& operator=(const PeerMinBlockRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline PeerMinBlockRequest& operator=(PeerMinBlockRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PeerMinBlockRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const PeerMinBlockRequest* internal_default_instance() {
    return reinterpret_cast<const PeerMinBlockRequest*>(
        &_PeerMinBlockRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(PeerMinBlockRequest& a, PeerMinBlockRequest& b) { a.Swap(&b); }
  inline void Swap(PeerMinBlockRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PeerMinBlockRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PeerMinBlockRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<PeerMinBlockRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PeerMinBlockRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PeerMinBlockRequest& from) { PeerMinBlockRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(PeerMinBlockRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "sentry.PeerMinBlockRequest"; }

 protected:
  explicit PeerMinBlockRequest(::google::protobuf::Arena* arena);
  PeerMinBlockRequest(::google::protobuf::Arena* arena, const PeerMinBlockRequest& from);
  PeerMinBlockRequest(::google::protobuf::Arena* arena, PeerMinBlockRequest&& from) noexcept
      : PeerMinBlockRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPeerIdFieldNumber = 1,
    kMinBlockFieldNumber = 2,
  };
  // .types.H512 peer_id = 1;
  bool has_peer_id() const;
  void clear_peer_id() ;
  const ::types::H512& peer_id() const;
  PROTOBUF_NODISCARD ::types::H512* release_peer_id();
  ::types::H512* mutable_peer_id();
  void set_allocated_peer_id(::types::H512* value);
  void unsafe_arena_set_allocated_peer_id(::types::H512* value);
  ::types::H512* unsafe_arena_release_peer_id();

  private:
  const ::types::H512& _internal_peer_id() const;
  ::types::H512* _internal_mutable_peer_id();

  public:
  // uint64 min_block = 2;
  void clear_min_block() ;
  ::uint64_t min_block() const;
  void set_min_block(::uint64_t value);

  private:
  ::uint64_t _internal_min_block() const;
  void _internal_set_min_block(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:sentry.PeerMinBlockRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_PeerMinBlockRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PeerMinBlockRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::types::H512* peer_id_;
    ::uint64_t min_block_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_p2psentry_2fsentry_2eproto;
};
// -------------------------------------------------------------------

class PeerEvent final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:sentry.PeerEvent) */ {
 public:
  inline PeerEvent() : PeerEvent(nullptr) {}
  ~PeerEvent() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PeerEvent(
      ::google::protobuf::internal::ConstantInitialized);

  inline PeerEvent(const PeerEvent& from) : PeerEvent(nullptr, from) {}
  inline PeerEvent(PeerEvent&& from) noexcept
      : PeerEvent(nullptr, std::move(from)) {}
  inline PeerEvent& operator=(const PeerEvent& from) {
    CopyFrom(from);
    return *this;
  }
  inline PeerEvent& operator=(PeerEvent&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PeerEvent& default_instance() {
    return *internal_default_instance();
  }
  static inline const PeerEvent* internal_default_instance() {
    return reinterpret_cast<const PeerEvent*>(
        &_PeerEvent_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 21;
  friend void swap(PeerEvent& a, PeerEvent& b) { a.Swap(&b); }
  inline void Swap(PeerEvent* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PeerEvent* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PeerEvent* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<PeerEvent>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PeerEvent& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PeerEvent& from) { PeerEvent::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(PeerEvent* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "sentry.PeerEvent"; }

 protected:
  explicit PeerEvent(::google::protobuf::Arena* arena);
  PeerEvent(::google::protobuf::Arena* arena, const PeerEvent& from);
  PeerEvent(::google::protobuf::Arena* arena, PeerEvent&& from) noexcept
      : PeerEvent(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using PeerEventId = PeerEvent_PeerEventId;
  static constexpr PeerEventId Connect = PeerEvent_PeerEventId_Connect;
  static constexpr PeerEventId Disconnect = PeerEvent_PeerEventId_Disconnect;
  static inline bool PeerEventId_IsValid(int value) {
    return PeerEvent_PeerEventId_IsValid(value);
  }
  static constexpr PeerEventId PeerEventId_MIN = PeerEvent_PeerEventId_PeerEventId_MIN;
  static constexpr PeerEventId PeerEventId_MAX = PeerEvent_PeerEventId_PeerEventId_MAX;
  static constexpr int PeerEventId_ARRAYSIZE = PeerEvent_PeerEventId_PeerEventId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* PeerEventId_descriptor() {
    return PeerEvent_PeerEventId_descriptor();
  }
  template <typename T>
  static inline const std::string& PeerEventId_Name(T value) {
    return PeerEvent_PeerEventId_Name(value);
  }
  static inline bool PeerEventId_Parse(absl::string_view name, PeerEventId* value) {
    return PeerEvent_PeerEventId_Parse(name, value);
  }

  // accessors -------------------------------------------------------
  enum : int {
    kPeerIdFieldNumber = 1,
    kEventIdFieldNumber = 2,
  };
  // .types.H512 peer_id = 1;
  bool has_peer_id() const;
  void clear_peer_id() ;
  const ::types::H512& peer_id() const;
  PROTOBUF_NODISCARD ::types::H512* release_peer_id();
  ::types::H512* mutable_peer_id();
  void set_allocated_peer_id(::types::H512* value);
  void unsafe_arena_set_allocated_peer_id(::types::H512* value);
  ::types::H512* unsafe_arena_release_peer_id();

  private:
  const ::types::H512& _internal_peer_id() const;
  ::types::H512* _internal_mutable_peer_id();

  public:
  // .sentry.PeerEvent.PeerEventId event_id = 2;
  void clear_event_id() ;
  ::sentry::PeerEvent_PeerEventId event_id() const;
  void set_event_id(::sentry::PeerEvent_PeerEventId value);

  private:
  ::sentry::PeerEvent_PeerEventId _internal_event_id() const;
  void _internal_set_event_id(::sentry::PeerEvent_PeerEventId value);

  public:
  // @@protoc_insertion_point(class_scope:sentry.PeerEvent)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_PeerEvent_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PeerEvent& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::types::H512* peer_id_;
    int event_id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_p2psentry_2fsentry_2eproto;
};
// -------------------------------------------------------------------

class PeerByIdRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:sentry.PeerByIdRequest) */ {
 public:
  inline PeerByIdRequest() : PeerByIdRequest(nullptr) {}
  ~PeerByIdRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PeerByIdRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline PeerByIdRequest(const PeerByIdRequest& from) : PeerByIdRequest(nullptr, from) {}
  inline PeerByIdRequest(PeerByIdRequest&& from) noexcept
      : PeerByIdRequest(nullptr, std::move(from)) {}
  inline PeerByIdRequest& operator=(const PeerByIdRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline PeerByIdRequest& operator=(PeerByIdRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PeerByIdRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const PeerByIdRequest* internal_default_instance() {
    return reinterpret_cast<const PeerByIdRequest*>(
        &_PeerByIdRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 18;
  friend void swap(PeerByIdRequest& a, PeerByIdRequest& b) { a.Swap(&b); }
  inline void Swap(PeerByIdRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PeerByIdRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PeerByIdRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<PeerByIdRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PeerByIdRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PeerByIdRequest& from) { PeerByIdRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(PeerByIdRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "sentry.PeerByIdRequest"; }

 protected:
  explicit PeerByIdRequest(::google::protobuf::Arena* arena);
  PeerByIdRequest(::google::protobuf::Arena* arena, const PeerByIdRequest& from);
  PeerByIdRequest(::google::protobuf::Arena* arena, PeerByIdRequest&& from) noexcept
      : PeerByIdRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPeerIdFieldNumber = 1,
  };
  // .types.H512 peer_id = 1;
  bool has_peer_id() const;
  void clear_peer_id() ;
  const ::types::H512& peer_id() const;
  PROTOBUF_NODISCARD ::types::H512* release_peer_id();
  ::types::H512* mutable_peer_id();
  void set_allocated_peer_id(::types::H512* value);
  void unsafe_arena_set_allocated_peer_id(::types::H512* value);
  ::types::H512* unsafe_arena_release_peer_id();

  private:
  const ::types::H512& _internal_peer_id() const;
  ::types::H512* _internal_mutable_peer_id();

  public:
  // @@protoc_insertion_point(class_scope:sentry.PeerByIdRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_PeerByIdRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PeerByIdRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::types::H512* peer_id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_p2psentry_2fsentry_2eproto;
};
// -------------------------------------------------------------------

class InboundMessage final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:sentry.InboundMessage) */ {
 public:
  inline InboundMessage() : InboundMessage(nullptr) {}
  ~InboundMessage() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR InboundMessage(
      ::google::protobuf::internal::ConstantInitialized);

  inline InboundMessage(const InboundMessage& from) : InboundMessage(nullptr, from) {}
  inline InboundMessage(InboundMessage&& from) noexcept
      : InboundMessage(nullptr, std::move(from)) {}
  inline InboundMessage& operator=(const InboundMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline InboundMessage& operator=(InboundMessage&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const InboundMessage& default_instance() {
    return *internal_default_instance();
  }
  static inline const InboundMessage* internal_default_instance() {
    return reinterpret_cast<const InboundMessage*>(
        &_InboundMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(InboundMessage& a, InboundMessage& b) { a.Swap(&b); }
  inline void Swap(InboundMessage* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(InboundMessage* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  InboundMessage* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<InboundMessage>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const InboundMessage& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const InboundMessage& from) { InboundMessage::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(InboundMessage* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "sentry.InboundMessage"; }

 protected:
  explicit InboundMessage(::google::protobuf::Arena* arena);
  InboundMessage(::google::protobuf::Arena* arena, const InboundMessage& from);
  InboundMessage(::google::protobuf::Arena* arena, InboundMessage&& from) noexcept
      : InboundMessage(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDataFieldNumber = 2,
    kPeerIdFieldNumber = 3,
    kIdFieldNumber = 1,
  };
  // bytes data = 2;
  void clear_data() ;
  const std::string& data() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_data(Arg_&& arg, Args_... args);
  std::string* mutable_data();
  PROTOBUF_NODISCARD std::string* release_data();
  void set_allocated_data(std::string* value);

  private:
  const std::string& _internal_data() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_data(
      const std::string& value);
  std::string* _internal_mutable_data();

  public:
  // .types.H512 peer_id = 3;
  bool has_peer_id() const;
  void clear_peer_id() ;
  const ::types::H512& peer_id() const;
  PROTOBUF_NODISCARD ::types::H512* release_peer_id();
  ::types::H512* mutable_peer_id();
  void set_allocated_peer_id(::types::H512* value);
  void unsafe_arena_set_allocated_peer_id(::types::H512* value);
  ::types::H512* unsafe_arena_release_peer_id();

  private:
  const ::types::H512& _internal_peer_id() const;
  ::types::H512* _internal_mutable_peer_id();

  public:
  // .sentry.MessageId id = 1;
  void clear_id() ;
  ::sentry::MessageId id() const;
  void set_id(::sentry::MessageId value);

  private:
  ::sentry::MessageId _internal_id() const;
  void _internal_set_id(::sentry::MessageId value);

  public:
  // @@protoc_insertion_point(class_scope:sentry.InboundMessage)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_InboundMessage_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const InboundMessage& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr data_;
    ::types::H512* peer_id_;
    int id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_p2psentry_2fsentry_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// OutboundMessageData

// .sentry.MessageId id = 1;
inline void OutboundMessageData::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = 0;
}
inline ::sentry::MessageId OutboundMessageData::id() const {
  // @@protoc_insertion_point(field_get:sentry.OutboundMessageData.id)
  return _internal_id();
}
inline void OutboundMessageData::set_id(::sentry::MessageId value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:sentry.OutboundMessageData.id)
}
inline ::sentry::MessageId OutboundMessageData::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::sentry::MessageId>(_impl_.id_);
}
inline void OutboundMessageData::_internal_set_id(::sentry::MessageId value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// bytes data = 2;
inline void OutboundMessageData::clear_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.ClearToEmpty();
}
inline const std::string& OutboundMessageData::data() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sentry.OutboundMessageData.data)
  return _internal_data();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void OutboundMessageData::set_data(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:sentry.OutboundMessageData.data)
}
inline std::string* OutboundMessageData::mutable_data() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_data();
  // @@protoc_insertion_point(field_mutable:sentry.OutboundMessageData.data)
  return _s;
}
inline const std::string& OutboundMessageData::_internal_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.data_.Get();
}
inline void OutboundMessageData::_internal_set_data(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.Set(value, GetArena());
}
inline std::string* OutboundMessageData::_internal_mutable_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.data_.Mutable( GetArena());
}
inline std::string* OutboundMessageData::release_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:sentry.OutboundMessageData.data)
  return _impl_.data_.Release();
}
inline void OutboundMessageData::set_allocated_data(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.data_.IsDefault()) {
          _impl_.data_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:sentry.OutboundMessageData.data)
}

// -------------------------------------------------------------------

// SendMessageByMinBlockRequest

// .sentry.OutboundMessageData data = 1;
inline bool SendMessageByMinBlockRequest::has_data() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.data_ != nullptr);
  return value;
}
inline void SendMessageByMinBlockRequest::clear_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.data_ != nullptr) _impl_.data_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::sentry::OutboundMessageData& SendMessageByMinBlockRequest::_internal_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::sentry::OutboundMessageData* p = _impl_.data_;
  return p != nullptr ? *p : reinterpret_cast<const ::sentry::OutboundMessageData&>(::sentry::_OutboundMessageData_default_instance_);
}
inline const ::sentry::OutboundMessageData& SendMessageByMinBlockRequest::data() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sentry.SendMessageByMinBlockRequest.data)
  return _internal_data();
}
inline void SendMessageByMinBlockRequest::unsafe_arena_set_allocated_data(::sentry::OutboundMessageData* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.data_);
  }
  _impl_.data_ = reinterpret_cast<::sentry::OutboundMessageData*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sentry.SendMessageByMinBlockRequest.data)
}
inline ::sentry::OutboundMessageData* SendMessageByMinBlockRequest::release_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::sentry::OutboundMessageData* released = _impl_.data_;
  _impl_.data_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::sentry::OutboundMessageData* SendMessageByMinBlockRequest::unsafe_arena_release_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:sentry.SendMessageByMinBlockRequest.data)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::sentry::OutboundMessageData* temp = _impl_.data_;
  _impl_.data_ = nullptr;
  return temp;
}
inline ::sentry::OutboundMessageData* SendMessageByMinBlockRequest::_internal_mutable_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.data_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::sentry::OutboundMessageData>(GetArena());
    _impl_.data_ = reinterpret_cast<::sentry::OutboundMessageData*>(p);
  }
  return _impl_.data_;
}
inline ::sentry::OutboundMessageData* SendMessageByMinBlockRequest::mutable_data() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::sentry::OutboundMessageData* _msg = _internal_mutable_data();
  // @@protoc_insertion_point(field_mutable:sentry.SendMessageByMinBlockRequest.data)
  return _msg;
}
inline void SendMessageByMinBlockRequest::set_allocated_data(::sentry::OutboundMessageData* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.data_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.data_ = reinterpret_cast<::sentry::OutboundMessageData*>(value);
  // @@protoc_insertion_point(field_set_allocated:sentry.SendMessageByMinBlockRequest.data)
}

// uint64 min_block = 2;
inline void SendMessageByMinBlockRequest::clear_min_block() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_block_ = ::uint64_t{0u};
}
inline ::uint64_t SendMessageByMinBlockRequest::min_block() const {
  // @@protoc_insertion_point(field_get:sentry.SendMessageByMinBlockRequest.min_block)
  return _internal_min_block();
}
inline void SendMessageByMinBlockRequest::set_min_block(::uint64_t value) {
  _internal_set_min_block(value);
  // @@protoc_insertion_point(field_set:sentry.SendMessageByMinBlockRequest.min_block)
}
inline ::uint64_t SendMessageByMinBlockRequest::_internal_min_block() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.min_block_;
}
inline void SendMessageByMinBlockRequest::_internal_set_min_block(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_block_ = value;
}

// uint64 max_peers = 3;
inline void SendMessageByMinBlockRequest::clear_max_peers() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_peers_ = ::uint64_t{0u};
}
inline ::uint64_t SendMessageByMinBlockRequest::max_peers() const {
  // @@protoc_insertion_point(field_get:sentry.SendMessageByMinBlockRequest.max_peers)
  return _internal_max_peers();
}
inline void SendMessageByMinBlockRequest::set_max_peers(::uint64_t value) {
  _internal_set_max_peers(value);
  // @@protoc_insertion_point(field_set:sentry.SendMessageByMinBlockRequest.max_peers)
}
inline ::uint64_t SendMessageByMinBlockRequest::_internal_max_peers() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.max_peers_;
}
inline void SendMessageByMinBlockRequest::_internal_set_max_peers(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_peers_ = value;
}

// -------------------------------------------------------------------

// SendMessageByIdRequest

// .sentry.OutboundMessageData data = 1;
inline bool SendMessageByIdRequest::has_data() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.data_ != nullptr);
  return value;
}
inline void SendMessageByIdRequest::clear_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.data_ != nullptr) _impl_.data_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::sentry::OutboundMessageData& SendMessageByIdRequest::_internal_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::sentry::OutboundMessageData* p = _impl_.data_;
  return p != nullptr ? *p : reinterpret_cast<const ::sentry::OutboundMessageData&>(::sentry::_OutboundMessageData_default_instance_);
}
inline const ::sentry::OutboundMessageData& SendMessageByIdRequest::data() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sentry.SendMessageByIdRequest.data)
  return _internal_data();
}
inline void SendMessageByIdRequest::unsafe_arena_set_allocated_data(::sentry::OutboundMessageData* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.data_);
  }
  _impl_.data_ = reinterpret_cast<::sentry::OutboundMessageData*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sentry.SendMessageByIdRequest.data)
}
inline ::sentry::OutboundMessageData* SendMessageByIdRequest::release_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::sentry::OutboundMessageData* released = _impl_.data_;
  _impl_.data_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::sentry::OutboundMessageData* SendMessageByIdRequest::unsafe_arena_release_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:sentry.SendMessageByIdRequest.data)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::sentry::OutboundMessageData* temp = _impl_.data_;
  _impl_.data_ = nullptr;
  return temp;
}
inline ::sentry::OutboundMessageData* SendMessageByIdRequest::_internal_mutable_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.data_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::sentry::OutboundMessageData>(GetArena());
    _impl_.data_ = reinterpret_cast<::sentry::OutboundMessageData*>(p);
  }
  return _impl_.data_;
}
inline ::sentry::OutboundMessageData* SendMessageByIdRequest::mutable_data() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::sentry::OutboundMessageData* _msg = _internal_mutable_data();
  // @@protoc_insertion_point(field_mutable:sentry.SendMessageByIdRequest.data)
  return _msg;
}
inline void SendMessageByIdRequest::set_allocated_data(::sentry::OutboundMessageData* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.data_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.data_ = reinterpret_cast<::sentry::OutboundMessageData*>(value);
  // @@protoc_insertion_point(field_set_allocated:sentry.SendMessageByIdRequest.data)
}

// .types.H512 peer_id = 2;
inline bool SendMessageByIdRequest::has_peer_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.peer_id_ != nullptr);
  return value;
}
inline const ::types::H512& SendMessageByIdRequest::_internal_peer_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::types::H512* p = _impl_.peer_id_;
  return p != nullptr ? *p : reinterpret_cast<const ::types::H512&>(::types::_H512_default_instance_);
}
inline const ::types::H512& SendMessageByIdRequest::peer_id() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sentry.SendMessageByIdRequest.peer_id)
  return _internal_peer_id();
}
inline void SendMessageByIdRequest::unsafe_arena_set_allocated_peer_id(::types::H512* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.peer_id_);
  }
  _impl_.peer_id_ = reinterpret_cast<::types::H512*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sentry.SendMessageByIdRequest.peer_id)
}
inline ::types::H512* SendMessageByIdRequest::release_peer_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::types::H512* released = _impl_.peer_id_;
  _impl_.peer_id_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::types::H512* SendMessageByIdRequest::unsafe_arena_release_peer_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:sentry.SendMessageByIdRequest.peer_id)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::types::H512* temp = _impl_.peer_id_;
  _impl_.peer_id_ = nullptr;
  return temp;
}
inline ::types::H512* SendMessageByIdRequest::_internal_mutable_peer_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.peer_id_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::types::H512>(GetArena());
    _impl_.peer_id_ = reinterpret_cast<::types::H512*>(p);
  }
  return _impl_.peer_id_;
}
inline ::types::H512* SendMessageByIdRequest::mutable_peer_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::types::H512* _msg = _internal_mutable_peer_id();
  // @@protoc_insertion_point(field_mutable:sentry.SendMessageByIdRequest.peer_id)
  return _msg;
}
inline void SendMessageByIdRequest::set_allocated_peer_id(::types::H512* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.peer_id_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.peer_id_ = reinterpret_cast<::types::H512*>(value);
  // @@protoc_insertion_point(field_set_allocated:sentry.SendMessageByIdRequest.peer_id)
}

// -------------------------------------------------------------------

// SendMessageToRandomPeersRequest

// .sentry.OutboundMessageData data = 1;
inline bool SendMessageToRandomPeersRequest::has_data() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.data_ != nullptr);
  return value;
}
inline void SendMessageToRandomPeersRequest::clear_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.data_ != nullptr) _impl_.data_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::sentry::OutboundMessageData& SendMessageToRandomPeersRequest::_internal_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::sentry::OutboundMessageData* p = _impl_.data_;
  return p != nullptr ? *p : reinterpret_cast<const ::sentry::OutboundMessageData&>(::sentry::_OutboundMessageData_default_instance_);
}
inline const ::sentry::OutboundMessageData& SendMessageToRandomPeersRequest::data() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sentry.SendMessageToRandomPeersRequest.data)
  return _internal_data();
}
inline void SendMessageToRandomPeersRequest::unsafe_arena_set_allocated_data(::sentry::OutboundMessageData* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.data_);
  }
  _impl_.data_ = reinterpret_cast<::sentry::OutboundMessageData*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sentry.SendMessageToRandomPeersRequest.data)
}
inline ::sentry::OutboundMessageData* SendMessageToRandomPeersRequest::release_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::sentry::OutboundMessageData* released = _impl_.data_;
  _impl_.data_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::sentry::OutboundMessageData* SendMessageToRandomPeersRequest::unsafe_arena_release_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:sentry.SendMessageToRandomPeersRequest.data)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::sentry::OutboundMessageData* temp = _impl_.data_;
  _impl_.data_ = nullptr;
  return temp;
}
inline ::sentry::OutboundMessageData* SendMessageToRandomPeersRequest::_internal_mutable_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.data_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::sentry::OutboundMessageData>(GetArena());
    _impl_.data_ = reinterpret_cast<::sentry::OutboundMessageData*>(p);
  }
  return _impl_.data_;
}
inline ::sentry::OutboundMessageData* SendMessageToRandomPeersRequest::mutable_data() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::sentry::OutboundMessageData* _msg = _internal_mutable_data();
  // @@protoc_insertion_point(field_mutable:sentry.SendMessageToRandomPeersRequest.data)
  return _msg;
}
inline void SendMessageToRandomPeersRequest::set_allocated_data(::sentry::OutboundMessageData* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.data_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.data_ = reinterpret_cast<::sentry::OutboundMessageData*>(value);
  // @@protoc_insertion_point(field_set_allocated:sentry.SendMessageToRandomPeersRequest.data)
}

// uint64 max_peers = 2;
inline void SendMessageToRandomPeersRequest::clear_max_peers() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_peers_ = ::uint64_t{0u};
}
inline ::uint64_t SendMessageToRandomPeersRequest::max_peers() const {
  // @@protoc_insertion_point(field_get:sentry.SendMessageToRandomPeersRequest.max_peers)
  return _internal_max_peers();
}
inline void SendMessageToRandomPeersRequest::set_max_peers(::uint64_t value) {
  _internal_set_max_peers(value);
  // @@protoc_insertion_point(field_set:sentry.SendMessageToRandomPeersRequest.max_peers)
}
inline ::uint64_t SendMessageToRandomPeersRequest::_internal_max_peers() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.max_peers_;
}
inline void SendMessageToRandomPeersRequest::_internal_set_max_peers(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_peers_ = value;
}

// -------------------------------------------------------------------

// SentPeers

// repeated .types.H512 peers = 1;
inline int SentPeers::_internal_peers_size() const {
  return _internal_peers().size();
}
inline int SentPeers::peers_size() const {
  return _internal_peers_size();
}
inline ::types::H512* SentPeers::mutable_peers(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:sentry.SentPeers.peers)
  return _internal_mutable_peers()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::types::H512>* SentPeers::mutable_peers()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:sentry.SentPeers.peers)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_peers();
}
inline const ::types::H512& SentPeers::peers(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sentry.SentPeers.peers)
  return _internal_peers().Get(index);
}
inline ::types::H512* SentPeers::add_peers() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::types::H512* _add = _internal_mutable_peers()->Add();
  // @@protoc_insertion_point(field_add:sentry.SentPeers.peers)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::types::H512>& SentPeers::peers() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:sentry.SentPeers.peers)
  return _internal_peers();
}
inline const ::google::protobuf::RepeatedPtrField<::types::H512>&
SentPeers::_internal_peers() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.peers_;
}
inline ::google::protobuf::RepeatedPtrField<::types::H512>*
SentPeers::_internal_mutable_peers() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.peers_;
}

// -------------------------------------------------------------------

// PenalizePeerRequest

// .types.H512 peer_id = 1;
inline bool PenalizePeerRequest::has_peer_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.peer_id_ != nullptr);
  return value;
}
inline const ::types::H512& PenalizePeerRequest::_internal_peer_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::types::H512* p = _impl_.peer_id_;
  return p != nullptr ? *p : reinterpret_cast<const ::types::H512&>(::types::_H512_default_instance_);
}
inline const ::types::H512& PenalizePeerRequest::peer_id() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sentry.PenalizePeerRequest.peer_id)
  return _internal_peer_id();
}
inline void PenalizePeerRequest::unsafe_arena_set_allocated_peer_id(::types::H512* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.peer_id_);
  }
  _impl_.peer_id_ = reinterpret_cast<::types::H512*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sentry.PenalizePeerRequest.peer_id)
}
inline ::types::H512* PenalizePeerRequest::release_peer_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::types::H512* released = _impl_.peer_id_;
  _impl_.peer_id_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::types::H512* PenalizePeerRequest::unsafe_arena_release_peer_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:sentry.PenalizePeerRequest.peer_id)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::types::H512* temp = _impl_.peer_id_;
  _impl_.peer_id_ = nullptr;
  return temp;
}
inline ::types::H512* PenalizePeerRequest::_internal_mutable_peer_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.peer_id_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::types::H512>(GetArena());
    _impl_.peer_id_ = reinterpret_cast<::types::H512*>(p);
  }
  return _impl_.peer_id_;
}
inline ::types::H512* PenalizePeerRequest::mutable_peer_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::types::H512* _msg = _internal_mutable_peer_id();
  // @@protoc_insertion_point(field_mutable:sentry.PenalizePeerRequest.peer_id)
  return _msg;
}
inline void PenalizePeerRequest::set_allocated_peer_id(::types::H512* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.peer_id_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.peer_id_ = reinterpret_cast<::types::H512*>(value);
  // @@protoc_insertion_point(field_set_allocated:sentry.PenalizePeerRequest.peer_id)
}

// .sentry.PenaltyKind penalty = 2;
inline void PenalizePeerRequest::clear_penalty() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.penalty_ = 0;
}
inline ::sentry::PenaltyKind PenalizePeerRequest::penalty() const {
  // @@protoc_insertion_point(field_get:sentry.PenalizePeerRequest.penalty)
  return _internal_penalty();
}
inline void PenalizePeerRequest::set_penalty(::sentry::PenaltyKind value) {
  _internal_set_penalty(value);
  // @@protoc_insertion_point(field_set:sentry.PenalizePeerRequest.penalty)
}
inline ::sentry::PenaltyKind PenalizePeerRequest::_internal_penalty() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::sentry::PenaltyKind>(_impl_.penalty_);
}
inline void PenalizePeerRequest::_internal_set_penalty(::sentry::PenaltyKind value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.penalty_ = value;
}

// -------------------------------------------------------------------

// PeerMinBlockRequest

// .types.H512 peer_id = 1;
inline bool PeerMinBlockRequest::has_peer_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.peer_id_ != nullptr);
  return value;
}
inline const ::types::H512& PeerMinBlockRequest::_internal_peer_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::types::H512* p = _impl_.peer_id_;
  return p != nullptr ? *p : reinterpret_cast<const ::types::H512&>(::types::_H512_default_instance_);
}
inline const ::types::H512& PeerMinBlockRequest::peer_id() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sentry.PeerMinBlockRequest.peer_id)
  return _internal_peer_id();
}
inline void PeerMinBlockRequest::unsafe_arena_set_allocated_peer_id(::types::H512* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.peer_id_);
  }
  _impl_.peer_id_ = reinterpret_cast<::types::H512*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sentry.PeerMinBlockRequest.peer_id)
}
inline ::types::H512* PeerMinBlockRequest::release_peer_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::types::H512* released = _impl_.peer_id_;
  _impl_.peer_id_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::types::H512* PeerMinBlockRequest::unsafe_arena_release_peer_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:sentry.PeerMinBlockRequest.peer_id)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::types::H512* temp = _impl_.peer_id_;
  _impl_.peer_id_ = nullptr;
  return temp;
}
inline ::types::H512* PeerMinBlockRequest::_internal_mutable_peer_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.peer_id_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::types::H512>(GetArena());
    _impl_.peer_id_ = reinterpret_cast<::types::H512*>(p);
  }
  return _impl_.peer_id_;
}
inline ::types::H512* PeerMinBlockRequest::mutable_peer_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::types::H512* _msg = _internal_mutable_peer_id();
  // @@protoc_insertion_point(field_mutable:sentry.PeerMinBlockRequest.peer_id)
  return _msg;
}
inline void PeerMinBlockRequest::set_allocated_peer_id(::types::H512* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.peer_id_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.peer_id_ = reinterpret_cast<::types::H512*>(value);
  // @@protoc_insertion_point(field_set_allocated:sentry.PeerMinBlockRequest.peer_id)
}

// uint64 min_block = 2;
inline void PeerMinBlockRequest::clear_min_block() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_block_ = ::uint64_t{0u};
}
inline ::uint64_t PeerMinBlockRequest::min_block() const {
  // @@protoc_insertion_point(field_get:sentry.PeerMinBlockRequest.min_block)
  return _internal_min_block();
}
inline void PeerMinBlockRequest::set_min_block(::uint64_t value) {
  _internal_set_min_block(value);
  // @@protoc_insertion_point(field_set:sentry.PeerMinBlockRequest.min_block)
}
inline ::uint64_t PeerMinBlockRequest::_internal_min_block() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.min_block_;
}
inline void PeerMinBlockRequest::_internal_set_min_block(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_block_ = value;
}

// -------------------------------------------------------------------

// AddPeerRequest

// string url = 1;
inline void AddPeerRequest::clear_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.url_.ClearToEmpty();
}
inline const std::string& AddPeerRequest::url() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sentry.AddPeerRequest.url)
  return _internal_url();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AddPeerRequest::set_url(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.url_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:sentry.AddPeerRequest.url)
}
inline std::string* AddPeerRequest::mutable_url() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_url();
  // @@protoc_insertion_point(field_mutable:sentry.AddPeerRequest.url)
  return _s;
}
inline const std::string& AddPeerRequest::_internal_url() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.url_.Get();
}
inline void AddPeerRequest::_internal_set_url(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.url_.Set(value, GetArena());
}
inline std::string* AddPeerRequest::_internal_mutable_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.url_.Mutable( GetArena());
}
inline std::string* AddPeerRequest::release_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:sentry.AddPeerRequest.url)
  return _impl_.url_.Release();
}
inline void AddPeerRequest::set_allocated_url(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.url_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.url_.IsDefault()) {
          _impl_.url_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:sentry.AddPeerRequest.url)
}

// -------------------------------------------------------------------

// InboundMessage

// .sentry.MessageId id = 1;
inline void InboundMessage::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = 0;
}
inline ::sentry::MessageId InboundMessage::id() const {
  // @@protoc_insertion_point(field_get:sentry.InboundMessage.id)
  return _internal_id();
}
inline void InboundMessage::set_id(::sentry::MessageId value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:sentry.InboundMessage.id)
}
inline ::sentry::MessageId InboundMessage::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::sentry::MessageId>(_impl_.id_);
}
inline void InboundMessage::_internal_set_id(::sentry::MessageId value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// bytes data = 2;
inline void InboundMessage::clear_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.ClearToEmpty();
}
inline const std::string& InboundMessage::data() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sentry.InboundMessage.data)
  return _internal_data();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void InboundMessage::set_data(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:sentry.InboundMessage.data)
}
inline std::string* InboundMessage::mutable_data() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_data();
  // @@protoc_insertion_point(field_mutable:sentry.InboundMessage.data)
  return _s;
}
inline const std::string& InboundMessage::_internal_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.data_.Get();
}
inline void InboundMessage::_internal_set_data(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.Set(value, GetArena());
}
inline std::string* InboundMessage::_internal_mutable_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.data_.Mutable( GetArena());
}
inline std::string* InboundMessage::release_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:sentry.InboundMessage.data)
  return _impl_.data_.Release();
}
inline void InboundMessage::set_allocated_data(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.data_.IsDefault()) {
          _impl_.data_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:sentry.InboundMessage.data)
}

// .types.H512 peer_id = 3;
inline bool InboundMessage::has_peer_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.peer_id_ != nullptr);
  return value;
}
inline const ::types::H512& InboundMessage::_internal_peer_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::types::H512* p = _impl_.peer_id_;
  return p != nullptr ? *p : reinterpret_cast<const ::types::H512&>(::types::_H512_default_instance_);
}
inline const ::types::H512& InboundMessage::peer_id() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sentry.InboundMessage.peer_id)
  return _internal_peer_id();
}
inline void InboundMessage::unsafe_arena_set_allocated_peer_id(::types::H512* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.peer_id_);
  }
  _impl_.peer_id_ = reinterpret_cast<::types::H512*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sentry.InboundMessage.peer_id)
}
inline ::types::H512* InboundMessage::release_peer_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::types::H512* released = _impl_.peer_id_;
  _impl_.peer_id_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::types::H512* InboundMessage::unsafe_arena_release_peer_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:sentry.InboundMessage.peer_id)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::types::H512* temp = _impl_.peer_id_;
  _impl_.peer_id_ = nullptr;
  return temp;
}
inline ::types::H512* InboundMessage::_internal_mutable_peer_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.peer_id_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::types::H512>(GetArena());
    _impl_.peer_id_ = reinterpret_cast<::types::H512*>(p);
  }
  return _impl_.peer_id_;
}
inline ::types::H512* InboundMessage::mutable_peer_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::types::H512* _msg = _internal_mutable_peer_id();
  // @@protoc_insertion_point(field_mutable:sentry.InboundMessage.peer_id)
  return _msg;
}
inline void InboundMessage::set_allocated_peer_id(::types::H512* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.peer_id_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.peer_id_ = reinterpret_cast<::types::H512*>(value);
  // @@protoc_insertion_point(field_set_allocated:sentry.InboundMessage.peer_id)
}

// -------------------------------------------------------------------

// Forks

// .types.H256 genesis = 1;
inline bool Forks::has_genesis() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.genesis_ != nullptr);
  return value;
}
inline const ::types::H256& Forks::_internal_genesis() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::types::H256* p = _impl_.genesis_;
  return p != nullptr ? *p : reinterpret_cast<const ::types::H256&>(::types::_H256_default_instance_);
}
inline const ::types::H256& Forks::genesis() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sentry.Forks.genesis)
  return _internal_genesis();
}
inline void Forks::unsafe_arena_set_allocated_genesis(::types::H256* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.genesis_);
  }
  _impl_.genesis_ = reinterpret_cast<::types::H256*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sentry.Forks.genesis)
}
inline ::types::H256* Forks::release_genesis() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::types::H256* released = _impl_.genesis_;
  _impl_.genesis_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::types::H256* Forks::unsafe_arena_release_genesis() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:sentry.Forks.genesis)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::types::H256* temp = _impl_.genesis_;
  _impl_.genesis_ = nullptr;
  return temp;
}
inline ::types::H256* Forks::_internal_mutable_genesis() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.genesis_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::types::H256>(GetArena());
    _impl_.genesis_ = reinterpret_cast<::types::H256*>(p);
  }
  return _impl_.genesis_;
}
inline ::types::H256* Forks::mutable_genesis() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::types::H256* _msg = _internal_mutable_genesis();
  // @@protoc_insertion_point(field_mutable:sentry.Forks.genesis)
  return _msg;
}
inline void Forks::set_allocated_genesis(::types::H256* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.genesis_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.genesis_ = reinterpret_cast<::types::H256*>(value);
  // @@protoc_insertion_point(field_set_allocated:sentry.Forks.genesis)
}

// repeated uint64 height_forks = 2;
inline int Forks::_internal_height_forks_size() const {
  return _internal_height_forks().size();
}
inline int Forks::height_forks_size() const {
  return _internal_height_forks_size();
}
inline void Forks::clear_height_forks() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.height_forks_.Clear();
}
inline ::uint64_t Forks::height_forks(int index) const {
  // @@protoc_insertion_point(field_get:sentry.Forks.height_forks)
  return _internal_height_forks().Get(index);
}
inline void Forks::set_height_forks(int index, ::uint64_t value) {
  _internal_mutable_height_forks()->Set(index, value);
  // @@protoc_insertion_point(field_set:sentry.Forks.height_forks)
}
inline void Forks::add_height_forks(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_height_forks()->Add(value);
  // @@protoc_insertion_point(field_add:sentry.Forks.height_forks)
}
inline const ::google::protobuf::RepeatedField<::uint64_t>& Forks::height_forks() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:sentry.Forks.height_forks)
  return _internal_height_forks();
}
inline ::google::protobuf::RepeatedField<::uint64_t>* Forks::mutable_height_forks()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:sentry.Forks.height_forks)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_height_forks();
}
inline const ::google::protobuf::RepeatedField<::uint64_t>&
Forks::_internal_height_forks() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.height_forks_;
}
inline ::google::protobuf::RepeatedField<::uint64_t>* Forks::_internal_mutable_height_forks() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.height_forks_;
}

// repeated uint64 time_forks = 3;
inline int Forks::_internal_time_forks_size() const {
  return _internal_time_forks().size();
}
inline int Forks::time_forks_size() const {
  return _internal_time_forks_size();
}
inline void Forks::clear_time_forks() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.time_forks_.Clear();
}
inline ::uint64_t Forks::time_forks(int index) const {
  // @@protoc_insertion_point(field_get:sentry.Forks.time_forks)
  return _internal_time_forks().Get(index);
}
inline void Forks::set_time_forks(int index, ::uint64_t value) {
  _internal_mutable_time_forks()->Set(index, value);
  // @@protoc_insertion_point(field_set:sentry.Forks.time_forks)
}
inline void Forks::add_time_forks(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_time_forks()->Add(value);
  // @@protoc_insertion_point(field_add:sentry.Forks.time_forks)
}
inline const ::google::protobuf::RepeatedField<::uint64_t>& Forks::time_forks() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:sentry.Forks.time_forks)
  return _internal_time_forks();
}
inline ::google::protobuf::RepeatedField<::uint64_t>* Forks::mutable_time_forks()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:sentry.Forks.time_forks)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_time_forks();
}
inline const ::google::protobuf::RepeatedField<::uint64_t>&
Forks::_internal_time_forks() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.time_forks_;
}
inline ::google::protobuf::RepeatedField<::uint64_t>* Forks::_internal_mutable_time_forks() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.time_forks_;
}

// -------------------------------------------------------------------

// StatusData

// uint64 network_id = 1;
inline void StatusData::clear_network_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.network_id_ = ::uint64_t{0u};
}
inline ::uint64_t StatusData::network_id() const {
  // @@protoc_insertion_point(field_get:sentry.StatusData.network_id)
  return _internal_network_id();
}
inline void StatusData::set_network_id(::uint64_t value) {
  _internal_set_network_id(value);
  // @@protoc_insertion_point(field_set:sentry.StatusData.network_id)
}
inline ::uint64_t StatusData::_internal_network_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.network_id_;
}
inline void StatusData::_internal_set_network_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.network_id_ = value;
}

// .types.H256 total_difficulty = 2;
inline bool StatusData::has_total_difficulty() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.total_difficulty_ != nullptr);
  return value;
}
inline const ::types::H256& StatusData::_internal_total_difficulty() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::types::H256* p = _impl_.total_difficulty_;
  return p != nullptr ? *p : reinterpret_cast<const ::types::H256&>(::types::_H256_default_instance_);
}
inline const ::types::H256& StatusData::total_difficulty() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sentry.StatusData.total_difficulty)
  return _internal_total_difficulty();
}
inline void StatusData::unsafe_arena_set_allocated_total_difficulty(::types::H256* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.total_difficulty_);
  }
  _impl_.total_difficulty_ = reinterpret_cast<::types::H256*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sentry.StatusData.total_difficulty)
}
inline ::types::H256* StatusData::release_total_difficulty() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::types::H256* released = _impl_.total_difficulty_;
  _impl_.total_difficulty_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::types::H256* StatusData::unsafe_arena_release_total_difficulty() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:sentry.StatusData.total_difficulty)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::types::H256* temp = _impl_.total_difficulty_;
  _impl_.total_difficulty_ = nullptr;
  return temp;
}
inline ::types::H256* StatusData::_internal_mutable_total_difficulty() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.total_difficulty_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::types::H256>(GetArena());
    _impl_.total_difficulty_ = reinterpret_cast<::types::H256*>(p);
  }
  return _impl_.total_difficulty_;
}
inline ::types::H256* StatusData::mutable_total_difficulty() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::types::H256* _msg = _internal_mutable_total_difficulty();
  // @@protoc_insertion_point(field_mutable:sentry.StatusData.total_difficulty)
  return _msg;
}
inline void StatusData::set_allocated_total_difficulty(::types::H256* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.total_difficulty_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.total_difficulty_ = reinterpret_cast<::types::H256*>(value);
  // @@protoc_insertion_point(field_set_allocated:sentry.StatusData.total_difficulty)
}

// .types.H256 best_hash = 3;
inline bool StatusData::has_best_hash() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.best_hash_ != nullptr);
  return value;
}
inline const ::types::H256& StatusData::_internal_best_hash() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::types::H256* p = _impl_.best_hash_;
  return p != nullptr ? *p : reinterpret_cast<const ::types::H256&>(::types::_H256_default_instance_);
}
inline const ::types::H256& StatusData::best_hash() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sentry.StatusData.best_hash)
  return _internal_best_hash();
}
inline void StatusData::unsafe_arena_set_allocated_best_hash(::types::H256* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.best_hash_);
  }
  _impl_.best_hash_ = reinterpret_cast<::types::H256*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sentry.StatusData.best_hash)
}
inline ::types::H256* StatusData::release_best_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::types::H256* released = _impl_.best_hash_;
  _impl_.best_hash_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::types::H256* StatusData::unsafe_arena_release_best_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:sentry.StatusData.best_hash)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::types::H256* temp = _impl_.best_hash_;
  _impl_.best_hash_ = nullptr;
  return temp;
}
inline ::types::H256* StatusData::_internal_mutable_best_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.best_hash_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::types::H256>(GetArena());
    _impl_.best_hash_ = reinterpret_cast<::types::H256*>(p);
  }
  return _impl_.best_hash_;
}
inline ::types::H256* StatusData::mutable_best_hash() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::types::H256* _msg = _internal_mutable_best_hash();
  // @@protoc_insertion_point(field_mutable:sentry.StatusData.best_hash)
  return _msg;
}
inline void StatusData::set_allocated_best_hash(::types::H256* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.best_hash_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.best_hash_ = reinterpret_cast<::types::H256*>(value);
  // @@protoc_insertion_point(field_set_allocated:sentry.StatusData.best_hash)
}

// .sentry.Forks fork_data = 4;
inline bool StatusData::has_fork_data() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.fork_data_ != nullptr);
  return value;
}
inline void StatusData::clear_fork_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.fork_data_ != nullptr) _impl_.fork_data_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::sentry::Forks& StatusData::_internal_fork_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::sentry::Forks* p = _impl_.fork_data_;
  return p != nullptr ? *p : reinterpret_cast<const ::sentry::Forks&>(::sentry::_Forks_default_instance_);
}
inline const ::sentry::Forks& StatusData::fork_data() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sentry.StatusData.fork_data)
  return _internal_fork_data();
}
inline void StatusData::unsafe_arena_set_allocated_fork_data(::sentry::Forks* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.fork_data_);
  }
  _impl_.fork_data_ = reinterpret_cast<::sentry::Forks*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sentry.StatusData.fork_data)
}
inline ::sentry::Forks* StatusData::release_fork_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::sentry::Forks* released = _impl_.fork_data_;
  _impl_.fork_data_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::sentry::Forks* StatusData::unsafe_arena_release_fork_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:sentry.StatusData.fork_data)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::sentry::Forks* temp = _impl_.fork_data_;
  _impl_.fork_data_ = nullptr;
  return temp;
}
inline ::sentry::Forks* StatusData::_internal_mutable_fork_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.fork_data_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::sentry::Forks>(GetArena());
    _impl_.fork_data_ = reinterpret_cast<::sentry::Forks*>(p);
  }
  return _impl_.fork_data_;
}
inline ::sentry::Forks* StatusData::mutable_fork_data() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::sentry::Forks* _msg = _internal_mutable_fork_data();
  // @@protoc_insertion_point(field_mutable:sentry.StatusData.fork_data)
  return _msg;
}
inline void StatusData::set_allocated_fork_data(::sentry::Forks* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.fork_data_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.fork_data_ = reinterpret_cast<::sentry::Forks*>(value);
  // @@protoc_insertion_point(field_set_allocated:sentry.StatusData.fork_data)
}

// uint64 max_block_height = 5;
inline void StatusData::clear_max_block_height() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_block_height_ = ::uint64_t{0u};
}
inline ::uint64_t StatusData::max_block_height() const {
  // @@protoc_insertion_point(field_get:sentry.StatusData.max_block_height)
  return _internal_max_block_height();
}
inline void StatusData::set_max_block_height(::uint64_t value) {
  _internal_set_max_block_height(value);
  // @@protoc_insertion_point(field_set:sentry.StatusData.max_block_height)
}
inline ::uint64_t StatusData::_internal_max_block_height() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.max_block_height_;
}
inline void StatusData::_internal_set_max_block_height(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_block_height_ = value;
}

// uint64 max_block_time = 6;
inline void StatusData::clear_max_block_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_block_time_ = ::uint64_t{0u};
}
inline ::uint64_t StatusData::max_block_time() const {
  // @@protoc_insertion_point(field_get:sentry.StatusData.max_block_time)
  return _internal_max_block_time();
}
inline void StatusData::set_max_block_time(::uint64_t value) {
  _internal_set_max_block_time(value);
  // @@protoc_insertion_point(field_set:sentry.StatusData.max_block_time)
}
inline ::uint64_t StatusData::_internal_max_block_time() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.max_block_time_;
}
inline void StatusData::_internal_set_max_block_time(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_block_time_ = value;
}

// -------------------------------------------------------------------

// SetStatusReply

// -------------------------------------------------------------------

// HandShakeReply

// .sentry.Protocol protocol = 1;
inline void HandShakeReply::clear_protocol() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.protocol_ = 0;
}
inline ::sentry::Protocol HandShakeReply::protocol() const {
  // @@protoc_insertion_point(field_get:sentry.HandShakeReply.protocol)
  return _internal_protocol();
}
inline void HandShakeReply::set_protocol(::sentry::Protocol value) {
  _internal_set_protocol(value);
  // @@protoc_insertion_point(field_set:sentry.HandShakeReply.protocol)
}
inline ::sentry::Protocol HandShakeReply::_internal_protocol() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::sentry::Protocol>(_impl_.protocol_);
}
inline void HandShakeReply::_internal_set_protocol(::sentry::Protocol value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.protocol_ = value;
}

// -------------------------------------------------------------------

// MessagesRequest

// repeated .sentry.MessageId ids = 1;
inline int MessagesRequest::_internal_ids_size() const {
  return _internal_ids().size();
}
inline int MessagesRequest::ids_size() const {
  return _internal_ids_size();
}
inline void MessagesRequest::clear_ids() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ids_.Clear();
}
inline ::sentry::MessageId MessagesRequest::ids(int index) const {
  // @@protoc_insertion_point(field_get:sentry.MessagesRequest.ids)
  return static_cast<::sentry::MessageId>(_internal_ids().Get(index));
}
inline void MessagesRequest::set_ids(int index, ::sentry::MessageId value) {
  _internal_mutable_ids()->Set(index, value);
  // @@protoc_insertion_point(field_set:sentry.MessagesRequest.ids)
}
inline void MessagesRequest::add_ids(::sentry::MessageId value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_ids()->Add(value);
  // @@protoc_insertion_point(field_add:sentry.MessagesRequest.ids)
}
inline const ::google::protobuf::RepeatedField<int>& MessagesRequest::ids() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:sentry.MessagesRequest.ids)
  return _internal_ids();
}
inline ::google::protobuf::RepeatedField<int>* MessagesRequest::mutable_ids()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:sentry.MessagesRequest.ids)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_ids();
}
inline const ::google::protobuf::RepeatedField<int>& MessagesRequest::_internal_ids()
    const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ids_;
}
inline ::google::protobuf::RepeatedField<int>* MessagesRequest::_internal_mutable_ids() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.ids_;
}

// -------------------------------------------------------------------

// PeersReply

// repeated .types.PeerInfo peers = 1;
inline int PeersReply::_internal_peers_size() const {
  return _internal_peers().size();
}
inline int PeersReply::peers_size() const {
  return _internal_peers_size();
}
inline ::types::PeerInfo* PeersReply::mutable_peers(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:sentry.PeersReply.peers)
  return _internal_mutable_peers()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::types::PeerInfo>* PeersReply::mutable_peers()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:sentry.PeersReply.peers)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_peers();
}
inline const ::types::PeerInfo& PeersReply::peers(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sentry.PeersReply.peers)
  return _internal_peers().Get(index);
}
inline ::types::PeerInfo* PeersReply::add_peers() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::types::PeerInfo* _add = _internal_mutable_peers()->Add();
  // @@protoc_insertion_point(field_add:sentry.PeersReply.peers)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::types::PeerInfo>& PeersReply::peers() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:sentry.PeersReply.peers)
  return _internal_peers();
}
inline const ::google::protobuf::RepeatedPtrField<::types::PeerInfo>&
PeersReply::_internal_peers() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.peers_;
}
inline ::google::protobuf::RepeatedPtrField<::types::PeerInfo>*
PeersReply::_internal_mutable_peers() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.peers_;
}

// -------------------------------------------------------------------

// PeerCountRequest

// -------------------------------------------------------------------

// PeerCountPerProtocol

// .sentry.Protocol protocol = 1;
inline void PeerCountPerProtocol::clear_protocol() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.protocol_ = 0;
}
inline ::sentry::Protocol PeerCountPerProtocol::protocol() const {
  // @@protoc_insertion_point(field_get:sentry.PeerCountPerProtocol.protocol)
  return _internal_protocol();
}
inline void PeerCountPerProtocol::set_protocol(::sentry::Protocol value) {
  _internal_set_protocol(value);
  // @@protoc_insertion_point(field_set:sentry.PeerCountPerProtocol.protocol)
}
inline ::sentry::Protocol PeerCountPerProtocol::_internal_protocol() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::sentry::Protocol>(_impl_.protocol_);
}
inline void PeerCountPerProtocol::_internal_set_protocol(::sentry::Protocol value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.protocol_ = value;
}

// uint64 count = 2;
inline void PeerCountPerProtocol::clear_count() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.count_ = ::uint64_t{0u};
}
inline ::uint64_t PeerCountPerProtocol::count() const {
  // @@protoc_insertion_point(field_get:sentry.PeerCountPerProtocol.count)
  return _internal_count();
}
inline void PeerCountPerProtocol::set_count(::uint64_t value) {
  _internal_set_count(value);
  // @@protoc_insertion_point(field_set:sentry.PeerCountPerProtocol.count)
}
inline ::uint64_t PeerCountPerProtocol::_internal_count() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.count_;
}
inline void PeerCountPerProtocol::_internal_set_count(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.count_ = value;
}

// -------------------------------------------------------------------

// PeerCountReply

// uint64 count = 1;
inline void PeerCountReply::clear_count() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.count_ = ::uint64_t{0u};
}
inline ::uint64_t PeerCountReply::count() const {
  // @@protoc_insertion_point(field_get:sentry.PeerCountReply.count)
  return _internal_count();
}
inline void PeerCountReply::set_count(::uint64_t value) {
  _internal_set_count(value);
  // @@protoc_insertion_point(field_set:sentry.PeerCountReply.count)
}
inline ::uint64_t PeerCountReply::_internal_count() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.count_;
}
inline void PeerCountReply::_internal_set_count(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.count_ = value;
}

// repeated .sentry.PeerCountPerProtocol counts_per_protocol = 2;
inline int PeerCountReply::_internal_counts_per_protocol_size() const {
  return _internal_counts_per_protocol().size();
}
inline int PeerCountReply::counts_per_protocol_size() const {
  return _internal_counts_per_protocol_size();
}
inline void PeerCountReply::clear_counts_per_protocol() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.counts_per_protocol_.Clear();
}
inline ::sentry::PeerCountPerProtocol* PeerCountReply::mutable_counts_per_protocol(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:sentry.PeerCountReply.counts_per_protocol)
  return _internal_mutable_counts_per_protocol()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::sentry::PeerCountPerProtocol>* PeerCountReply::mutable_counts_per_protocol()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:sentry.PeerCountReply.counts_per_protocol)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_counts_per_protocol();
}
inline const ::sentry::PeerCountPerProtocol& PeerCountReply::counts_per_protocol(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sentry.PeerCountReply.counts_per_protocol)
  return _internal_counts_per_protocol().Get(index);
}
inline ::sentry::PeerCountPerProtocol* PeerCountReply::add_counts_per_protocol() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::sentry::PeerCountPerProtocol* _add = _internal_mutable_counts_per_protocol()->Add();
  // @@protoc_insertion_point(field_add:sentry.PeerCountReply.counts_per_protocol)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::sentry::PeerCountPerProtocol>& PeerCountReply::counts_per_protocol() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:sentry.PeerCountReply.counts_per_protocol)
  return _internal_counts_per_protocol();
}
inline const ::google::protobuf::RepeatedPtrField<::sentry::PeerCountPerProtocol>&
PeerCountReply::_internal_counts_per_protocol() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.counts_per_protocol_;
}
inline ::google::protobuf::RepeatedPtrField<::sentry::PeerCountPerProtocol>*
PeerCountReply::_internal_mutable_counts_per_protocol() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.counts_per_protocol_;
}

// -------------------------------------------------------------------

// PeerByIdRequest

// .types.H512 peer_id = 1;
inline bool PeerByIdRequest::has_peer_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.peer_id_ != nullptr);
  return value;
}
inline const ::types::H512& PeerByIdRequest::_internal_peer_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::types::H512* p = _impl_.peer_id_;
  return p != nullptr ? *p : reinterpret_cast<const ::types::H512&>(::types::_H512_default_instance_);
}
inline const ::types::H512& PeerByIdRequest::peer_id() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sentry.PeerByIdRequest.peer_id)
  return _internal_peer_id();
}
inline void PeerByIdRequest::unsafe_arena_set_allocated_peer_id(::types::H512* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.peer_id_);
  }
  _impl_.peer_id_ = reinterpret_cast<::types::H512*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sentry.PeerByIdRequest.peer_id)
}
inline ::types::H512* PeerByIdRequest::release_peer_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::types::H512* released = _impl_.peer_id_;
  _impl_.peer_id_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::types::H512* PeerByIdRequest::unsafe_arena_release_peer_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:sentry.PeerByIdRequest.peer_id)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::types::H512* temp = _impl_.peer_id_;
  _impl_.peer_id_ = nullptr;
  return temp;
}
inline ::types::H512* PeerByIdRequest::_internal_mutable_peer_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.peer_id_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::types::H512>(GetArena());
    _impl_.peer_id_ = reinterpret_cast<::types::H512*>(p);
  }
  return _impl_.peer_id_;
}
inline ::types::H512* PeerByIdRequest::mutable_peer_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::types::H512* _msg = _internal_mutable_peer_id();
  // @@protoc_insertion_point(field_mutable:sentry.PeerByIdRequest.peer_id)
  return _msg;
}
inline void PeerByIdRequest::set_allocated_peer_id(::types::H512* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.peer_id_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.peer_id_ = reinterpret_cast<::types::H512*>(value);
  // @@protoc_insertion_point(field_set_allocated:sentry.PeerByIdRequest.peer_id)
}

// -------------------------------------------------------------------

// PeerByIdReply

// optional .types.PeerInfo peer = 1;
inline bool PeerByIdReply::has_peer() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.peer_ != nullptr);
  return value;
}
inline const ::types::PeerInfo& PeerByIdReply::_internal_peer() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::types::PeerInfo* p = _impl_.peer_;
  return p != nullptr ? *p : reinterpret_cast<const ::types::PeerInfo&>(::types::_PeerInfo_default_instance_);
}
inline const ::types::PeerInfo& PeerByIdReply::peer() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sentry.PeerByIdReply.peer)
  return _internal_peer();
}
inline void PeerByIdReply::unsafe_arena_set_allocated_peer(::types::PeerInfo* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.peer_);
  }
  _impl_.peer_ = reinterpret_cast<::types::PeerInfo*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sentry.PeerByIdReply.peer)
}
inline ::types::PeerInfo* PeerByIdReply::release_peer() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::types::PeerInfo* released = _impl_.peer_;
  _impl_.peer_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::types::PeerInfo* PeerByIdReply::unsafe_arena_release_peer() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:sentry.PeerByIdReply.peer)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::types::PeerInfo* temp = _impl_.peer_;
  _impl_.peer_ = nullptr;
  return temp;
}
inline ::types::PeerInfo* PeerByIdReply::_internal_mutable_peer() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.peer_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::types::PeerInfo>(GetArena());
    _impl_.peer_ = reinterpret_cast<::types::PeerInfo*>(p);
  }
  return _impl_.peer_;
}
inline ::types::PeerInfo* PeerByIdReply::mutable_peer() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::types::PeerInfo* _msg = _internal_mutable_peer();
  // @@protoc_insertion_point(field_mutable:sentry.PeerByIdReply.peer)
  return _msg;
}
inline void PeerByIdReply::set_allocated_peer(::types::PeerInfo* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.peer_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.peer_ = reinterpret_cast<::types::PeerInfo*>(value);
  // @@protoc_insertion_point(field_set_allocated:sentry.PeerByIdReply.peer)
}

// -------------------------------------------------------------------

// PeerEventsRequest

// -------------------------------------------------------------------

// PeerEvent

// .types.H512 peer_id = 1;
inline bool PeerEvent::has_peer_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.peer_id_ != nullptr);
  return value;
}
inline const ::types::H512& PeerEvent::_internal_peer_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::types::H512* p = _impl_.peer_id_;
  return p != nullptr ? *p : reinterpret_cast<const ::types::H512&>(::types::_H512_default_instance_);
}
inline const ::types::H512& PeerEvent::peer_id() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sentry.PeerEvent.peer_id)
  return _internal_peer_id();
}
inline void PeerEvent::unsafe_arena_set_allocated_peer_id(::types::H512* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.peer_id_);
  }
  _impl_.peer_id_ = reinterpret_cast<::types::H512*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sentry.PeerEvent.peer_id)
}
inline ::types::H512* PeerEvent::release_peer_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::types::H512* released = _impl_.peer_id_;
  _impl_.peer_id_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::types::H512* PeerEvent::unsafe_arena_release_peer_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:sentry.PeerEvent.peer_id)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::types::H512* temp = _impl_.peer_id_;
  _impl_.peer_id_ = nullptr;
  return temp;
}
inline ::types::H512* PeerEvent::_internal_mutable_peer_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.peer_id_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::types::H512>(GetArena());
    _impl_.peer_id_ = reinterpret_cast<::types::H512*>(p);
  }
  return _impl_.peer_id_;
}
inline ::types::H512* PeerEvent::mutable_peer_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::types::H512* _msg = _internal_mutable_peer_id();
  // @@protoc_insertion_point(field_mutable:sentry.PeerEvent.peer_id)
  return _msg;
}
inline void PeerEvent::set_allocated_peer_id(::types::H512* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.peer_id_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.peer_id_ = reinterpret_cast<::types::H512*>(value);
  // @@protoc_insertion_point(field_set_allocated:sentry.PeerEvent.peer_id)
}

// .sentry.PeerEvent.PeerEventId event_id = 2;
inline void PeerEvent::clear_event_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.event_id_ = 0;
}
inline ::sentry::PeerEvent_PeerEventId PeerEvent::event_id() const {
  // @@protoc_insertion_point(field_get:sentry.PeerEvent.event_id)
  return _internal_event_id();
}
inline void PeerEvent::set_event_id(::sentry::PeerEvent_PeerEventId value) {
  _internal_set_event_id(value);
  // @@protoc_insertion_point(field_set:sentry.PeerEvent.event_id)
}
inline ::sentry::PeerEvent_PeerEventId PeerEvent::_internal_event_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::sentry::PeerEvent_PeerEventId>(_impl_.event_id_);
}
inline void PeerEvent::_internal_set_event_id(::sentry::PeerEvent_PeerEventId value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.event_id_ = value;
}

// -------------------------------------------------------------------

// AddPeerReply

// bool success = 1;
inline void AddPeerReply::clear_success() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = false;
}
inline bool AddPeerReply::success() const {
  // @@protoc_insertion_point(field_get:sentry.AddPeerReply.success)
  return _internal_success();
}
inline void AddPeerReply::set_success(bool value) {
  _internal_set_success(value);
  // @@protoc_insertion_point(field_set:sentry.AddPeerReply.success)
}
inline bool AddPeerReply::_internal_success() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.success_;
}
inline void AddPeerReply::_internal_set_success(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace sentry


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::sentry::PeerEvent_PeerEventId> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::sentry::PeerEvent_PeerEventId>() {
  return ::sentry::PeerEvent_PeerEventId_descriptor();
}
template <>
struct is_proto_enum<::sentry::MessageId> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::sentry::MessageId>() {
  return ::sentry::MessageId_descriptor();
}
template <>
struct is_proto_enum<::sentry::PenaltyKind> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::sentry::PenaltyKind>() {
  return ::sentry::PenaltyKind_descriptor();
}
template <>
struct is_proto_enum<::sentry::Protocol> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::sentry::Protocol>() {
  return ::sentry::Protocol_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_p2psentry_2fsentry_2eproto_2epb_2eh
